=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482c8:push   ebp
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v104 [from 0x80482c8:push   ebp]
    bp = v69
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = v78
    ?1 = v79
    pf = v80
    ?3 = v81
    af = v82
    ?5 = v83
    zf = v84
    sf = v85
    tf = v86
    if = v87
    df = v88
    of = v89
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v68-0x4 [from 0x80482c8:push   ebp]; value=v69
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]

0x80482c9:mov    ebp, esp
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v104 [from 0x80482c8:push   ebp]
    bp = v141 [from 0x80482c9:mov    ebp, esp]
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = v78
    ?1 = v79
    pf = v80
    ?3 = v81
    af = v82
    ?5 = v83
    zf = v84
    sf = v85
    tf = v86
    if = v87
    df = v88
    of = v89
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v68-0x4 [from 0x80482c8:push   ebp]; value=v69
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]

0x80482cb:sub    esp, 0x08
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v221 [from 0x80482cb:sub    esp, 0x08]
    bp = v141 [from 0x80482c9:mov    ebp, esp]
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = -v214-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v79
    pf = -v204-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v81
    af = -v211-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v83
    zf = v209 [from 0x80482cb:sub    esp, 0x08]
    sf = v207 [from 0x80482cb:sub    esp, 0x08]
    tf = v86
    if = v87
    df = v88
    of = v219 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v68-0x4 [from 0x80482c8:push   ebp]; value=v69
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]

0x80482ce:call   0x08048364<call_gmon_start>
    ax = v64
    cx = v65
    dx = v66
    bx = v67
    sp = v265 [from 0x80482ce:call   0x08048364<call_gmon_start>]
    bp = v141 [from 0x80482c9:mov    ebp, esp]
    si = v70
    di = v71
    es = v72
    cs = v73
    ss = v74
    ds = v75
    fs = v76
    gs = v77
    cf = -v214-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v79
    pf = -v204-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v81
    af = -v211-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v83
    zf = v209 [from 0x80482cb:sub    esp, 0x08]
    sf = v207 [from 0x80482cb:sub    esp, 0x08]
    tf = v86
    if = v87
    df = v88
    of = v219 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v90
    iopl1 = v91
    nt = v92
    ?15 = v93
    memory = {
        size=4; addr=v221-0x4 [from 0x80482ce:call   0x08048364<call_gmon_start>]; value=0x80482d3 [from 0x80482ce:call   0x08048364<call_gmon_start>]
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364<call_gmon_start>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482d3:call   0x080483d0<frame_dummy>
    ax = v359
    cx = v360
    dx = v361
    bx = v362
    sp = v401 [from 0x80482d3:call   0x080483d0<frame_dummy>]
    bp = v364
    si = v365
    di = v366
    es = v367
    cs = v368
    ss = v369
    ds = v370
    fs = v371
    gs = v372
    cf = v373
    ?1 = v374
    pf = v375
    ?3 = v376
    af = v377
    ?5 = v378
    zf = v379
    sf = v380
    tf = v381
    if = v382
    df = v383
    of = v384
    iopl0 = v385
    iopl1 = v386
    nt = v387
    ?15 = v388
    memory = {
        size=4; addr=v363-0x4 [from 0x80482d3:call   0x080483d0<frame_dummy>]; value=0x80482d8 [from 0x80482d3:call   0x080483d0<frame_dummy>]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0<frame_dummy>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482d8:call   0x08048580<__do_global_ctors_aux>
    ax = v495
    cx = v496
    dx = v497
    bx = v498
    sp = v537 [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]
    bp = v500
    si = v501
    di = v502
    es = v503
    cs = v504
    ss = v505
    ds = v506
    fs = v507
    gs = v508
    cf = v509
    ?1 = v510
    pf = v511
    ?3 = v512
    af = v513
    ?5 = v514
    zf = v515
    sf = v516
    tf = v517
    if = v518
    df = v519
    of = v520
    iopl0 = v521
    iopl1 = v522
    nt = v523
    ?15 = v524
    memory = {
        size=4; addr=v499-0x4 [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]; value=0x80482dd [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580<__do_global_ctors_aux>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482dd:leave  
    ax = v631
    cx = v632
    dx = v633
    bx = v634
    sp = v673 [from 0x80482dd:leave  ]
    bp = v672 [from 0x80482dd:leave  ]
    si = v637
    di = v638
    es = v639
    cs = v640
    ss = v641
    ds = v642
    fs = v643
    gs = v644
    cf = v645
    ?1 = v646
    pf = v647
    ?3 = v648
    af = v649
    ?5 = v650
    zf = v651
    sf = v652
    tf = v653
    if = v654
    df = v655
    of = v656
    iopl0 = v657
    iopl1 = v658
    nt = v659
    ?15 = v660
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]

0x80482de:ret    
    ax = v631
    cx = v632
    dx = v633
    bx = v634
    sp = v717 [from 0x80482de:ret    ]
    bp = v672 [from 0x80482dd:leave  ]
    si = v637
    di = v638
    es = v639
    cs = v640
    ss = v641
    ds = v642
    fs = v643
    gs = v644
    cf = v645
    ?1 = v646
    pf = v647
    ?3 = v648
    af = v649
    ?5 = v650
    zf = v651
    sf = v652
    tf = v653
    if = v654
    df = v655
    of = v656
    iopl0 = v657
    iopl1 = v658
    nt = v659
    ?15 = v660
    memory = {}
    ip = v715 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
    ax = v781
    cx = v782
    dx = v783
    bx = v784
    sp = v785
    bp = v786
    si = v787
    di = v788
    es = v789
    cs = v790
    ss = v791
    ds = v792
    fs = v793
    gs = v794
    cf = v795
    ?1 = v796
    pf = v797
    ?3 = v798
    af = v799
    ?5 = v800
    zf = v801
    sf = v802
    tf = v803
    if = v804
    df = v805
    of = v806
    iopl0 = v807
    iopl1 = v808
    nt = v809
    ?15 = v810
    memory = {}
    ip = v817 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
    ax = v882
    cx = v883
    dx = v884
    bx = v885
    sp = v886
    bp = v887
    si = v888
    di = v889
    es = v890
    cs = v891
    ss = v892
    ds = v893
    fs = v894
    gs = v895
    cf = v896
    ?1 = v897
    pf = v898
    ?3 = v899
    af = v900
    ?5 = v901
    zf = v902
    sf = v903
    tf = v904
    if = v905
    df = v906
    of = v907
    iopl0 = v908
    iopl1 = v909
    nt = v910
    ?15 = v911
    memory = {}
    ip = v918 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
    ax = v983
    cx = v984
    dx = v985
    bx = v986
    sp = v987
    bp = v988
    si = v989
    di = v990
    es = v991
    cs = v992
    ss = v993
    ds = v994
    fs = v995
    gs = v996
    cf = v997
    ?1 = v998
    pf = v999
    ?3 = v1000
    af = v1001
    ?5 = v1002
    zf = v1003
    sf = v1004
    tf = v1005
    if = v1006
    df = v1007
    of = v1008
    iopl0 = v1009
    iopl1 = v1010
    nt = v1011
    ?15 = v1012
    memory = {}
    ip = v1019 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
    ax = v1084
    cx = v1085
    dx = v1086
    bx = v1087
    sp = v1088
    bp = v1089
    si = v1090
    di = v1091
    es = v1092
    cs = v1093
    ss = v1094
    ds = v1095
    fs = v1096
    gs = v1097
    cf = v1098
    ?1 = v1099
    pf = v1100
    ?3 = v1101
    af = v1102
    ?5 = v1103
    zf = v1104
    sf = v1105
    tf = v1106
    if = v1107
    df = v1108
    of = v1109
    iopl0 = v1110
    iopl1 = v1111
    nt = v1112
    ?15 = v1113
    memory = {}
    ip = v1120 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
    ax = v1185
    cx = v1186
    dx = v1187
    bx = v1188
    sp = v1189
    bp = v1190
    si = v1191
    di = v1192
    es = v1193
    cs = v1194
    ss = v1195
    ds = v1196
    fs = v1197
    gs = v1198
    cf = v1199
    ?1 = v1200
    pf = v1201
    ?3 = v1202
    af = v1203
    ?5 = v1204
    zf = v1205
    sf = v1206
    tf = v1207
    if = v1208
    df = v1209
    of = v1210
    iopl0 = v1211
    iopl1 = v1212
    nt = v1213
    ?15 = v1214
    memory = {}
    ip = v1221 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048340:xor    ebp, ebp
    ax = v1286
    cx = v1287
    dx = v1288
    bx = v1289
    sp = v1290
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1292
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1301
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]

0x8048342:pop    esi
    ax = v1286
    cx = v1287
    dx = v1288
    bx = v1289
    sp = v1390 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1301
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]

0x8048343:mov    ecx, esp
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1390 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1301
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]

0x8048345:and    esp, 0xf0<-0x10>
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1491 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]

0x8048348:push   eax
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1539 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1491-0x4 [from 0x8048348:push   eax]; value=v1286
    }
    ip = 0x8048349 [from 0x8048348:push   eax]

0x8048349:push   esp
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1581 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1539-0x4 [from 0x8048349:push   esp]; value=v1539 [from 0x8048348:push   eax]
    }
    ip = 0x804834a [from 0x8048349:push   esp]

0x804834a:push   edx
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1623 [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1581-0x4 [from 0x804834a:push   edx]; value=v1288
    }
    ip = 0x804834b [from 0x804834a:push   edx]

0x804834b:push   0x08048520<__libc_csu_fini>
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1665 [from 0x804834b:push   0x08048520<__libc_csu_fini>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1623-0x4 [from 0x804834b:push   0x08048520<__libc_csu_fini>]; value=0x8048520 [from 0x804834b:push   0x08048520<__libc_csu_fini>]
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520<__libc_csu_fini>]

0x8048350:push   0x080484b0<__libc_csu_init>
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1707 [from 0x8048350:push   0x080484b0<__libc_csu_init>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1665-0x4 [from 0x8048350:push   0x080484b0<__libc_csu_init>]; value=0x80484b0 [from 0x8048350:push   0x080484b0<__libc_csu_init>]
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0<__libc_csu_init>]

0x8048355:push   ecx
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1749 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1707-0x4 [from 0x8048355:push   ecx]; value=v1430 [from 0x8048343:mov    ecx, esp]
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]

0x8048356:push   esi
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1791 [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1749-0x4 [from 0x8048356:push   esi]; value=v1393 [from 0x8048342:pop    esi]
    }
    ip = 0x8048357 [from 0x8048356:push   esi]

0x8048357:push   0x08048410<main>
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1833 [from 0x8048357:push   0x08048410<main>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1791-0x4 [from 0x8048357:push   0x08048410<main>]; value=0x8048410 [from 0x8048357:push   0x08048410<main>]
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410<main>]

0x804835c:call   0x08048310<__libc_start_main@plt>
    ax = v1286
    cx = v1430 [from 0x8048343:mov    ecx, esp]
    dx = v1288
    bx = v1289
    sp = v1877 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1393 [from 0x8048342:pop    esi]
    di = v1293
    es = v1294
    cs = v1295
    ss = v1296
    ds = v1297
    fs = v1298
    gs = v1299
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1301
    pf = -v1484-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1303
    af = <top>
    ?5 = v1305
    zf = v1489 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1487 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1308
    if = v1309
    df = v1310
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1312
    iopl1 = v1313
    nt = v1314
    ?15 = v1315
    memory = {
        size=4; addr=v1833-0x4 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]; value=0x8048361 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310<__libc_start_main@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048361:hlt    
    ax = v1971
    cx = v1972
    dx = v1973
    bx = v1974
    sp = v1975
    bp = v1976
    si = v1977
    di = v1978
    es = v1979
    cs = v1980
    ss = v1981
    ds = v1982
    fs = v1983
    gs = v1984
    cf = v1985
    ?1 = v1986
    pf = v1987
    ?3 = v1988
    af = v1989
    ?5 = v1990
    zf = v1991
    sf = v1992
    tf = v1993
    if = v1994
    df = v1995
    of = v1996
    iopl0 = v1997
    iopl1 = v1998
    nt = v1999
    ?15 = v2000
    memory = {}
    ip = 0x8048361
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048364:push   ebp
    ax = v2069
    cx = v2070
    dx = v2071
    bx = v2072
    sp = v2109 [from 0x8048364:push   ebp]
    bp = v2074
    si = v2075
    di = v2076
    es = v2077
    cs = v2078
    ss = v2079
    ds = v2080
    fs = v2081
    gs = v2082
    cf = v2083
    ?1 = v2084
    pf = v2085
    ?3 = v2086
    af = v2087
    ?5 = v2088
    zf = v2089
    sf = v2090
    tf = v2091
    if = v2092
    df = v2093
    of = v2094
    iopl0 = v2095
    iopl1 = v2096
    nt = v2097
    ?15 = v2098
    memory = {
        size=4; addr=v2073-0x4 [from 0x8048364:push   ebp]; value=v2074
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]

0x8048365:mov    ebp, esp
    ax = v2069
    cx = v2070
    dx = v2071
    bx = v2072
    sp = v2109 [from 0x8048364:push   ebp]
    bp = v2146 [from 0x8048365:mov    ebp, esp]
    si = v2075
    di = v2076
    es = v2077
    cs = v2078
    ss = v2079
    ds = v2080
    fs = v2081
    gs = v2082
    cf = v2083
    ?1 = v2084
    pf = v2085
    ?3 = v2086
    af = v2087
    ?5 = v2088
    zf = v2089
    sf = v2090
    tf = v2091
    if = v2092
    df = v2093
    of = v2094
    iopl0 = v2095
    iopl1 = v2096
    nt = v2097
    ?15 = v2098
    memory = {
        size=4; addr=v2073-0x4 [from 0x8048364:push   ebp]; value=v2074
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]

0x8048367:push   ebx
    ax = v2069
    cx = v2070
    dx = v2071
    bx = v2072
    sp = v2188 [from 0x8048367:push   ebx]
    bp = v2146 [from 0x8048365:mov    ebp, esp]
    si = v2075
    di = v2076
    es = v2077
    cs = v2078
    ss = v2079
    ds = v2080
    fs = v2081
    gs = v2082
    cf = v2083
    ?1 = v2084
    pf = v2085
    ?3 = v2086
    af = v2087
    ?5 = v2088
    zf = v2089
    sf = v2090
    tf = v2091
    if = v2092
    df = v2093
    of = v2094
    iopl0 = v2095
    iopl1 = v2096
    nt = v2097
    ?15 = v2098
    memory = {
        size=4; addr=v2109-0x4 [from 0x8048367:push   ebx]; value=v2072
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]

0x8048368:push   ecx
    ax = v2069
    cx = v2070
    dx = v2071
    bx = v2072
    sp = v2230 [from 0x8048368:push   ecx]
    bp = v2146 [from 0x8048365:mov    ebp, esp]
    si = v2075
    di = v2076
    es = v2077
    cs = v2078
    ss = v2079
    ds = v2080
    fs = v2081
    gs = v2082
    cf = v2083
    ?1 = v2084
    pf = v2085
    ?3 = v2086
    af = v2087
    ?5 = v2088
    zf = v2089
    sf = v2090
    tf = v2091
    if = v2092
    df = v2093
    of = v2094
    iopl0 = v2095
    iopl1 = v2096
    nt = v2097
    ?15 = v2098
    memory = {
        size=4; addr=v2188-0x4 [from 0x8048368:push   ecx]; value=v2070
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]

0x8048369:call   0x0804836e<<Insn>>
    ax = v2069
    cx = v2070
    dx = v2071
    bx = v2072
    sp = v2274 [from 0x8048369:call   0x0804836e<<Insn>>]
    bp = v2146 [from 0x8048365:mov    ebp, esp]
    si = v2075
    di = v2076
    es = v2077
    cs = v2078
    ss = v2079
    ds = v2080
    fs = v2081
    gs = v2082
    cf = v2083
    ?1 = v2084
    pf = v2085
    ?3 = v2086
    af = v2087
    ?5 = v2088
    zf = v2089
    sf = v2090
    tf = v2091
    if = v2092
    df = v2093
    of = v2094
    iopl0 = v2095
    iopl1 = v2096
    nt = v2097
    ?15 = v2098
    memory = {
        size=4; addr=v2230-0x4 [from 0x8048369:call   0x0804836e<<Insn>>]; value=0x804836e [from 0x8048369:call   0x0804836e<<Insn>>]
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804836e:pop    ebx
    ax = v2368
    cx = v2369
    dx = v2370
    bx = v2408 [from 0x804836e:pop    ebx]
    sp = v2405 [from 0x804836e:pop    ebx]
    bp = v2373
    si = v2374
    di = v2375
    es = v2376
    cs = v2377
    ss = v2378
    ds = v2379
    fs = v2380
    gs = v2381
    cf = v2382
    ?1 = v2383
    pf = v2384
    ?3 = v2385
    af = v2386
    ?5 = v2387
    zf = v2388
    sf = v2389
    tf = v2390
    if = v2391
    df = v2392
    of = v2393
    iopl0 = v2394
    iopl1 = v2395
    nt = v2396
    ?15 = v2397
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]

0x804836f:add    ebx, 0x0000135a
    ax = v2368
    cx = v2369
    dx = v2370
    bx = v2484 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2405 [from 0x804836e:pop    ebx]
    bp = v2373
    si = v2374
    di = v2375
    es = v2376
    cs = v2377
    ss = v2378
    ds = v2379
    fs = v2380
    gs = v2381
    cf = v2478 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2383
    pf = -v2469-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2385
    af = v2476 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2387
    zf = v2474 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2472 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2390
    if = v2391
    df = v2392
    of = v2482 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2394
    iopl1 = v2395
    nt = v2396
    ?15 = v2397
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]

0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2368
    cx = v2369
    dx = v2525 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2484 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2405 [from 0x804836e:pop    ebx]
    bp = v2373
    si = v2374
    di = v2375
    es = v2376
    cs = v2377
    ss = v2378
    ds = v2379
    fs = v2380
    gs = v2381
    cf = v2478 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2383
    pf = -v2469-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2385
    af = v2476 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2387
    zf = v2474 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2472 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2390
    if = v2391
    df = v2392
    of = v2482 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2394
    iopl1 = v2395
    nt = v2396
    ?15 = v2397
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]

0x804837b:test   edx, edx
    ax = v2368
    cx = v2369
    dx = v2525 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2484 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2405 [from 0x804836e:pop    ebx]
    bp = v2373
    si = v2374
    di = v2375
    es = v2376
    cs = v2377
    ss = v2378
    ds = v2379
    fs = v2380
    gs = v2381
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2383
    pf = -v2579-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2385
    af = <top>
    ?5 = v2387
    zf = v2584 [from 0x804837b:test   edx, edx]
    sf = v2582 [from 0x804837b:test   edx, edx]
    tf = v2390
    if = v2391
    df = v2392
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2394
    iopl1 = v2395
    nt = v2396
    ?15 = v2397
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]

0x804837d:je     0x08048384<<Insn>>
    ax = v2368
    cx = v2369
    dx = v2525 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2484 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2405 [from 0x804836e:pop    ebx]
    bp = v2373
    si = v2374
    di = v2375
    es = v2376
    cs = v2377
    ss = v2378
    ds = v2379
    fs = v2380
    gs = v2381
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2383
    pf = -v2579-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2385
    af = <top>
    ?5 = v2387
    zf = v2584 [from 0x804837b:test   edx, edx]
    sf = v2582 [from 0x804837b:test   edx, edx]
    tf = v2390
    if = v2391
    df = v2392
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2394
    iopl1 = v2395
    nt = v2396
    ?15 = v2397
    memory = {}
    ip = v2630 [from 0x804837d:je     0x08048384<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804837f:call   0x08048330<__gmon_start__@plt>
    ax = v2755
    cx = v2756
    dx = v2757
    bx = v2758
    sp = v2797 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]
    bp = v2760
    si = v2761
    di = v2762
    es = v2763
    cs = v2764
    ss = v2765
    ds = v2766
    fs = v2767
    gs = v2768
    cf = v2769
    ?1 = v2770
    pf = v2771
    ?3 = v2772
    af = v2773
    ?5 = v2774
    zf = v2775
    sf = v2776
    tf = v2777
    if = v2778
    df = v2779
    of = v2780
    iopl0 = v2781
    iopl1 = v2782
    nt = v2783
    ?15 = v2784
    memory = {
        size=4; addr=v2759-0x4 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]; value=0x8048384 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330<__gmon_start__@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048384:pop    eax
    ax = v2931 [from 0x8048384:pop    eax]
    cx = v2892
    dx = v2893
    bx = v2894
    sp = v2928 [from 0x8048384:pop    eax]
    bp = v2896
    si = v2897
    di = v2898
    es = v2899
    cs = v2900
    ss = v2901
    ds = v2902
    fs = v2903
    gs = v2904
    cf = v2905
    ?1 = v2906
    pf = v2907
    ?3 = v2908
    af = v2909
    ?5 = v2910
    zf = v2911
    sf = v2912
    tf = v2913
    if = v2914
    df = v2915
    of = v2916
    iopl0 = v2917
    iopl1 = v2918
    nt = v2919
    ?15 = v2920
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]

0x8048385:pop    ebx
    ax = v2931 [from 0x8048384:pop    eax]
    cx = v2892
    dx = v2893
    bx = v2973 [from 0x8048385:pop    ebx]
    sp = v2970 [from 0x8048385:pop    ebx]
    bp = v2896
    si = v2897
    di = v2898
    es = v2899
    cs = v2900
    ss = v2901
    ds = v2902
    fs = v2903
    gs = v2904
    cf = v2905
    ?1 = v2906
    pf = v2907
    ?3 = v2908
    af = v2909
    ?5 = v2910
    zf = v2911
    sf = v2912
    tf = v2913
    if = v2914
    df = v2915
    of = v2916
    iopl0 = v2917
    iopl1 = v2918
    nt = v2919
    ?15 = v2920
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]

0x8048386:leave  
    ax = v2931 [from 0x8048384:pop    eax]
    cx = v2892
    dx = v2893
    bx = v2973 [from 0x8048385:pop    ebx]
    sp = v3017 [from 0x8048386:leave  ]
    bp = v3016 [from 0x8048386:leave  ]
    si = v2897
    di = v2898
    es = v2899
    cs = v2900
    ss = v2901
    ds = v2902
    fs = v2903
    gs = v2904
    cf = v2905
    ?1 = v2906
    pf = v2907
    ?3 = v2908
    af = v2909
    ?5 = v2910
    zf = v2911
    sf = v2912
    tf = v2913
    if = v2914
    df = v2915
    of = v2916
    iopl0 = v2917
    iopl1 = v2918
    nt = v2919
    ?15 = v2920
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]

0x8048387:ret    
    ax = v2931 [from 0x8048384:pop    eax]
    cx = v2892
    dx = v2893
    bx = v2973 [from 0x8048385:pop    ebx]
    sp = v3061 [from 0x8048387:ret    ]
    bp = v3016 [from 0x8048386:leave  ]
    si = v2897
    di = v2898
    es = v2899
    cs = v2900
    ss = v2901
    ds = v2902
    fs = v2903
    gs = v2904
    cf = v2905
    ?1 = v2906
    pf = v2907
    ?3 = v2908
    af = v2909
    ?5 = v2910
    zf = v2911
    sf = v2912
    tf = v2913
    if = v2914
    df = v2915
    of = v2916
    iopl0 = v2917
    iopl1 = v2918
    nt = v2919
    ?15 = v2920
    memory = {}
    ip = v3059 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048390:push   ebp
    ax = v3125
    cx = v3126
    dx = v3127
    bx = v3128
    sp = v3165 [from 0x8048390:push   ebp]
    bp = v3130
    si = v3131
    di = v3132
    es = v3133
    cs = v3134
    ss = v3135
    ds = v3136
    fs = v3137
    gs = v3138
    cf = v3139
    ?1 = v3140
    pf = v3141
    ?3 = v3142
    af = v3143
    ?5 = v3144
    zf = v3145
    sf = v3146
    tf = v3147
    if = v3148
    df = v3149
    of = v3150
    iopl0 = v3151
    iopl1 = v3152
    nt = v3153
    ?15 = v3154
    memory = {
        size=4; addr=v3129-0x4 [from 0x8048390:push   ebp]; value=v3130
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]

0x8048391:mov    ebp, esp
    ax = v3125
    cx = v3126
    dx = v3127
    bx = v3128
    sp = v3165 [from 0x8048390:push   ebp]
    bp = v3202 [from 0x8048391:mov    ebp, esp]
    si = v3131
    di = v3132
    es = v3133
    cs = v3134
    ss = v3135
    ds = v3136
    fs = v3137
    gs = v3138
    cf = v3139
    ?1 = v3140
    pf = v3141
    ?3 = v3142
    af = v3143
    ?5 = v3144
    zf = v3145
    sf = v3146
    tf = v3147
    if = v3148
    df = v3149
    of = v3150
    iopl0 = v3151
    iopl1 = v3152
    nt = v3153
    ?15 = v3154
    memory = {
        size=4; addr=v3129-0x4 [from 0x8048390:push   ebp]; value=v3130
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]

0x8048393:sub    esp, 0x08
    ax = v3125
    cx = v3126
    dx = v3127
    bx = v3128
    sp = v3282 [from 0x8048393:sub    esp, 0x08]
    bp = v3202 [from 0x8048391:mov    ebp, esp]
    si = v3131
    di = v3132
    es = v3133
    cs = v3134
    ss = v3135
    ds = v3136
    fs = v3137
    gs = v3138
    cf = -v3275-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3140
    pf = -v3265-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3142
    af = -v3272-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3144
    zf = v3270 [from 0x8048393:sub    esp, 0x08]
    sf = v3268 [from 0x8048393:sub    esp, 0x08]
    tf = v3147
    if = v3148
    df = v3149
    of = v3280 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3151
    iopl1 = v3152
    nt = v3153
    ?15 = v3154
    memory = {
        size=4; addr=v3129-0x4 [from 0x8048390:push   ebp]; value=v3130
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]

0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
    ax = v3125
    cx = v3126
    dx = v3127
    bx = v3128
    sp = v3282 [from 0x8048393:sub    esp, 0x08]
    bp = v3202 [from 0x8048391:mov    ebp, esp]
    si = v3131
    di = v3132
    es = v3133
    cs = v3134
    ss = v3135
    ds = v3136
    fs = v3137
    gs = v3138
    cf = -v3357-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?1 = v3140
    pf = -v3347-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?3 = v3142
    af = -v3354-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?5 = v3144
    zf = v3352 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    sf = v3350 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    tf = v3147
    if = v3148
    df = v3149
    of = v3362 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    iopl0 = v3151
    iopl1 = v3152
    nt = v3153
    ?15 = v3154
    memory = {
        size=4; addr=v3129-0x4 [from 0x8048390:push   ebp]; value=v3130
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]

0x804839d:jne    0x080483cc<<Insn>>
    ax = v3125
    cx = v3126
    dx = v3127
    bx = v3128
    sp = v3282 [from 0x8048393:sub    esp, 0x08]
    bp = v3202 [from 0x8048391:mov    ebp, esp]
    si = v3131
    di = v3132
    es = v3133
    cs = v3134
    ss = v3135
    ds = v3136
    fs = v3137
    gs = v3138
    cf = -v3357-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?1 = v3140
    pf = -v3347-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?3 = v3142
    af = -v3354-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    ?5 = v3144
    zf = v3352 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    sf = v3350 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    tf = v3147
    if = v3148
    df = v3149
    of = v3362 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00]
    iopl0 = v3151
    iopl1 = v3152
    nt = v3153
    ?15 = v3154
    memory = {
        size=4; addr=v3129-0x4 [from 0x8048390:push   ebp]; value=v3130
    }
    ip = v3403 [from 0x804839d:jne    0x080483cc<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    ax = v3565 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3529
    dx = v3530
    bx = v3531
    sp = v3532
    bp = v3533
    si = v3534
    di = v3535
    es = v3536
    cs = v3537
    ss = v3538
    ds = v3539
    fs = v3540
    gs = v3541
    cf = v3542
    ?1 = v3543
    pf = v3544
    ?3 = v3545
    af = v3546
    ?5 = v3547
    zf = v3548
    sf = v3549
    tf = v3550
    if = v3551
    df = v3552
    of = v3553
    iopl0 = v3554
    iopl1 = v3555
    nt = v3556
    ?15 = v3557
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]

0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3565 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3529
    dx = v3604 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3531
    sp = v3532
    bp = v3533
    si = v3534
    di = v3535
    es = v3536
    cs = v3537
    ss = v3538
    ds = v3539
    fs = v3540
    gs = v3541
    cf = v3542
    ?1 = v3543
    pf = v3544
    ?3 = v3545
    af = v3546
    ?5 = v3547
    zf = v3548
    sf = v3549
    tf = v3550
    if = v3551
    df = v3552
    of = v3553
    iopl0 = v3554
    iopl1 = v3555
    nt = v3556
    ?15 = v3557
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]

0x80483a6:test   edx, edx
    ax = v3565 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3529
    dx = v3604 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3531
    sp = v3532
    bp = v3533
    si = v3534
    di = v3535
    es = v3536
    cs = v3537
    ss = v3538
    ds = v3539
    fs = v3540
    gs = v3541
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3543
    pf = -v3658-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3545
    af = <top>
    ?5 = v3547
    zf = v3663 [from 0x80483a6:test   edx, edx]
    sf = v3661 [from 0x80483a6:test   edx, edx]
    tf = v3550
    if = v3551
    df = v3552
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3554
    iopl1 = v3555
    nt = v3556
    ?15 = v3557
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]

0x80483a8:je     0x080483c5<<Insn>>
    ax = v3565 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v3529
    dx = v3604 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3531
    sp = v3532
    bp = v3533
    si = v3534
    di = v3535
    es = v3536
    cs = v3537
    ss = v3538
    ds = v3539
    fs = v3540
    gs = v3541
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3543
    pf = -v3658-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3545
    af = <top>
    ?5 = v3547
    zf = v3663 [from 0x80483a6:test   edx, edx]
    sf = v3661 [from 0x80483a6:test   edx, edx]
    tf = v3550
    if = v3551
    df = v3552
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3554
    iopl1 = v3555
    nt = v3556
    ?15 = v3557
    memory = {}
    ip = v3709 [from 0x80483a8:je     0x080483c5<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v3834
    cx = v3835
    dx = v3836
    bx = v3837
    sp = v3838
    bp = v3839
    si = v3871 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3841
    es = v3842
    cs = v3843
    ss = v3844
    ds = v3845
    fs = v3846
    gs = v3847
    cf = v3848
    ?1 = v3849
    pf = v3850
    ?3 = v3851
    af = v3852
    ?5 = v3853
    zf = v3854
    sf = v3855
    tf = v3856
    if = v3857
    df = v3858
    of = v3859
    iopl0 = v3860
    iopl1 = v3861
    nt = v3862
    ?15 = v3863
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]

0x80483b0:add    eax, 0x04
    ax = v3947 [from 0x80483b0:add    eax, 0x04]
    cx = v3835
    dx = v3836
    bx = v3837
    sp = v3838
    bp = v3839
    si = v3871 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3841
    es = v3842
    cs = v3843
    ss = v3844
    ds = v3845
    fs = v3846
    gs = v3847
    cf = v3941 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3849
    pf = -v3932-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3851
    af = v3939 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3853
    zf = v3937 [from 0x80483b0:add    eax, 0x04]
    sf = v3935 [from 0x80483b0:add    eax, 0x04]
    tf = v3856
    if = v3857
    df = v3858
    of = v3945 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3860
    iopl1 = v3861
    nt = v3862
    ?15 = v3863
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]

0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
    ax = v3947 [from 0x80483b0:add    eax, 0x04]
    cx = v3835
    dx = v3836
    bx = v3837
    sp = v3838
    bp = v3839
    si = v3871 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3841
    es = v3842
    cs = v3843
    ss = v3844
    ds = v3845
    fs = v3846
    gs = v3847
    cf = v3941 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3849
    pf = -v3932-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3851
    af = v3939 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3853
    zf = v3937 [from 0x80483b0:add    eax, 0x04]
    sf = v3935 [from 0x80483b0:add    eax, 0x04]
    tf = v3856
    if = v3857
    df = v3858
    of = v3945 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3860
    iopl1 = v3861
    nt = v3862
    ?15 = v3863
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax]; value=v3947 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax]

0x80483b8:call   edx
    ax = v3947 [from 0x80483b0:add    eax, 0x04]
    cx = v3835
    dx = v3836
    bx = v3837
    sp = v4030 [from 0x80483b8:call   edx]
    bp = v3839
    si = v3871 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3841
    es = v3842
    cs = v3843
    ss = v3844
    ds = v3845
    fs = v3846
    gs = v3847
    cf = v3941 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3849
    pf = -v3932-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3851
    af = v3939 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3853
    zf = v3937 [from 0x80483b0:add    eax, 0x04]
    sf = v3935 [from 0x80483b0:add    eax, 0x04]
    tf = v3856
    if = v3857
    df = v3858
    of = v3945 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3860
    iopl1 = v3861
    nt = v3862
    ?15 = v3863
    memory = {
        size=4; addr=v3838-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v3836
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    ax = v4131 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4095
    dx = v4096
    bx = v4097
    sp = v4098
    bp = v4099
    si = v4100
    di = v4101
    es = v4102
    cs = v4103
    ss = v4104
    ds = v4105
    fs = v4106
    gs = v4107
    cf = v4108
    ?1 = v4109
    pf = v4110
    ?3 = v4111
    af = v4112
    ?5 = v4113
    zf = v4114
    sf = v4115
    tf = v4116
    if = v4117
    df = v4118
    of = v4119
    iopl0 = v4120
    iopl1 = v4121
    nt = v4122
    ?15 = v4123
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]

0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4131 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4095
    dx = v4170 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4097
    sp = v4098
    bp = v4099
    si = v4100
    di = v4101
    es = v4102
    cs = v4103
    ss = v4104
    ds = v4105
    fs = v4106
    gs = v4107
    cf = v4108
    ?1 = v4109
    pf = v4110
    ?3 = v4111
    af = v4112
    ?5 = v4113
    zf = v4114
    sf = v4115
    tf = v4116
    if = v4117
    df = v4118
    of = v4119
    iopl0 = v4120
    iopl1 = v4121
    nt = v4122
    ?15 = v4123
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]

0x80483c1:test   edx, edx
    ax = v4131 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4095
    dx = v4170 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4097
    sp = v4098
    bp = v4099
    si = v4100
    di = v4101
    es = v4102
    cs = v4103
    ss = v4104
    ds = v4105
    fs = v4106
    gs = v4107
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4109
    pf = -v4224-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4111
    af = <top>
    ?5 = v4113
    zf = v4229 [from 0x80483c1:test   edx, edx]
    sf = v4227 [from 0x80483c1:test   edx, edx]
    tf = v4116
    if = v4117
    df = v4118
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4120
    iopl1 = v4121
    nt = v4122
    ?15 = v4123
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]

0x80483c3:jne    0x080483b0<<Insn>>
    ax = v4131 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]]
    cx = v4095
    dx = v4170 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4097
    sp = v4098
    bp = v4099
    si = v4100
    di = v4101
    es = v4102
    cs = v4103
    ss = v4104
    ds = v4105
    fs = v4106
    gs = v4107
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4109
    pf = -v4224-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4111
    af = <top>
    ?5 = v4113
    zf = v4229 [from 0x80483c1:test   edx, edx]
    sf = v4227 [from 0x80483c1:test   edx, edx]
    tf = v4116
    if = v4117
    df = v4118
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4120
    iopl1 = v4121
    nt = v4122
    ?15 = v4123
    memory = {}
    ip = v4276 [from 0x80483c3:jne    0x080483b0<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
    ax = v4401
    cx = v4402
    dx = v4403
    bx = v4404
    sp = v4405
    bp = v4406
    si = v4407
    di = v4408
    es = v4409
    cs = v4410
    ss = v4411
    ds = v4412
    fs = v4413
    gs = v4414
    cf = v4415
    ?1 = v4416
    pf = v4417
    ?3 = v4418
    af = v4419
    ?5 = v4420
    zf = v4421
    sf = v4422
    tf = v4423
    if = v4424
    df = v4425
    of = v4426
    iopl0 = v4427
    iopl1 = v4428
    nt = v4429
    ?15 = v4430
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]

0x80483cc:leave  
    ax = v4401
    cx = v4402
    dx = v4403
    bx = v4404
    sp = v4482 [from 0x80483cc:leave  ]
    bp = v4481 [from 0x80483cc:leave  ]
    si = v4407
    di = v4408
    es = v4409
    cs = v4410
    ss = v4411
    ds = v4412
    fs = v4413
    gs = v4414
    cf = v4415
    ?1 = v4416
    pf = v4417
    ?3 = v4418
    af = v4419
    ?5 = v4420
    zf = v4421
    sf = v4422
    tf = v4423
    if = v4424
    df = v4425
    of = v4426
    iopl0 = v4427
    iopl1 = v4428
    nt = v4429
    ?15 = v4430
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]

0x80483cd:ret    
    ax = v4401
    cx = v4402
    dx = v4403
    bx = v4404
    sp = v4526 [from 0x80483cd:ret    ]
    bp = v4481 [from 0x80483cc:leave  ]
    si = v4407
    di = v4408
    es = v4409
    cs = v4410
    ss = v4411
    ds = v4412
    fs = v4413
    gs = v4414
    cf = v4415
    ?1 = v4416
    pf = v4417
    ?3 = v4418
    af = v4419
    ?5 = v4420
    zf = v4421
    sf = v4422
    tf = v4423
    if = v4424
    df = v4425
    of = v4426
    iopl0 = v4427
    iopl1 = v4428
    nt = v4429
    ?15 = v4430
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01]
    }
    ip = v4524 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483d0:push   ebp
    ax = v4590
    cx = v4591
    dx = v4592
    bx = v4593
    sp = v4630 [from 0x80483d0:push   ebp]
    bp = v4595
    si = v4596
    di = v4597
    es = v4598
    cs = v4599
    ss = v4600
    ds = v4601
    fs = v4602
    gs = v4603
    cf = v4604
    ?1 = v4605
    pf = v4606
    ?3 = v4607
    af = v4608
    ?5 = v4609
    zf = v4610
    sf = v4611
    tf = v4612
    if = v4613
    df = v4614
    of = v4615
    iopl0 = v4616
    iopl1 = v4617
    nt = v4618
    ?15 = v4619
    memory = {
        size=4; addr=v4594-0x4 [from 0x80483d0:push   ebp]; value=v4595
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]

0x80483d1:mov    ebp, esp
    ax = v4590
    cx = v4591
    dx = v4592
    bx = v4593
    sp = v4630 [from 0x80483d0:push   ebp]
    bp = v4667 [from 0x80483d1:mov    ebp, esp]
    si = v4596
    di = v4597
    es = v4598
    cs = v4599
    ss = v4600
    ds = v4601
    fs = v4602
    gs = v4603
    cf = v4604
    ?1 = v4605
    pf = v4606
    ?3 = v4607
    af = v4608
    ?5 = v4609
    zf = v4610
    sf = v4611
    tf = v4612
    if = v4613
    df = v4614
    of = v4615
    iopl0 = v4616
    iopl1 = v4617
    nt = v4618
    ?15 = v4619
    memory = {
        size=4; addr=v4594-0x4 [from 0x80483d0:push   ebp]; value=v4595
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]

0x80483d3:sub    esp, 0x08
    ax = v4590
    cx = v4591
    dx = v4592
    bx = v4593
    sp = v4747 [from 0x80483d3:sub    esp, 0x08]
    bp = v4667 [from 0x80483d1:mov    ebp, esp]
    si = v4596
    di = v4597
    es = v4598
    cs = v4599
    ss = v4600
    ds = v4601
    fs = v4602
    gs = v4603
    cf = -v4740-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4605
    pf = -v4730-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4607
    af = -v4737-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4609
    zf = v4735 [from 0x80483d3:sub    esp, 0x08]
    sf = v4733 [from 0x80483d3:sub    esp, 0x08]
    tf = v4612
    if = v4613
    df = v4614
    of = v4745 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4616
    iopl1 = v4617
    nt = v4618
    ?15 = v4619
    memory = {
        size=4; addr=v4594-0x4 [from 0x80483d0:push   ebp]; value=v4595
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]

0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
    ax = v4786 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]
    cx = v4591
    dx = v4592
    bx = v4593
    sp = v4747 [from 0x80483d3:sub    esp, 0x08]
    bp = v4667 [from 0x80483d1:mov    ebp, esp]
    si = v4596
    di = v4597
    es = v4598
    cs = v4599
    ss = v4600
    ds = v4601
    fs = v4602
    gs = v4603
    cf = -v4740-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4605
    pf = -v4730-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4607
    af = -v4737-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4609
    zf = v4735 [from 0x80483d3:sub    esp, 0x08]
    sf = v4733 [from 0x80483d3:sub    esp, 0x08]
    tf = v4612
    if = v4613
    df = v4614
    of = v4745 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4616
    iopl1 = v4617
    nt = v4618
    ?15 = v4619
    memory = {
        size=4; addr=v4594-0x4 [from 0x80483d0:push   ebp]; value=v4595
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]

0x80483db:test   eax, eax
    ax = v4786 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]
    cx = v4591
    dx = v4592
    bx = v4593
    sp = v4747 [from 0x80483d3:sub    esp, 0x08]
    bp = v4667 [from 0x80483d1:mov    ebp, esp]
    si = v4596
    di = v4597
    es = v4598
    cs = v4599
    ss = v4600
    ds = v4601
    fs = v4602
    gs = v4603
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4605
    pf = -v4840-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4607
    af = <top>
    ?5 = v4609
    zf = v4845 [from 0x80483db:test   eax, eax]
    sf = v4843 [from 0x80483db:test   eax, eax]
    tf = v4612
    if = v4613
    df = v4614
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4616
    iopl1 = v4617
    nt = v4618
    ?15 = v4619
    memory = {
        size=4; addr=v4594-0x4 [from 0x80483d0:push   ebp]; value=v4595
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]

0x80483dd:je     0x08048400<<Insn>>
    ax = v4786 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]]
    cx = v4591
    dx = v4592
    bx = v4593
    sp = v4747 [from 0x80483d3:sub    esp, 0x08]
    bp = v4667 [from 0x80483d1:mov    ebp, esp]
    si = v4596
    di = v4597
    es = v4598
    cs = v4599
    ss = v4600
    ds = v4601
    fs = v4602
    gs = v4603
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4605
    pf = -v4840-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4607
    af = <top>
    ?5 = v4609
    zf = v4845 [from 0x80483db:test   eax, eax]
    sf = v4843 [from 0x80483db:test   eax, eax]
    tf = v4612
    if = v4613
    df = v4614
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4616
    iopl1 = v4617
    nt = v4618
    ?15 = v4619
    memory = {
        size=4; addr=v4594-0x4 [from 0x80483d0:push   ebp]; value=v4595
    }
    ip = v4891 [from 0x80483dd:je     0x08048400<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5017
    dx = v5018
    bx = v5019
    sp = v5020
    bp = v5021
    si = v5022
    di = v5023
    es = v5024
    cs = v5025
    ss = v5026
    ds = v5027
    fs = v5028
    gs = v5029
    cf = v5030
    ?1 = v5031
    pf = v5032
    ?3 = v5033
    af = v5034
    ?5 = v5035
    zf = v5036
    sf = v5037
    tf = v5038
    if = v5039
    df = v5040
    of = v5041
    iopl0 = v5042
    iopl1 = v5043
    nt = v5044
    ?15 = v5045
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]

0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5017
    dx = v5018
    bx = v5019
    sp = v5020
    bp = v5021
    si = v5022
    di = v5023
    es = v5024
    cs = v5025
    ss = v5026
    ds = v5027
    fs = v5028
    gs = v5029
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5031
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5033
    af = <top>
    ?5 = v5035
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5038
    if = v5039
    df = v5040
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5042
    iopl1 = v5043
    nt = v5044
    ?15 = v5045
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]

0x80483e6:je     0x08048400<<Insn>>
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5017
    dx = v5018
    bx = v5019
    sp = v5020
    bp = v5021
    si = v5022
    di = v5023
    es = v5024
    cs = v5025
    ss = v5026
    ds = v5027
    fs = v5028
    gs = v5029
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5031
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5033
    af = <top>
    ?5 = v5035
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5038
    if = v5039
    df = v5040
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5042
    iopl1 = v5043
    nt = v5044
    ?15 = v5045
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400<<Insn>>]

0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5017
    dx = v5018
    bx = v5019
    sp = v5194 [from 0x8048400:mov    esp, ebp]
    bp = v5021
    si = v5022
    di = v5023
    es = v5024
    cs = v5025
    ss = v5026
    ds = v5027
    fs = v5028
    gs = v5029
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5031
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5033
    af = <top>
    ?5 = v5035
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5038
    if = v5039
    df = v5040
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5042
    iopl1 = v5043
    nt = v5044
    ?15 = v5045
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]

0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5017
    dx = v5018
    bx = v5019
    sp = v5233 [from 0x8048402:pop    ebp]
    bp = v5236 [from 0x8048402:pop    ebp]
    si = v5022
    di = v5023
    es = v5024
    cs = v5025
    ss = v5026
    ds = v5027
    fs = v5028
    gs = v5029
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5031
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5033
    af = <top>
    ?5 = v5035
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5038
    if = v5039
    df = v5040
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5042
    iopl1 = v5043
    nt = v5044
    ?15 = v5045
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]

0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5017
    dx = v5018
    bx = v5019
    sp = v5280 [from 0x8048403:ret    ]
    bp = v5236 [from 0x8048402:pop    ebp]
    si = v5022
    di = v5023
    es = v5024
    cs = v5025
    ss = v5026
    ds = v5027
    fs = v5028
    gs = v5029
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5031
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5033
    af = <top>
    ?5 = v5035
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5038
    if = v5039
    df = v5040
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5042
    iopl1 = v5043
    nt = v5044
    ?15 = v5045
    memory = {}
    ip = v5278 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
    ax = v5344
    cx = v5345
    dx = v5346
    bx = v5347
    sp = v5348
    bp = v5349
    si = v5350
    di = v5351
    es = v5352
    cs = v5353
    ss = v5354
    ds = v5355
    fs = v5356
    gs = v5357
    cf = v5358
    ?1 = v5359
    pf = v5360
    ?3 = v5361
    af = v5362
    ?5 = v5363
    zf = v5364
    sf = v5365
    tf = v5366
    if = v5367
    df = v5368
    of = v5369
    iopl0 = v5370
    iopl1 = v5371
    nt = v5372
    ?15 = v5373
    memory = {
        size=4; addr=v5348; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>]

0x80483ef:call   0x00000000
    ax = v5344
    cx = v5345
    dx = v5346
    bx = v5347
    sp = v5425 [from 0x80483ef:call   0x00000000]
    bp = v5349
    si = v5350
    di = v5351
    es = v5352
    cs = v5353
    ss = v5354
    ds = v5355
    fs = v5356
    gs = v5357
    cf = v5358
    ?1 = v5359
    pf = v5360
    ?3 = v5361
    af = v5362
    ?5 = v5363
    zf = v5364
    sf = v5365
    tf = v5366
    if = v5367
    df = v5368
    of = v5369
    iopl0 = v5370
    iopl1 = v5371
    nt = v5372
    ?15 = v5373
    memory = {
        size=4; addr=v5348; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>]
        size=4; addr=v5348-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v5519
    cx = v5520
    dx = v5521
    bx = v5522
    sp = v5523
    bp = v5524
    si = v5556 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v5526
    es = v5527
    cs = v5528
    ss = v5529
    ds = v5530
    fs = v5531
    gs = v5532
    cf = v5533
    ?1 = v5534
    pf = v5535
    ?3 = v5536
    af = v5537
    ?5 = v5538
    zf = v5539
    sf = v5540
    tf = v5541
    if = v5542
    df = v5543
    of = v5544
    iopl0 = v5545
    iopl1 = v5546
    nt = v5547
    ?15 = v5548
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]

0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v5519
    cx = v5520
    dx = v5521
    bx = v5522
    sp = v5523
    bp = v5524
    si = v5556 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v5595 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v5527
    cs = v5528
    ss = v5529
    ds = v5530
    fs = v5531
    gs = v5532
    cf = v5533
    ?1 = v5534
    pf = v5535
    ?3 = v5536
    af = v5537
    ?5 = v5538
    zf = v5539
    sf = v5540
    tf = v5541
    if = v5542
    df = v5543
    of = v5544
    iopl0 = v5545
    iopl1 = v5546
    nt = v5547
    ?15 = v5548
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048410:push   ebp
    ax = v5689
    cx = v5690
    dx = v5691
    bx = v5692
    sp = v5729 [from 0x8048410:push   ebp]
    bp = v5694
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = v5703
    ?1 = v5704
    pf = v5705
    ?3 = v5706
    af = v5707
    ?5 = v5708
    zf = v5709
    sf = v5710
    tf = v5711
    if = v5712
    df = v5713
    of = v5714
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5693-0x4 [from 0x8048410:push   ebp]; value=v5694
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]

0x8048411:mov    edx, 0x08048480<handler>
    ax = v5689
    cx = v5690
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v5692
    sp = v5729 [from 0x8048410:push   ebp]
    bp = v5694
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = v5703
    ?1 = v5704
    pf = v5705
    ?3 = v5706
    af = v5707
    ?5 = v5708
    zf = v5709
    sf = v5710
    tf = v5711
    if = v5712
    df = v5713
    of = v5714
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5693-0x4 [from 0x8048410:push   ebp]; value=v5694
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480<handler>]

0x8048416:mov    ebp, esp
    ax = v5689
    cx = v5690
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v5692
    sp = v5729 [from 0x8048410:push   ebp]
    bp = v5803 [from 0x8048416:mov    ebp, esp]
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = v5703
    ?1 = v5704
    pf = v5705
    ?3 = v5706
    af = v5707
    ?5 = v5708
    zf = v5709
    sf = v5710
    tf = v5711
    if = v5712
    df = v5713
    of = v5714
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5693-0x4 [from 0x8048410:push   ebp]; value=v5694
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]

0x8048418:sub    esp, 0x08
    ax = v5689
    cx = v5690
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v5692
    sp = v5883 [from 0x8048418:sub    esp, 0x08]
    bp = v5803 [from 0x8048416:mov    ebp, esp]
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = -v5876-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v5704
    pf = -v5866-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v5706
    af = -v5873-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v5708
    zf = v5871 [from 0x8048418:sub    esp, 0x08]
    sf = v5869 [from 0x8048418:sub    esp, 0x08]
    tf = v5711
    if = v5712
    df = v5713
    of = v5881 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5693-0x4 [from 0x8048410:push   ebp]; value=v5694
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]

0x804841b:and    esp, 0xf0<-0x10>
    ax = v5689
    cx = v5690
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v5692
    sp = v5944 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5803 [from 0x8048416:mov    ebp, esp]
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5704
    pf = -v5937-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5706
    af = <top>
    ?5 = v5708
    zf = v5942 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5940 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5711
    if = v5712
    df = v5713
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5693-0x4 [from 0x8048410:push   ebp]; value=v5694
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]

0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v5689
    cx = v5690
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v5692
    sp = v5944 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5803 [from 0x8048416:mov    ebp, esp]
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5704
    pf = -v5937-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5706
    af = <top>
    ?5 = v5708
    zf = v5942 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5940 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5711
    if = v5712
    df = v5713
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5944+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]

0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v5689
    cx = v5690
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v5692
    sp = v5944 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5803 [from 0x8048416:mov    ebp, esp]
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5704
    pf = -v5937-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5706
    af = <top>
    ?5 = v5708
    zf = v5942 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5940 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5711
    if = v5712
    df = v5713
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5944 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5944+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]

0x8048429:call   0x080482f0<signal@plt>
    ax = v5689
    cx = v5690
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
    bx = v5692
    sp = v6074 [from 0x8048429:call   0x080482f0<signal@plt>]
    bp = v5803 [from 0x8048416:mov    ebp, esp]
    si = v5695
    di = v5696
    es = v5697
    cs = v5698
    ss = v5699
    ds = v5700
    fs = v5701
    gs = v5702
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5704
    pf = -v5937-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5706
    af = <top>
    ?5 = v5708
    zf = v5942 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5940 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5711
    if = v5712
    df = v5713
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5715
    iopl1 = v5716
    nt = v5717
    ?15 = v5718
    memory = {
        size=4; addr=v5944 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5944+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480<handler>]
        size=4; addr=v5944-0x4 [from 0x8048429:call   0x080482f0<signal@plt>]; value=0x804842e [from 0x8048429:call   0x080482f0<signal@plt>]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0<signal@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804842e:mov    esp, ebp
    ax = v6168
    cx = v6169
    dx = v6170
    bx = v6171
    sp = v6203 [from 0x804842e:mov    esp, ebp]
    bp = v6173
    si = v6174
    di = v6175
    es = v6176
    cs = v6177
    ss = v6178
    ds = v6179
    fs = v6180
    gs = v6181
    cf = v6182
    ?1 = v6183
    pf = v6184
    ?3 = v6185
    af = v6186
    ?5 = v6187
    zf = v6188
    sf = v6189
    tf = v6190
    if = v6191
    df = v6192
    of = v6193
    iopl0 = v6194
    iopl1 = v6195
    nt = v6196
    ?15 = v6197
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]

0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6169
    dx = v6170
    bx = v6171
    sp = v6203 [from 0x804842e:mov    esp, ebp]
    bp = v6173
    si = v6174
    di = v6175
    es = v6176
    cs = v6177
    ss = v6178
    ds = v6179
    fs = v6180
    gs = v6181
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6183
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6185
    af = <top>
    ?5 = v6187
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6190
    if = v6191
    df = v6192
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6194
    iopl1 = v6195
    nt = v6196
    ?15 = v6197
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]

0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6169
    dx = v6170
    bx = v6171
    sp = v6309 [from 0x8048432:pop    ebp]
    bp = v6312 [from 0x8048432:pop    ebp]
    si = v6174
    di = v6175
    es = v6176
    cs = v6177
    ss = v6178
    ds = v6179
    fs = v6180
    gs = v6181
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6183
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6185
    af = <top>
    ?5 = v6187
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6190
    if = v6191
    df = v6192
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6194
    iopl1 = v6195
    nt = v6196
    ?15 = v6197
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]

0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6169
    dx = v6170
    bx = v6171
    sp = v6356 [from 0x8048433:ret    ]
    bp = v6312 [from 0x8048432:pop    ebp]
    si = v6174
    di = v6175
    es = v6176
    cs = v6177
    ss = v6178
    ds = v6179
    fs = v6180
    gs = v6181
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6183
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6185
    af = <top>
    ?5 = v6187
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6190
    if = v6191
    df = v6192
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6194
    iopl1 = v6195
    nt = v6196
    ?15 = v6197
    memory = {}
    ip = v6354 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048440:push   ebp
    ax = v6420
    cx = v6421
    dx = v6422
    bx = v6423
    sp = v6460 [from 0x8048440:push   ebp]
    bp = v6425
    si = v6426
    di = v6427
    es = v6428
    cs = v6429
    ss = v6430
    ds = v6431
    fs = v6432
    gs = v6433
    cf = v6434
    ?1 = v6435
    pf = v6436
    ?3 = v6437
    af = v6438
    ?5 = v6439
    zf = v6440
    sf = v6441
    tf = v6442
    if = v6443
    df = v6444
    of = v6445
    iopl0 = v6446
    iopl1 = v6447
    nt = v6448
    ?15 = v6449
    memory = {
        size=4; addr=v6424-0x4 [from 0x8048440:push   ebp]; value=v6425
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]

0x8048441:mov    ebp, esp
    ax = v6420
    cx = v6421
    dx = v6422
    bx = v6423
    sp = v6460 [from 0x8048440:push   ebp]
    bp = v6497 [from 0x8048441:mov    ebp, esp]
    si = v6426
    di = v6427
    es = v6428
    cs = v6429
    ss = v6430
    ds = v6431
    fs = v6432
    gs = v6433
    cf = v6434
    ?1 = v6435
    pf = v6436
    ?3 = v6437
    af = v6438
    ?5 = v6439
    zf = v6440
    sf = v6441
    tf = v6442
    if = v6443
    df = v6444
    of = v6445
    iopl0 = v6446
    iopl1 = v6447
    nt = v6448
    ?15 = v6449
    memory = {
        size=4; addr=v6424-0x4 [from 0x8048440:push   ebp]; value=v6425
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]

0x8048443:sub    esp, 0x08
    ax = v6420
    cx = v6421
    dx = v6422
    bx = v6423
    sp = v6577 [from 0x8048443:sub    esp, 0x08]
    bp = v6497 [from 0x8048441:mov    ebp, esp]
    si = v6426
    di = v6427
    es = v6428
    cs = v6429
    ss = v6430
    ds = v6431
    fs = v6432
    gs = v6433
    cf = -v6570-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6435
    pf = -v6560-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6437
    af = -v6567-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6439
    zf = v6565 [from 0x8048443:sub    esp, 0x08]
    sf = v6563 [from 0x8048443:sub    esp, 0x08]
    tf = v6442
    if = v6443
    df = v6444
    of = v6575 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6446
    iopl1 = v6447
    nt = v6448
    ?15 = v6449
    memory = {
        size=4; addr=v6424-0x4 [from 0x8048440:push   ebp]; value=v6425
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]

0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    ax = v6420
    cx = v6421
    dx = v6422
    bx = v6423
    sp = v6577 [from 0x8048443:sub    esp, 0x08]
    bp = v6497 [from 0x8048441:mov    ebp, esp]
    si = v6426
    di = v6427
    es = v6428
    cs = v6429
    ss = v6430
    ds = v6431
    fs = v6432
    gs = v6433
    cf = -v6570-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6435
    pf = -v6560-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6437
    af = -v6567-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6439
    zf = v6565 [from 0x8048443:sub    esp, 0x08]
    sf = v6563 [from 0x8048443:sub    esp, 0x08]
    tf = v6442
    if = v6443
    df = v6444
    of = v6575 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6446
    iopl1 = v6447
    nt = v6448
    ?15 = v6449
    memory = {
        size=4; addr=v6577 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]

0x804844d:call   0x08048300<puts@plt>
    ax = v6420
    cx = v6421
    dx = v6422
    bx = v6423
    sp = v6660 [from 0x804844d:call   0x08048300<puts@plt>]
    bp = v6497 [from 0x8048441:mov    ebp, esp]
    si = v6426
    di = v6427
    es = v6428
    cs = v6429
    ss = v6430
    ds = v6431
    fs = v6432
    gs = v6433
    cf = -v6570-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6435
    pf = -v6560-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6437
    af = -v6567-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6439
    zf = v6565 [from 0x8048443:sub    esp, 0x08]
    sf = v6563 [from 0x8048443:sub    esp, 0x08]
    tf = v6442
    if = v6443
    df = v6444
    of = v6575 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6446
    iopl1 = v6447
    nt = v6448
    ?15 = v6449
    memory = {
        size=4; addr=v6577 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
        size=4; addr=v6577-0x4 [from 0x804844d:call   0x08048300<puts@plt>]; value=0x8048452 [from 0x804844d:call   0x08048300<puts@plt>]
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300<puts@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048452:mov    esp, ebp
    ax = v6754
    cx = v6755
    dx = v6756
    bx = v6757
    sp = v6789 [from 0x8048452:mov    esp, ebp]
    bp = v6759
    si = v6760
    di = v6761
    es = v6762
    cs = v6763
    ss = v6764
    ds = v6765
    fs = v6766
    gs = v6767
    cf = v6768
    ?1 = v6769
    pf = v6770
    ?3 = v6771
    af = v6772
    ?5 = v6773
    zf = v6774
    sf = v6775
    tf = v6776
    if = v6777
    df = v6778
    of = v6779
    iopl0 = v6780
    iopl1 = v6781
    nt = v6782
    ?15 = v6783
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]

0x8048454:pop    ebp
    ax = v6754
    cx = v6755
    dx = v6756
    bx = v6757
    sp = v6828 [from 0x8048454:pop    ebp]
    bp = v6831 [from 0x8048454:pop    ebp]
    si = v6760
    di = v6761
    es = v6762
    cs = v6763
    ss = v6764
    ds = v6765
    fs = v6766
    gs = v6767
    cf = v6768
    ?1 = v6769
    pf = v6770
    ?3 = v6771
    af = v6772
    ?5 = v6773
    zf = v6774
    sf = v6775
    tf = v6776
    if = v6777
    df = v6778
    of = v6779
    iopl0 = v6780
    iopl1 = v6781
    nt = v6782
    ?15 = v6783
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]

0x8048455:ret    
    ax = v6754
    cx = v6755
    dx = v6756
    bx = v6757
    sp = v6875 [from 0x8048455:ret    ]
    bp = v6831 [from 0x8048454:pop    ebp]
    si = v6760
    di = v6761
    es = v6762
    cs = v6763
    ss = v6764
    ds = v6765
    fs = v6766
    gs = v6767
    cf = v6768
    ?1 = v6769
    pf = v6770
    ?3 = v6771
    af = v6772
    ?5 = v6773
    zf = v6774
    sf = v6775
    tf = v6776
    if = v6777
    df = v6778
    of = v6779
    iopl0 = v6780
    iopl1 = v6781
    nt = v6782
    ?15 = v6783
    memory = {}
    ip = v6873 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048460:push   ebp
    ax = v6939
    cx = v6940
    dx = v6941
    bx = v6942
    sp = v6979 [from 0x8048460:push   ebp]
    bp = v6944
    si = v6945
    di = v6946
    es = v6947
    cs = v6948
    ss = v6949
    ds = v6950
    fs = v6951
    gs = v6952
    cf = v6953
    ?1 = v6954
    pf = v6955
    ?3 = v6956
    af = v6957
    ?5 = v6958
    zf = v6959
    sf = v6960
    tf = v6961
    if = v6962
    df = v6963
    of = v6964
    iopl0 = v6965
    iopl1 = v6966
    nt = v6967
    ?15 = v6968
    memory = {
        size=4; addr=v6943-0x4 [from 0x8048460:push   ebp]; value=v6944
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]

0x8048461:mov    ebp, esp
    ax = v6939
    cx = v6940
    dx = v6941
    bx = v6942
    sp = v6979 [from 0x8048460:push   ebp]
    bp = v7016 [from 0x8048461:mov    ebp, esp]
    si = v6945
    di = v6946
    es = v6947
    cs = v6948
    ss = v6949
    ds = v6950
    fs = v6951
    gs = v6952
    cf = v6953
    ?1 = v6954
    pf = v6955
    ?3 = v6956
    af = v6957
    ?5 = v6958
    zf = v6959
    sf = v6960
    tf = v6961
    if = v6962
    df = v6963
    of = v6964
    iopl0 = v6965
    iopl1 = v6966
    nt = v6967
    ?15 = v6968
    memory = {
        size=4; addr=v6943-0x4 [from 0x8048460:push   ebp]; value=v6944
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]

0x8048463:sub    esp, 0x08
    ax = v6939
    cx = v6940
    dx = v6941
    bx = v6942
    sp = v7096 [from 0x8048463:sub    esp, 0x08]
    bp = v7016 [from 0x8048461:mov    ebp, esp]
    si = v6945
    di = v6946
    es = v6947
    cs = v6948
    ss = v6949
    ds = v6950
    fs = v6951
    gs = v6952
    cf = -v7089-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6954
    pf = -v7079-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6956
    af = -v7086-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6958
    zf = v7084 [from 0x8048463:sub    esp, 0x08]
    sf = v7082 [from 0x8048463:sub    esp, 0x08]
    tf = v6961
    if = v6962
    df = v6963
    of = v7094 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6965
    iopl1 = v6966
    nt = v6967
    ?15 = v6968
    memory = {
        size=4; addr=v6943-0x4 [from 0x8048460:push   ebp]; value=v6944
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]

0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    ax = v6939
    cx = v6940
    dx = v6941
    bx = v6942
    sp = v7096 [from 0x8048463:sub    esp, 0x08]
    bp = v7016 [from 0x8048461:mov    ebp, esp]
    si = v6945
    di = v6946
    es = v6947
    cs = v6948
    ss = v6949
    ds = v6950
    fs = v6951
    gs = v6952
    cf = -v7089-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6954
    pf = -v7079-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6956
    af = -v7086-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6958
    zf = v7084 [from 0x8048463:sub    esp, 0x08]
    sf = v7082 [from 0x8048463:sub    esp, 0x08]
    tf = v6961
    if = v6962
    df = v6963
    of = v7094 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6965
    iopl1 = v6966
    nt = v6967
    ?15 = v6968
    memory = {
        size=4; addr=v7096 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]

0x804846d:call   0x08048300<puts@plt>
    ax = v6939
    cx = v6940
    dx = v6941
    bx = v6942
    sp = v7179 [from 0x804846d:call   0x08048300<puts@plt>]
    bp = v7016 [from 0x8048461:mov    ebp, esp]
    si = v6945
    di = v6946
    es = v6947
    cs = v6948
    ss = v6949
    ds = v6950
    fs = v6951
    gs = v6952
    cf = -v7089-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6954
    pf = -v7079-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6956
    af = -v7086-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6958
    zf = v7084 [from 0x8048463:sub    esp, 0x08]
    sf = v7082 [from 0x8048463:sub    esp, 0x08]
    tf = v6961
    if = v6962
    df = v6963
    of = v7094 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6965
    iopl1 = v6966
    nt = v6967
    ?15 = v6968
    memory = {
        size=4; addr=v7096 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
        size=4; addr=v7096-0x4 [from 0x804846d:call   0x08048300<puts@plt>]; value=0x8048472 [from 0x804846d:call   0x08048300<puts@plt>]
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300<puts@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7273
    cx = v7274
    dx = v7275
    bx = v7276
    sp = v7277
    bp = v7278
    si = v7279
    di = v7280
    es = v7281
    cs = v7282
    ss = v7283
    ds = v7284
    fs = v7285
    gs = v7286
    cf = v7287
    ?1 = v7288
    pf = v7289
    ?3 = v7290
    af = v7291
    ?5 = v7292
    zf = v7293
    sf = v7294
    tf = v7295
    if = v7296
    df = v7297
    of = v7298
    iopl0 = v7299
    iopl1 = v7300
    nt = v7301
    ?15 = v7302
    memory = {
        size=4; addr=v7277; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]

0x8048479:call   0x08048320<_exit@plt>
    ax = v7273
    cx = v7274
    dx = v7275
    bx = v7276
    sp = v7354 [from 0x8048479:call   0x08048320<_exit@plt>]
    bp = v7278
    si = v7279
    di = v7280
    es = v7281
    cs = v7282
    ss = v7283
    ds = v7284
    fs = v7285
    gs = v7286
    cf = v7287
    ?1 = v7288
    pf = v7289
    ?3 = v7290
    af = v7291
    ?5 = v7292
    zf = v7293
    sf = v7294
    tf = v7295
    if = v7296
    df = v7297
    of = v7298
    iopl0 = v7299
    iopl1 = v7300
    nt = v7301
    ?15 = v7302
    memory = {
        size=4; addr=v7277; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7277-0x4 [from 0x8048479:call   0x08048320<_exit@plt>]; value=0x804847e [from 0x8048479:call   0x08048320<_exit@plt>]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320<_exit@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048480:push   ebp
    ax = v7448
    cx = v7449
    dx = v7450
    bx = v7451
    sp = v7488 [from 0x8048480:push   ebp]
    bp = v7453
    si = v7454
    di = v7455
    es = v7456
    cs = v7457
    ss = v7458
    ds = v7459
    fs = v7460
    gs = v7461
    cf = v7462
    ?1 = v7463
    pf = v7464
    ?3 = v7465
    af = v7466
    ?5 = v7467
    zf = v7468
    sf = v7469
    tf = v7470
    if = v7471
    df = v7472
    of = v7473
    iopl0 = v7474
    iopl1 = v7475
    nt = v7476
    ?15 = v7477
    memory = {
        size=4; addr=v7452-0x4 [from 0x8048480:push   ebp]; value=v7453
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]

0x8048481:mov    ebp, esp
    ax = v7448
    cx = v7449
    dx = v7450
    bx = v7451
    sp = v7488 [from 0x8048480:push   ebp]
    bp = v7525 [from 0x8048481:mov    ebp, esp]
    si = v7454
    di = v7455
    es = v7456
    cs = v7457
    ss = v7458
    ds = v7459
    fs = v7460
    gs = v7461
    cf = v7462
    ?1 = v7463
    pf = v7464
    ?3 = v7465
    af = v7466
    ?5 = v7467
    zf = v7468
    sf = v7469
    tf = v7470
    if = v7471
    df = v7472
    of = v7473
    iopl0 = v7474
    iopl1 = v7475
    nt = v7476
    ?15 = v7477
    memory = {
        size=4; addr=v7452-0x4 [from 0x8048480:push   ebp]; value=v7453
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]

0x8048483:sub    esp, 0x08
    ax = v7448
    cx = v7449
    dx = v7450
    bx = v7451
    sp = v7605 [from 0x8048483:sub    esp, 0x08]
    bp = v7525 [from 0x8048481:mov    ebp, esp]
    si = v7454
    di = v7455
    es = v7456
    cs = v7457
    ss = v7458
    ds = v7459
    fs = v7460
    gs = v7461
    cf = -v7598-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7463
    pf = -v7588-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v7465
    af = -v7595-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v7467
    zf = v7593 [from 0x8048483:sub    esp, 0x08]
    sf = v7591 [from 0x8048483:sub    esp, 0x08]
    tf = v7470
    if = v7471
    df = v7472
    of = v7603 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v7474
    iopl1 = v7475
    nt = v7476
    ?15 = v7477
    memory = {
        size=4; addr=v7452-0x4 [from 0x8048480:push   ebp]; value=v7453
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]

0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
    ax = v7448
    cx = v7449
    dx = v7450
    bx = v7451
    sp = v7605 [from 0x8048483:sub    esp, 0x08]
    bp = v7525 [from 0x8048481:mov    ebp, esp]
    si = v7454
    di = v7455
    es = v7456
    cs = v7457
    ss = v7458
    ds = v7459
    fs = v7460
    gs = v7461
    cf = -v7598-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7463
    pf = -v7668-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?3 = v7465
    af = v7675 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?5 = v7467
    zf = v7673 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    sf = v7671 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    tf = v7470
    if = v7471
    df = v7472
    of = v7679 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    iopl0 = v7474
    iopl1 = v7475
    nt = v7476
    ?15 = v7477
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]; value=v7643+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]

0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    ax = v7448
    cx = v7449
    dx = v7450
    bx = v7451
    sp = v7605 [from 0x8048483:sub    esp, 0x08]
    bp = v7525 [from 0x8048481:mov    ebp, esp]
    si = v7454
    di = v7455
    es = v7456
    cs = v7457
    ss = v7458
    ds = v7459
    fs = v7460
    gs = v7461
    cf = -v7598-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7463
    pf = -v7668-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?3 = v7465
    af = v7675 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?5 = v7467
    zf = v7673 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    sf = v7671 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    tf = v7470
    if = v7471
    df = v7472
    of = v7679 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    iopl0 = v7474
    iopl1 = v7475
    nt = v7476
    ?15 = v7477
    memory = {
        size=4; addr=v7605 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]

0x8048493:call   0x08048300<puts@plt>
    ax = v7448
    cx = v7449
    dx = v7450
    bx = v7451
    sp = v7766 [from 0x8048493:call   0x08048300<puts@plt>]
    bp = v7525 [from 0x8048481:mov    ebp, esp]
    si = v7454
    di = v7455
    es = v7456
    cs = v7457
    ss = v7458
    ds = v7459
    fs = v7460
    gs = v7461
    cf = -v7598-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7463
    pf = -v7668-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?3 = v7465
    af = v7675 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    ?5 = v7467
    zf = v7673 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    sf = v7671 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    tf = v7470
    if = v7471
    df = v7472
    of = v7679 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]]
    iopl0 = v7474
    iopl1 = v7475
    nt = v7476
    ?15 = v7477
    memory = {
        size=4; addr=v7605 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>]
        size=4; addr=v7605-0x4 [from 0x8048493:call   0x08048300<puts@plt>]; value=0x8048498 [from 0x8048493:call   0x08048300<puts@plt>]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300<puts@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7860
    cx = v7861
    dx = v7862
    bx = v7863
    sp = v7864
    bp = v7865
    si = v7866
    di = v7867
    es = v7868
    cs = v7869
    ss = v7870
    ds = v7871
    fs = v7872
    gs = v7873
    cf = v7874
    ?1 = v7875
    pf = v7876
    ?3 = v7877
    af = v7878
    ?5 = v7879
    zf = v7880
    sf = v7881
    tf = v7882
    if = v7883
    df = v7884
    of = v7885
    iopl0 = v7886
    iopl1 = v7887
    nt = v7888
    ?15 = v7889
    memory = {
        size=4; addr=v7864; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]

0x804849f:call   0x08048320<_exit@plt>
    ax = v7860
    cx = v7861
    dx = v7862
    bx = v7863
    sp = v7941 [from 0x804849f:call   0x08048320<_exit@plt>]
    bp = v7865
    si = v7866
    di = v7867
    es = v7868
    cs = v7869
    ss = v7870
    ds = v7871
    fs = v7872
    gs = v7873
    cf = v7874
    ?1 = v7875
    pf = v7876
    ?3 = v7877
    af = v7878
    ?5 = v7879
    zf = v7880
    sf = v7881
    tf = v7882
    if = v7883
    df = v7884
    of = v7885
    iopl0 = v7886
    iopl1 = v7887
    nt = v7888
    ?15 = v7889
    memory = {
        size=4; addr=v7864; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7864-0x4 [from 0x804849f:call   0x08048320<_exit@plt>]; value=0x80484a4 [from 0x804849f:call   0x08048320<_exit@plt>]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320<_exit@plt>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484b0:push   ebp
    ax = v8035
    cx = v8036
    dx = v8037
    bx = v8038
    sp = v8075 [from 0x80484b0:push   ebp]
    bp = v8040
    si = v8041
    di = v8042
    es = v8043
    cs = v8044
    ss = v8045
    ds = v8046
    fs = v8047
    gs = v8048
    cf = v8049
    ?1 = v8050
    pf = v8051
    ?3 = v8052
    af = v8053
    ?5 = v8054
    zf = v8055
    sf = v8056
    tf = v8057
    if = v8058
    df = v8059
    of = v8060
    iopl0 = v8061
    iopl1 = v8062
    nt = v8063
    ?15 = v8064
    memory = {
        size=4; addr=v8039-0x4 [from 0x80484b0:push   ebp]; value=v8040
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]

0x80484b1:mov    ebp, esp
    ax = v8035
    cx = v8036
    dx = v8037
    bx = v8038
    sp = v8075 [from 0x80484b0:push   ebp]
    bp = v8112 [from 0x80484b1:mov    ebp, esp]
    si = v8041
    di = v8042
    es = v8043
    cs = v8044
    ss = v8045
    ds = v8046
    fs = v8047
    gs = v8048
    cf = v8049
    ?1 = v8050
    pf = v8051
    ?3 = v8052
    af = v8053
    ?5 = v8054
    zf = v8055
    sf = v8056
    tf = v8057
    if = v8058
    df = v8059
    of = v8060
    iopl0 = v8061
    iopl1 = v8062
    nt = v8063
    ?15 = v8064
    memory = {
        size=4; addr=v8039-0x4 [from 0x80484b0:push   ebp]; value=v8040
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]

0x80484b3:push   edi
    ax = v8035
    cx = v8036
    dx = v8037
    bx = v8038
    sp = v8154 [from 0x80484b3:push   edi]
    bp = v8112 [from 0x80484b1:mov    ebp, esp]
    si = v8041
    di = v8042
    es = v8043
    cs = v8044
    ss = v8045
    ds = v8046
    fs = v8047
    gs = v8048
    cf = v8049
    ?1 = v8050
    pf = v8051
    ?3 = v8052
    af = v8053
    ?5 = v8054
    zf = v8055
    sf = v8056
    tf = v8057
    if = v8058
    df = v8059
    of = v8060
    iopl0 = v8061
    iopl1 = v8062
    nt = v8063
    ?15 = v8064
    memory = {
        size=4; addr=v8075-0x4 [from 0x80484b3:push   edi]; value=v8042
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]

0x80484b4:push   esi
    ax = v8035
    cx = v8036
    dx = v8037
    bx = v8038
    sp = v8196 [from 0x80484b4:push   esi]
    bp = v8112 [from 0x80484b1:mov    ebp, esp]
    si = v8041
    di = v8042
    es = v8043
    cs = v8044
    ss = v8045
    ds = v8046
    fs = v8047
    gs = v8048
    cf = v8049
    ?1 = v8050
    pf = v8051
    ?3 = v8052
    af = v8053
    ?5 = v8054
    zf = v8055
    sf = v8056
    tf = v8057
    if = v8058
    df = v8059
    of = v8060
    iopl0 = v8061
    iopl1 = v8062
    nt = v8063
    ?15 = v8064
    memory = {
        size=4; addr=v8154-0x4 [from 0x80484b4:push   esi]; value=v8041
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]

0x80484b5:push   ebx
    ax = v8035
    cx = v8036
    dx = v8037
    bx = v8038
    sp = v8238 [from 0x80484b5:push   ebx]
    bp = v8112 [from 0x80484b1:mov    ebp, esp]
    si = v8041
    di = v8042
    es = v8043
    cs = v8044
    ss = v8045
    ds = v8046
    fs = v8047
    gs = v8048
    cf = v8049
    ?1 = v8050
    pf = v8051
    ?3 = v8052
    af = v8053
    ?5 = v8054
    zf = v8055
    sf = v8056
    tf = v8057
    if = v8058
    df = v8059
    of = v8060
    iopl0 = v8061
    iopl1 = v8062
    nt = v8063
    ?15 = v8064
    memory = {
        size=4; addr=v8196-0x4 [from 0x80484b5:push   ebx]; value=v8038
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]

0x80484b6:sub    esp, 0x0c
    ax = v8035
    cx = v8036
    dx = v8037
    bx = v8038
    sp = v8318 [from 0x80484b6:sub    esp, 0x0c]
    bp = v8112 [from 0x80484b1:mov    ebp, esp]
    si = v8041
    di = v8042
    es = v8043
    cs = v8044
    ss = v8045
    ds = v8046
    fs = v8047
    gs = v8048
    cf = -v8311-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8050
    pf = -v8301-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8052
    af = -v8308-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8054
    zf = v8306 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8304 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8057
    if = v8058
    df = v8059
    of = v8316 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8061
    iopl1 = v8062
    nt = v8063
    ?15 = v8064
    memory = {
        size=4; addr=v8196-0x4 [from 0x80484b5:push   ebx]; value=v8038
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]

0x80484b9:call   0x080484be<<Insn>>
    ax = v8035
    cx = v8036
    dx = v8037
    bx = v8038
    sp = v8362 [from 0x80484b9:call   0x080484be<<Insn>>]
    bp = v8112 [from 0x80484b1:mov    ebp, esp]
    si = v8041
    di = v8042
    es = v8043
    cs = v8044
    ss = v8045
    ds = v8046
    fs = v8047
    gs = v8048
    cf = -v8311-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8050
    pf = -v8301-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8052
    af = -v8308-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8054
    zf = v8306 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8304 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8057
    if = v8058
    df = v8059
    of = v8316 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8061
    iopl1 = v8062
    nt = v8063
    ?15 = v8064
    memory = {
        size=4; addr=v8318-0x4 [from 0x80484b9:call   0x080484be<<Insn>>]; value=0x80484be [from 0x80484b9:call   0x080484be<<Insn>>]
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484be:pop    ebx
    ax = v8456
    cx = v8457
    dx = v8458
    bx = v8496 [from 0x80484be:pop    ebx]
    sp = v8493 [from 0x80484be:pop    ebx]
    bp = v8461
    si = v8462
    di = v8463
    es = v8464
    cs = v8465
    ss = v8466
    ds = v8467
    fs = v8468
    gs = v8469
    cf = v8470
    ?1 = v8471
    pf = v8472
    ?3 = v8473
    af = v8474
    ?5 = v8475
    zf = v8476
    sf = v8477
    tf = v8478
    if = v8479
    df = v8480
    of = v8481
    iopl0 = v8482
    iopl1 = v8483
    nt = v8484
    ?15 = v8485
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]

0x80484bf:add    ebx, 0x0000120a
    ax = v8456
    cx = v8457
    dx = v8458
    bx = v8572 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8493 [from 0x80484be:pop    ebx]
    bp = v8461
    si = v8462
    di = v8463
    es = v8464
    cs = v8465
    ss = v8466
    ds = v8467
    fs = v8468
    gs = v8469
    cf = v8566 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8471
    pf = -v8557-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8473
    af = v8564 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8475
    zf = v8562 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8560 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8478
    if = v8479
    df = v8480
    of = v8570 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8482
    iopl1 = v8483
    nt = v8484
    ?15 = v8485
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]

0x80484c5:call   0x080482c8<_init>
    ax = v8456
    cx = v8457
    dx = v8458
    bx = v8572 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8616 [from 0x80484c5:call   0x080482c8<_init>]
    bp = v8461
    si = v8462
    di = v8463
    es = v8464
    cs = v8465
    ss = v8466
    ds = v8467
    fs = v8468
    gs = v8469
    cf = v8566 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8471
    pf = -v8557-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8473
    af = v8564 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8475
    zf = v8562 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8560 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8478
    if = v8479
    df = v8480
    of = v8570 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8482
    iopl1 = v8483
    nt = v8484
    ?15 = v8485
    memory = {
        size=4; addr=v8493-0x4 [from 0x80484c5:call   0x080482c8<_init>]; value=0x80484ca [from 0x80484c5:call   0x080482c8<_init>]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8<_init>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8747 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8711
    dx = v8712
    bx = v8713
    sp = v8714
    bp = v8715
    si = v8716
    di = v8717
    es = v8718
    cs = v8719
    ss = v8720
    ds = v8721
    fs = v8722
    gs = v8723
    cf = v8724
    ?1 = v8725
    pf = v8726
    ?3 = v8727
    af = v8728
    ?5 = v8729
    zf = v8730
    sf = v8731
    tf = v8732
    if = v8733
    df = v8734
    of = v8735
    iopl0 = v8736
    iopl1 = v8737
    nt = v8738
    ?15 = v8739
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]

0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8747 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8711
    dx = v8786 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8713
    sp = v8714
    bp = v8715
    si = v8716
    di = v8717
    es = v8718
    cs = v8719
    ss = v8720
    ds = v8721
    fs = v8722
    gs = v8723
    cf = v8724
    ?1 = v8725
    pf = v8726
    ?3 = v8727
    af = v8728
    ?5 = v8729
    zf = v8730
    sf = v8731
    tf = v8732
    if = v8733
    df = v8734
    of = v8735
    iopl0 = v8736
    iopl1 = v8737
    nt = v8738
    ?15 = v8739
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]

0x80484d6:sub    eax, edx
    ax = v8866 [from 0x80484d6:sub    eax, edx]
    cx = v8711
    dx = v8786 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8713
    sp = v8714
    bp = v8715
    si = v8716
    di = v8717
    es = v8718
    cs = v8719
    ss = v8720
    ds = v8721
    fs = v8722
    gs = v8723
    cf = -v8859-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v8725
    pf = -v8849-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v8727
    af = -v8856-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v8729
    zf = v8854 [from 0x80484d6:sub    eax, edx]
    sf = v8852 [from 0x80484d6:sub    eax, edx]
    tf = v8732
    if = v8733
    df = v8734
    of = v8864 [from 0x80484d6:sub    eax, edx]
    iopl0 = v8736
    iopl1 = v8737
    nt = v8738
    ?15 = v8739
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]

0x80484d8:sar    eax, 0x02
    ax = v8963 [from 0x80484d8:sar    eax, 0x02]
    cx = v8711
    dx = v8786 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8713
    sp = v8714
    bp = v8715
    si = v8716
    di = v8717
    es = v8718
    cs = v8719
    ss = v8720
    ds = v8721
    fs = v8722
    gs = v8723
    cf = v8920 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8725
    pf = -v8951-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8727
    af = <top>
    ?5 = v8729
    zf = v8960 [from 0x80484d8:sar    eax, 0x02]
    sf = v8956 [from 0x80484d8:sar    eax, 0x02]
    tf = v8732
    if = v8733
    df = v8734
    of = <top>
    iopl0 = v8736
    iopl1 = v8737
    nt = v8738
    ?15 = v8739
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]

0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v8963 [from 0x80484d8:sar    eax, 0x02]
    cx = v8711
    dx = v8786 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8713
    sp = v8714
    bp = v8715
    si = v8716
    di = v8717
    es = v8718
    cs = v8719
    ss = v8720
    ds = v8721
    fs = v8722
    gs = v8723
    cf = v8920 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8725
    pf = -v8951-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8727
    af = <top>
    ?5 = v8729
    zf = v8960 [from 0x80484d8:sar    eax, 0x02]
    sf = v8956 [from 0x80484d8:sar    eax, 0x02]
    tf = v8732
    if = v8733
    df = v8734
    of = <top>
    iopl0 = v8736
    iopl1 = v8737
    nt = v8738
    ?15 = v8739
    memory = {
        size=4; addr=v8715-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8963 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]

0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
    ax = v8963 [from 0x80484d8:sar    eax, 0x02]
    cx = v8711
    dx = v8786 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8713
    sp = v8714
    bp = v8715
    si = v8716
    di = v8717
    es = v8718
    cs = v8719
    ss = v8720
    ds = v8721
    fs = v8722
    gs = v8723
    cf = v8920 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8725
    pf = -v8951-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8727
    af = <top>
    ?5 = v8729
    zf = v8960 [from 0x80484d8:sar    eax, 0x02]
    sf = v8956 [from 0x80484d8:sar    eax, 0x02]
    tf = v8732
    if = v8733
    df = v8734
    of = <top>
    iopl0 = v8736
    iopl1 = v8737
    nt = v8738
    ?15 = v8739
    memory = {
        size=4; addr=v8715-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8963 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v9044 [from 0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484e0:add    esp, 0x0c
    ax = v9169
    cx = v9170
    dx = v9171
    bx = v9172
    sp = v9243 [from 0x80484e0:add    esp, 0x0c]
    bp = v9174
    si = v9175
    di = v9176
    es = v9177
    cs = v9178
    ss = v9179
    ds = v9180
    fs = v9181
    gs = v9182
    cf = v9237 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9184
    pf = -v9228-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9186
    af = v9235 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9188
    zf = v9233 [from 0x80484e0:add    esp, 0x0c]
    sf = v9231 [from 0x80484e0:add    esp, 0x0c]
    tf = v9191
    if = v9192
    df = v9193
    of = v9241 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9195
    iopl1 = v9196
    nt = v9197
    ?15 = v9198
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]

0x80484e3:pop    ebx
    ax = v9169
    cx = v9170
    dx = v9171
    bx = v9285 [from 0x80484e3:pop    ebx]
    sp = v9282 [from 0x80484e3:pop    ebx]
    bp = v9174
    si = v9175
    di = v9176
    es = v9177
    cs = v9178
    ss = v9179
    ds = v9180
    fs = v9181
    gs = v9182
    cf = v9237 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9184
    pf = -v9228-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9186
    af = v9235 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9188
    zf = v9233 [from 0x80484e0:add    esp, 0x0c]
    sf = v9231 [from 0x80484e0:add    esp, 0x0c]
    tf = v9191
    if = v9192
    df = v9193
    of = v9241 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9195
    iopl1 = v9196
    nt = v9197
    ?15 = v9198
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]

0x80484e4:pop    esi
    ax = v9169
    cx = v9170
    dx = v9171
    bx = v9285 [from 0x80484e3:pop    ebx]
    sp = v9324 [from 0x80484e4:pop    esi]
    bp = v9174
    si = v9327 [from 0x80484e4:pop    esi]
    di = v9176
    es = v9177
    cs = v9178
    ss = v9179
    ds = v9180
    fs = v9181
    gs = v9182
    cf = v9237 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9184
    pf = -v9228-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9186
    af = v9235 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9188
    zf = v9233 [from 0x80484e0:add    esp, 0x0c]
    sf = v9231 [from 0x80484e0:add    esp, 0x0c]
    tf = v9191
    if = v9192
    df = v9193
    of = v9241 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9195
    iopl1 = v9196
    nt = v9197
    ?15 = v9198
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]

0x80484e5:pop    edi
    ax = v9169
    cx = v9170
    dx = v9171
    bx = v9285 [from 0x80484e3:pop    ebx]
    sp = v9366 [from 0x80484e5:pop    edi]
    bp = v9174
    si = v9327 [from 0x80484e4:pop    esi]
    di = v9369 [from 0x80484e5:pop    edi]
    es = v9177
    cs = v9178
    ss = v9179
    ds = v9180
    fs = v9181
    gs = v9182
    cf = v9237 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9184
    pf = -v9228-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9186
    af = v9235 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9188
    zf = v9233 [from 0x80484e0:add    esp, 0x0c]
    sf = v9231 [from 0x80484e0:add    esp, 0x0c]
    tf = v9191
    if = v9192
    df = v9193
    of = v9241 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9195
    iopl1 = v9196
    nt = v9197
    ?15 = v9198
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]

0x80484e6:pop    ebp
    ax = v9169
    cx = v9170
    dx = v9171
    bx = v9285 [from 0x80484e3:pop    ebx]
    sp = v9408 [from 0x80484e6:pop    ebp]
    bp = v9411 [from 0x80484e6:pop    ebp]
    si = v9327 [from 0x80484e4:pop    esi]
    di = v9369 [from 0x80484e5:pop    edi]
    es = v9177
    cs = v9178
    ss = v9179
    ds = v9180
    fs = v9181
    gs = v9182
    cf = v9237 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9184
    pf = -v9228-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9186
    af = v9235 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9188
    zf = v9233 [from 0x80484e0:add    esp, 0x0c]
    sf = v9231 [from 0x80484e0:add    esp, 0x0c]
    tf = v9191
    if = v9192
    df = v9193
    of = v9241 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9195
    iopl1 = v9196
    nt = v9197
    ?15 = v9198
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]

0x80484e7:ret    
    ax = v9169
    cx = v9170
    dx = v9171
    bx = v9285 [from 0x80484e3:pop    ebx]
    sp = v9455 [from 0x80484e7:ret    ]
    bp = v9411 [from 0x80484e6:pop    ebp]
    si = v9327 [from 0x80484e4:pop    esi]
    di = v9369 [from 0x80484e5:pop    edi]
    es = v9177
    cs = v9178
    ss = v9179
    ds = v9180
    fs = v9181
    gs = v9182
    cf = v9237 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9184
    pf = -v9228-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9186
    af = v9235 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9188
    zf = v9233 [from 0x80484e0:add    esp, 0x0c]
    sf = v9231 [from 0x80484e0:add    esp, 0x0c]
    tf = v9191
    if = v9192
    df = v9193
    of = v9241 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9195
    iopl1 = v9196
    nt = v9197
    ?15 = v9198
    memory = {}
    ip = v9453 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048520:push   ebp
    ax = v9519
    cx = v9520
    dx = v9521
    bx = v9522
    sp = v9559 [from 0x8048520:push   ebp]
    bp = v9524
    si = v9525
    di = v9526
    es = v9527
    cs = v9528
    ss = v9529
    ds = v9530
    fs = v9531
    gs = v9532
    cf = v9533
    ?1 = v9534
    pf = v9535
    ?3 = v9536
    af = v9537
    ?5 = v9538
    zf = v9539
    sf = v9540
    tf = v9541
    if = v9542
    df = v9543
    of = v9544
    iopl0 = v9545
    iopl1 = v9546
    nt = v9547
    ?15 = v9548
    memory = {
        size=4; addr=v9523-0x4 [from 0x8048520:push   ebp]; value=v9524
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]

0x8048521:mov    ebp, esp
    ax = v9519
    cx = v9520
    dx = v9521
    bx = v9522
    sp = v9559 [from 0x8048520:push   ebp]
    bp = v9596 [from 0x8048521:mov    ebp, esp]
    si = v9525
    di = v9526
    es = v9527
    cs = v9528
    ss = v9529
    ds = v9530
    fs = v9531
    gs = v9532
    cf = v9533
    ?1 = v9534
    pf = v9535
    ?3 = v9536
    af = v9537
    ?5 = v9538
    zf = v9539
    sf = v9540
    tf = v9541
    if = v9542
    df = v9543
    of = v9544
    iopl0 = v9545
    iopl1 = v9546
    nt = v9547
    ?15 = v9548
    memory = {
        size=4; addr=v9523-0x4 [from 0x8048520:push   ebp]; value=v9524
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]

0x8048523:push   edi
    ax = v9519
    cx = v9520
    dx = v9521
    bx = v9522
    sp = v9638 [from 0x8048523:push   edi]
    bp = v9596 [from 0x8048521:mov    ebp, esp]
    si = v9525
    di = v9526
    es = v9527
    cs = v9528
    ss = v9529
    ds = v9530
    fs = v9531
    gs = v9532
    cf = v9533
    ?1 = v9534
    pf = v9535
    ?3 = v9536
    af = v9537
    ?5 = v9538
    zf = v9539
    sf = v9540
    tf = v9541
    if = v9542
    df = v9543
    of = v9544
    iopl0 = v9545
    iopl1 = v9546
    nt = v9547
    ?15 = v9548
    memory = {
        size=4; addr=v9559-0x4 [from 0x8048523:push   edi]; value=v9526
    }
    ip = 0x8048524 [from 0x8048523:push   edi]

0x8048524:push   esi
    ax = v9519
    cx = v9520
    dx = v9521
    bx = v9522
    sp = v9680 [from 0x8048524:push   esi]
    bp = v9596 [from 0x8048521:mov    ebp, esp]
    si = v9525
    di = v9526
    es = v9527
    cs = v9528
    ss = v9529
    ds = v9530
    fs = v9531
    gs = v9532
    cf = v9533
    ?1 = v9534
    pf = v9535
    ?3 = v9536
    af = v9537
    ?5 = v9538
    zf = v9539
    sf = v9540
    tf = v9541
    if = v9542
    df = v9543
    of = v9544
    iopl0 = v9545
    iopl1 = v9546
    nt = v9547
    ?15 = v9548
    memory = {
        size=4; addr=v9638-0x4 [from 0x8048524:push   esi]; value=v9525
    }
    ip = 0x8048525 [from 0x8048524:push   esi]

0x8048525:push   ebx
    ax = v9519
    cx = v9520
    dx = v9521
    bx = v9522
    sp = v9722 [from 0x8048525:push   ebx]
    bp = v9596 [from 0x8048521:mov    ebp, esp]
    si = v9525
    di = v9526
    es = v9527
    cs = v9528
    ss = v9529
    ds = v9530
    fs = v9531
    gs = v9532
    cf = v9533
    ?1 = v9534
    pf = v9535
    ?3 = v9536
    af = v9537
    ?5 = v9538
    zf = v9539
    sf = v9540
    tf = v9541
    if = v9542
    df = v9543
    of = v9544
    iopl0 = v9545
    iopl1 = v9546
    nt = v9547
    ?15 = v9548
    memory = {
        size=4; addr=v9680-0x4 [from 0x8048525:push   ebx]; value=v9522
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]

0x8048526:sub    esp, 0x0c
    ax = v9519
    cx = v9520
    dx = v9521
    bx = v9522
    sp = v9802 [from 0x8048526:sub    esp, 0x0c]
    bp = v9596 [from 0x8048521:mov    ebp, esp]
    si = v9525
    di = v9526
    es = v9527
    cs = v9528
    ss = v9529
    ds = v9530
    fs = v9531
    gs = v9532
    cf = -v9795-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9534
    pf = -v9785-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9536
    af = -v9792-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9538
    zf = v9790 [from 0x8048526:sub    esp, 0x0c]
    sf = v9788 [from 0x8048526:sub    esp, 0x0c]
    tf = v9541
    if = v9542
    df = v9543
    of = v9800 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9545
    iopl1 = v9546
    nt = v9547
    ?15 = v9548
    memory = {
        size=4; addr=v9680-0x4 [from 0x8048525:push   ebx]; value=v9522
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]

0x8048529:call   0x0804852e<<Insn>>
    ax = v9519
    cx = v9520
    dx = v9521
    bx = v9522
    sp = v9846 [from 0x8048529:call   0x0804852e<<Insn>>]
    bp = v9596 [from 0x8048521:mov    ebp, esp]
    si = v9525
    di = v9526
    es = v9527
    cs = v9528
    ss = v9529
    ds = v9530
    fs = v9531
    gs = v9532
    cf = -v9795-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9534
    pf = -v9785-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9536
    af = -v9792-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9538
    zf = v9790 [from 0x8048526:sub    esp, 0x0c]
    sf = v9788 [from 0x8048526:sub    esp, 0x0c]
    tf = v9541
    if = v9542
    df = v9543
    of = v9800 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9545
    iopl1 = v9546
    nt = v9547
    ?15 = v9548
    memory = {
        size=4; addr=v9802-0x4 [from 0x8048529:call   0x0804852e<<Insn>>]; value=0x804852e [from 0x8048529:call   0x0804852e<<Insn>>]
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804852e:pop    ebx
    ax = v9940
    cx = v9941
    dx = v9942
    bx = v9980 [from 0x804852e:pop    ebx]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = v9954
    ?1 = v9955
    pf = v9956
    ?3 = v9957
    af = v9958
    ?5 = v9959
    zf = v9960
    sf = v9961
    tf = v9962
    if = v9963
    df = v9964
    of = v9965
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]

0x804852f:add    ebx, 0x0000119a
    ax = v9940
    cx = v9941
    dx = v9942
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = v10050 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9955
    pf = -v10041-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9957
    af = v10048 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9959
    zf = v10046 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10044 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9962
    if = v9963
    df = v9964
    of = v10054 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]

0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10095 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9941
    dx = v9942
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = v10050 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9955
    pf = -v10041-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9957
    af = v10048 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9959
    zf = v10046 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10044 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9962
    if = v9963
    df = v9964
    of = v10054 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]

0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10095 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9941
    dx = v10134 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = v10050 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9955
    pf = -v10041-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9957
    af = v10048 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9959
    zf = v10046 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10044 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9962
    if = v9963
    df = v9964
    of = v10054 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]

0x8048541:sub    eax, edx
    ax = v10214 [from 0x8048541:sub    eax, edx]
    cx = v9941
    dx = v10134 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = -v10207-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v9955
    pf = -v10197-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v9957
    af = -v10204-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v9959
    zf = v10202 [from 0x8048541:sub    eax, edx]
    sf = v10200 [from 0x8048541:sub    eax, edx]
    tf = v9962
    if = v9963
    df = v9964
    of = v10212 [from 0x8048541:sub    eax, edx]
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]

0x8048543:sar    eax, 0x02
    ax = v10311 [from 0x8048543:sar    eax, 0x02]
    cx = v9941
    dx = v10134 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = v10268 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9955
    pf = -v10299-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9957
    af = <top>
    ?5 = v9959
    zf = v10308 [from 0x8048543:sar    eax, 0x02]
    sf = v10304 [from 0x8048543:sar    eax, 0x02]
    tf = v9962
    if = v9963
    df = v9964
    of = <top>
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]

0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v10311 [from 0x8048543:sar    eax, 0x02]
    cx = v9941
    dx = v10134 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = v10268 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9955
    pf = -v10299-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9957
    af = <top>
    ?5 = v9959
    zf = v10308 [from 0x8048543:sar    eax, 0x02]
    sf = v10304 [from 0x8048543:sar    eax, 0x02]
    tf = v9962
    if = v9963
    df = v9964
    of = <top>
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {
        size=4; addr=v9945-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10311 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]

0x8048549:dec    eax
    ax = v10427 [from 0x8048549:dec    eax]
    cx = v9941
    dx = v10134 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = v10268 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9955
    pf = -v10413-0x1 [from 0x8048549:dec    eax]
    ?3 = v9957
    af = -v10420-0x1 [from 0x8048549:dec    eax]
    ?5 = v9959
    zf = v10418 [from 0x8048549:dec    eax]
    sf = v10416 [from 0x8048549:dec    eax]
    tf = v9962
    if = v9963
    df = v9964
    of = v10425 [from 0x8048549:dec    eax]
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {
        size=4; addr=v9945-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10311 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]

0x804854a:cmp    eax, 0xff<-0x01>
    ax = v10427 [from 0x8048549:dec    eax]
    cx = v9941
    dx = v10134 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = -v10500-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9955
    pf = -v10490-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9957
    af = -v10497-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9959
    zf = v10495 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10493 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9962
    if = v9963
    df = v9964
    of = v10505 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {
        size=4; addr=v9945-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10311 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]

0x804854d:je     0x0804856b<<Insn>>
    ax = v10427 [from 0x8048549:dec    eax]
    cx = v9941
    dx = v10134 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10056 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9977 [from 0x804852e:pop    ebx]
    bp = v9945
    si = v9946
    di = v9947
    es = v9948
    cs = v9949
    ss = v9950
    ds = v9951
    fs = v9952
    gs = v9953
    cf = -v10500-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9955
    pf = -v10490-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9957
    af = -v10497-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9959
    zf = v10495 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10493 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9962
    if = v9963
    df = v9964
    of = v10505 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9966
    iopl1 = v9967
    nt = v9968
    ?15 = v9969
    memory = {
        size=4; addr=v9945-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10311 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v10545 [from 0x804854d:je     0x0804856b<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804854f:lea    esi, [edx + eax*0x04]
    ax = v10670
    cx = v10671
    dx = v10672
    bx = v10673
    sp = v10674
    bp = v10675
    si = v10710 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v10677
    es = v10678
    cs = v10679
    ss = v10680
    ds = v10681
    fs = v10682
    gs = v10683
    cf = v10684
    ?1 = v10685
    pf = v10686
    ?3 = v10687
    af = v10688
    ?5 = v10689
    zf = v10690
    sf = v10691
    tf = v10692
    if = v10693
    df = v10694
    of = v10695
    iopl0 = v10696
    iopl1 = v10697
    nt = v10698
    ?15 = v10699
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]

0x8048552:xor    edi, edi
    ax = v10670
    cx = v10671
    dx = v10672
    bx = v10673
    sp = v10674
    bp = v10675
    si = v10710 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v10678
    cs = v10679
    ss = v10680
    ds = v10681
    fs = v10682
    gs = v10683
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10685
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10687
    af = <top>
    ?5 = v10689
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10692
    if = v10693
    df = v10694
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10696
    iopl1 = v10697
    nt = v10698
    ?15 = v10699
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]

0x8048554:lea    esi, [esi + 0x00000000]
    ax = v10670
    cx = v10671
    dx = v10672
    bx = v10673
    sp = v10674
    bp = v10675
    si = v10816 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v10678
    cs = v10679
    ss = v10680
    ds = v10681
    fs = v10682
    gs = v10683
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10685
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10687
    af = <top>
    ?5 = v10689
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10692
    if = v10693
    df = v10694
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10696
    iopl1 = v10697
    nt = v10698
    ?15 = v10699
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]

0x804855a:lea    edi, [edi + 0x00000000]
    ax = v10670
    cx = v10671
    dx = v10672
    bx = v10673
    sp = v10674
    bp = v10675
    si = v10816 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v10678
    cs = v10679
    ss = v10680
    ds = v10681
    fs = v10682
    gs = v10683
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10685
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10687
    af = <top>
    ?5 = v10689
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10692
    if = v10693
    df = v10694
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10696
    iopl1 = v10697
    nt = v10698
    ?15 = v10699
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]

0x8048560:call   DWORD PTR ds:[esi]
    ax = v10670
    cx = v10671
    dx = v10672
    bx = v10673
    sp = v10901 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v10675
    si = v10816 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v10678
    cs = v10679
    ss = v10680
    ds = v10681
    fs = v10682
    gs = v10683
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10685
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10687
    af = <top>
    ?5 = v10689
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10692
    if = v10693
    df = v10694
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10696
    iopl1 = v10697
    nt = v10698
    ?15 = v10699
    memory = {
        size=4; addr=v10674-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v10899 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048562:inc    edi
    ax = v10965
    cx = v10966
    dx = v10967
    bx = v10968
    sp = v10969
    bp = v10970
    si = v10971
    di = v11037 [from 0x8048562:inc    edi]
    es = v10973
    cs = v10974
    ss = v10975
    ds = v10976
    fs = v10977
    gs = v10978
    cf = v10979
    ?1 = v10980
    pf = -v11024-0x1 [from 0x8048562:inc    edi]
    ?3 = v10982
    af = v11031 [from 0x8048562:inc    edi]
    ?5 = v10984
    zf = v11029 [from 0x8048562:inc    edi]
    sf = v11027 [from 0x8048562:inc    edi]
    tf = v10987
    if = v10988
    df = v10989
    of = v11035 [from 0x8048562:inc    edi]
    iopl0 = v10991
    iopl1 = v10992
    nt = v10993
    ?15 = v10994
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]

0x8048563:sub    esi, 0x04
    ax = v10965
    cx = v10966
    dx = v10967
    bx = v10968
    sp = v10969
    bp = v10970
    si = v11117 [from 0x8048563:sub    esi, 0x04]
    di = v11037 [from 0x8048562:inc    edi]
    es = v10973
    cs = v10974
    ss = v10975
    ds = v10976
    fs = v10977
    gs = v10978
    cf = -v11110-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v10980
    pf = -v11100-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v10982
    af = -v11107-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v10984
    zf = v11105 [from 0x8048563:sub    esi, 0x04]
    sf = v11103 [from 0x8048563:sub    esi, 0x04]
    tf = v10987
    if = v10988
    df = v10989
    of = v11115 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v10991
    iopl1 = v10992
    nt = v10993
    ?15 = v10994
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]

0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v10965
    cx = v10966
    dx = v10967
    bx = v10968
    sp = v10969
    bp = v10970
    si = v11117 [from 0x8048563:sub    esi, 0x04]
    di = v11037 [from 0x8048562:inc    edi]
    es = v10973
    cs = v10974
    ss = v10975
    ds = v10976
    fs = v10977
    gs = v10978
    cf = -v11194-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v10980
    pf = -v11184-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v10982
    af = -v11191-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v10984
    zf = v11189 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v11187 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v10987
    if = v10988
    df = v10989
    of = v11199 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v10991
    iopl1 = v10992
    nt = v10993
    ?15 = v10994
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]

0x8048569:jne    0x08048560<<Insn>>
    ax = v10965
    cx = v10966
    dx = v10967
    bx = v10968
    sp = v10969
    bp = v10970
    si = v11117 [from 0x8048563:sub    esi, 0x04]
    di = v11037 [from 0x8048562:inc    edi]
    es = v10973
    cs = v10974
    ss = v10975
    ds = v10976
    fs = v10977
    gs = v10978
    cf = -v11194-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v10980
    pf = -v11184-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v10982
    af = -v11191-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v10984
    zf = v11189 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v11187 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v10987
    if = v10988
    df = v10989
    of = v11199 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v10991
    iopl1 = v10992
    nt = v10993
    ?15 = v10994
    memory = {}
    ip = v11240 [from 0x8048569:jne    0x08048560<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804856b:call   0x080485b0<_fini>
    ax = v11365
    cx = v11366
    dx = v11367
    bx = v11368
    sp = v11407 [from 0x804856b:call   0x080485b0<_fini>]
    bp = v11370
    si = v11371
    di = v11372
    es = v11373
    cs = v11374
    ss = v11375
    ds = v11376
    fs = v11377
    gs = v11378
    cf = v11379
    ?1 = v11380
    pf = v11381
    ?3 = v11382
    af = v11383
    ?5 = v11384
    zf = v11385
    sf = v11386
    tf = v11387
    if = v11388
    df = v11389
    of = v11390
    iopl0 = v11391
    iopl1 = v11392
    nt = v11393
    ?15 = v11394
    memory = {
        size=4; addr=v11369-0x4 [from 0x804856b:call   0x080485b0<_fini>]; value=0x8048570 [from 0x804856b:call   0x080485b0<_fini>]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0<_fini>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048570:add    esp, 0x0c
    ax = v11501
    cx = v11502
    dx = v11503
    bx = v11504
    sp = v11575 [from 0x8048570:add    esp, 0x0c]
    bp = v11506
    si = v11507
    di = v11508
    es = v11509
    cs = v11510
    ss = v11511
    ds = v11512
    fs = v11513
    gs = v11514
    cf = v11569 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11516
    pf = -v11560-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11518
    af = v11567 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11520
    zf = v11565 [from 0x8048570:add    esp, 0x0c]
    sf = v11563 [from 0x8048570:add    esp, 0x0c]
    tf = v11523
    if = v11524
    df = v11525
    of = v11573 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11527
    iopl1 = v11528
    nt = v11529
    ?15 = v11530
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]

0x8048573:pop    ebx
    ax = v11501
    cx = v11502
    dx = v11503
    bx = v11617 [from 0x8048573:pop    ebx]
    sp = v11614 [from 0x8048573:pop    ebx]
    bp = v11506
    si = v11507
    di = v11508
    es = v11509
    cs = v11510
    ss = v11511
    ds = v11512
    fs = v11513
    gs = v11514
    cf = v11569 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11516
    pf = -v11560-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11518
    af = v11567 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11520
    zf = v11565 [from 0x8048570:add    esp, 0x0c]
    sf = v11563 [from 0x8048570:add    esp, 0x0c]
    tf = v11523
    if = v11524
    df = v11525
    of = v11573 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11527
    iopl1 = v11528
    nt = v11529
    ?15 = v11530
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]

0x8048574:pop    esi
    ax = v11501
    cx = v11502
    dx = v11503
    bx = v11617 [from 0x8048573:pop    ebx]
    sp = v11656 [from 0x8048574:pop    esi]
    bp = v11506
    si = v11659 [from 0x8048574:pop    esi]
    di = v11508
    es = v11509
    cs = v11510
    ss = v11511
    ds = v11512
    fs = v11513
    gs = v11514
    cf = v11569 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11516
    pf = -v11560-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11518
    af = v11567 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11520
    zf = v11565 [from 0x8048570:add    esp, 0x0c]
    sf = v11563 [from 0x8048570:add    esp, 0x0c]
    tf = v11523
    if = v11524
    df = v11525
    of = v11573 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11527
    iopl1 = v11528
    nt = v11529
    ?15 = v11530
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]

0x8048575:pop    edi
    ax = v11501
    cx = v11502
    dx = v11503
    bx = v11617 [from 0x8048573:pop    ebx]
    sp = v11698 [from 0x8048575:pop    edi]
    bp = v11506
    si = v11659 [from 0x8048574:pop    esi]
    di = v11701 [from 0x8048575:pop    edi]
    es = v11509
    cs = v11510
    ss = v11511
    ds = v11512
    fs = v11513
    gs = v11514
    cf = v11569 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11516
    pf = -v11560-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11518
    af = v11567 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11520
    zf = v11565 [from 0x8048570:add    esp, 0x0c]
    sf = v11563 [from 0x8048570:add    esp, 0x0c]
    tf = v11523
    if = v11524
    df = v11525
    of = v11573 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11527
    iopl1 = v11528
    nt = v11529
    ?15 = v11530
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]

0x8048576:pop    ebp
    ax = v11501
    cx = v11502
    dx = v11503
    bx = v11617 [from 0x8048573:pop    ebx]
    sp = v11740 [from 0x8048576:pop    ebp]
    bp = v11743 [from 0x8048576:pop    ebp]
    si = v11659 [from 0x8048574:pop    esi]
    di = v11701 [from 0x8048575:pop    edi]
    es = v11509
    cs = v11510
    ss = v11511
    ds = v11512
    fs = v11513
    gs = v11514
    cf = v11569 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11516
    pf = -v11560-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11518
    af = v11567 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11520
    zf = v11565 [from 0x8048570:add    esp, 0x0c]
    sf = v11563 [from 0x8048570:add    esp, 0x0c]
    tf = v11523
    if = v11524
    df = v11525
    of = v11573 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11527
    iopl1 = v11528
    nt = v11529
    ?15 = v11530
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]

0x8048577:ret    
    ax = v11501
    cx = v11502
    dx = v11503
    bx = v11617 [from 0x8048573:pop    ebx]
    sp = v11787 [from 0x8048577:ret    ]
    bp = v11743 [from 0x8048576:pop    ebp]
    si = v11659 [from 0x8048574:pop    esi]
    di = v11701 [from 0x8048575:pop    edi]
    es = v11509
    cs = v11510
    ss = v11511
    ds = v11512
    fs = v11513
    gs = v11514
    cf = v11569 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11516
    pf = -v11560-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11518
    af = v11567 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11520
    zf = v11565 [from 0x8048570:add    esp, 0x0c]
    sf = v11563 [from 0x8048570:add    esp, 0x0c]
    tf = v11523
    if = v11524
    df = v11525
    of = v11573 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11527
    iopl1 = v11528
    nt = v11529
    ?15 = v11530
    memory = {}
    ip = v11785 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048580:push   ebp
    ax = v11851
    cx = v11852
    dx = v11853
    bx = v11854
    sp = v11891 [from 0x8048580:push   ebp]
    bp = v11856
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = v11865
    ?1 = v11866
    pf = v11867
    ?3 = v11868
    af = v11869
    ?5 = v11870
    zf = v11871
    sf = v11872
    tf = v11873
    if = v11874
    df = v11875
    of = v11876
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11855-0x4 [from 0x8048580:push   ebp]; value=v11856
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]

0x8048581:mov    ebp, esp
    ax = v11851
    cx = v11852
    dx = v11853
    bx = v11854
    sp = v11891 [from 0x8048580:push   ebp]
    bp = v11928 [from 0x8048581:mov    ebp, esp]
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = v11865
    ?1 = v11866
    pf = v11867
    ?3 = v11868
    af = v11869
    ?5 = v11870
    zf = v11871
    sf = v11872
    tf = v11873
    if = v11874
    df = v11875
    of = v11876
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11855-0x4 [from 0x8048580:push   ebp]; value=v11856
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]

0x8048583:push   ebx
    ax = v11851
    cx = v11852
    dx = v11853
    bx = v11854
    sp = v11970 [from 0x8048583:push   ebx]
    bp = v11928 [from 0x8048581:mov    ebp, esp]
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = v11865
    ?1 = v11866
    pf = v11867
    ?3 = v11868
    af = v11869
    ?5 = v11870
    zf = v11871
    sf = v11872
    tf = v11873
    if = v11874
    df = v11875
    of = v11876
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11891-0x4 [from 0x8048583:push   ebx]; value=v11854
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]

0x8048584:sub    esp, 0x04
    ax = v11851
    cx = v11852
    dx = v11853
    bx = v11854
    sp = v12050 [from 0x8048584:sub    esp, 0x04]
    bp = v11928 [from 0x8048581:mov    ebp, esp]
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = -v12043-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v11866
    pf = -v12033-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v11868
    af = -v12040-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v11870
    zf = v12038 [from 0x8048584:sub    esp, 0x04]
    sf = v12036 [from 0x8048584:sub    esp, 0x04]
    tf = v11873
    if = v11874
    df = v11875
    of = v12048 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11891-0x4 [from 0x8048583:push   ebx]; value=v11854
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]

0x8048587:mov    ebx, 0x080495e8<.ctors>
    ax = v11851
    cx = v11852
    dx = v11853
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v12050 [from 0x8048584:sub    esp, 0x04]
    bp = v11928 [from 0x8048581:mov    ebp, esp]
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = -v12043-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v11866
    pf = -v12033-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v11868
    af = -v12040-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v11870
    zf = v12038 [from 0x8048584:sub    esp, 0x04]
    sf = v12036 [from 0x8048584:sub    esp, 0x04]
    tf = v11873
    if = v11874
    df = v11875
    of = v12048 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11891-0x4 [from 0x8048583:push   ebx]; value=v11854
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]

0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
    ax = v12126 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]
    cx = v11852
    dx = v11853
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v12050 [from 0x8048584:sub    esp, 0x04]
    bp = v11928 [from 0x8048581:mov    ebp, esp]
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = -v12043-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v11866
    pf = -v12033-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v11868
    af = -v12040-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v11870
    zf = v12038 [from 0x8048584:sub    esp, 0x04]
    sf = v12036 [from 0x8048584:sub    esp, 0x04]
    tf = v11873
    if = v11874
    df = v11875
    of = v12048 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11891-0x4 [from 0x8048583:push   ebx]; value=v11854
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]

0x8048591:cmp    eax, 0xff<-0x01>
    ax = v12126 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]
    cx = v11852
    dx = v11853
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v12050 [from 0x8048584:sub    esp, 0x04]
    bp = v11928 [from 0x8048581:mov    ebp, esp]
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = -v12199-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v11866
    pf = -v12189-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v11868
    af = -v12196-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v11870
    zf = v12194 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v12192 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v11873
    if = v11874
    df = v11875
    of = v12204 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11891-0x4 [from 0x8048583:push   ebx]; value=v11854
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]

0x8048594:je     0x080485ac<<Insn>>
    ax = v12126 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]]
    cx = v11852
    dx = v11853
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8<.ctors>]
    sp = v12050 [from 0x8048584:sub    esp, 0x04]
    bp = v11928 [from 0x8048581:mov    ebp, esp]
    si = v11857
    di = v11858
    es = v11859
    cs = v11860
    ss = v11861
    ds = v11862
    fs = v11863
    gs = v11864
    cf = -v12199-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v11866
    pf = -v12189-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v11868
    af = -v12196-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v11870
    zf = v12194 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v12192 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v11873
    if = v11874
    df = v11875
    of = v12204 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v11877
    iopl1 = v11878
    nt = v11879
    ?15 = v11880
    memory = {
        size=4; addr=v11891-0x4 [from 0x8048583:push   ebx]; value=v11854
    }
    ip = v12244 [from 0x8048594:je     0x080485ac<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048596:lea    esi, [esi + 0x00]
    ax = v12369
    cx = v12370
    dx = v12371
    bx = v12372
    sp = v12373
    bp = v12374
    si = v12406 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12376
    es = v12377
    cs = v12378
    ss = v12379
    ds = v12380
    fs = v12381
    gs = v12382
    cf = v12383
    ?1 = v12384
    pf = v12385
    ?3 = v12386
    af = v12387
    ?5 = v12388
    zf = v12389
    sf = v12390
    tf = v12391
    if = v12392
    df = v12393
    of = v12394
    iopl0 = v12395
    iopl1 = v12396
    nt = v12397
    ?15 = v12398
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]

0x8048599:lea    edi, [edi + 0x00000000]
    ax = v12369
    cx = v12370
    dx = v12371
    bx = v12372
    sp = v12373
    bp = v12374
    si = v12406 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12445 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12377
    cs = v12378
    ss = v12379
    ds = v12380
    fs = v12381
    gs = v12382
    cf = v12383
    ?1 = v12384
    pf = v12385
    ?3 = v12386
    af = v12387
    ?5 = v12388
    zf = v12389
    sf = v12390
    tf = v12391
    if = v12392
    df = v12393
    of = v12394
    iopl0 = v12395
    iopl1 = v12396
    nt = v12397
    ?15 = v12398
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]

0x80485a0:sub    ebx, 0x04
    ax = v12369
    cx = v12370
    dx = v12371
    bx = v12525 [from 0x80485a0:sub    ebx, 0x04]
    sp = v12373
    bp = v12374
    si = v12406 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12445 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12377
    cs = v12378
    ss = v12379
    ds = v12380
    fs = v12381
    gs = v12382
    cf = -v12518-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v12384
    pf = -v12508-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v12386
    af = -v12515-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v12388
    zf = v12513 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12511 [from 0x80485a0:sub    ebx, 0x04]
    tf = v12391
    if = v12392
    df = v12393
    of = v12523 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v12395
    iopl1 = v12396
    nt = v12397
    ?15 = v12398
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]

0x80485a3:call   eax
    ax = v12369
    cx = v12370
    dx = v12371
    bx = v12525 [from 0x80485a0:sub    ebx, 0x04]
    sp = v12569 [from 0x80485a3:call   eax]
    bp = v12374
    si = v12406 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12445 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12377
    cs = v12378
    ss = v12379
    ds = v12380
    fs = v12381
    gs = v12382
    cf = -v12518-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v12384
    pf = -v12508-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v12386
    af = -v12515-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v12388
    zf = v12513 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12511 [from 0x80485a0:sub    ebx, 0x04]
    tf = v12391
    if = v12392
    df = v12393
    of = v12523 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v12395
    iopl1 = v12396
    nt = v12397
    ?15 = v12398
    memory = {
        size=4; addr=v12373-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v12369
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v12670 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12634
    dx = v12635
    bx = v12636
    sp = v12637
    bp = v12638
    si = v12639
    di = v12640
    es = v12641
    cs = v12642
    ss = v12643
    ds = v12644
    fs = v12645
    gs = v12646
    cf = v12647
    ?1 = v12648
    pf = v12649
    ?3 = v12650
    af = v12651
    ?5 = v12652
    zf = v12653
    sf = v12654
    tf = v12655
    if = v12656
    df = v12657
    of = v12658
    iopl0 = v12659
    iopl1 = v12660
    nt = v12661
    ?15 = v12662
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]

0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v12670 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12634
    dx = v12635
    bx = v12636
    sp = v12637
    bp = v12638
    si = v12639
    di = v12640
    es = v12641
    cs = v12642
    ss = v12643
    ds = v12644
    fs = v12645
    gs = v12646
    cf = -v12743-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v12648
    pf = -v12733-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v12650
    af = -v12740-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v12652
    zf = v12738 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v12736 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v12655
    if = v12656
    df = v12657
    of = v12748 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v12659
    iopl1 = v12660
    nt = v12661
    ?15 = v12662
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]

0x80485aa:jne    0x080485a0<<Insn>>
    ax = v12670 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12634
    dx = v12635
    bx = v12636
    sp = v12637
    bp = v12638
    si = v12639
    di = v12640
    es = v12641
    cs = v12642
    ss = v12643
    ds = v12644
    fs = v12645
    gs = v12646
    cf = -v12743-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v12648
    pf = -v12733-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v12650
    af = -v12740-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v12652
    zf = v12738 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v12736 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v12655
    if = v12656
    df = v12657
    of = v12748 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v12659
    iopl1 = v12660
    nt = v12661
    ?15 = v12662
    memory = {}
    ip = v12789 [from 0x80485aa:jne    0x080485a0<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485ac:pop    eax
    ax = v12954 [from 0x80485ac:pop    eax]
    cx = v12915
    dx = v12916
    bx = v12917
    sp = v12951 [from 0x80485ac:pop    eax]
    bp = v12919
    si = v12920
    di = v12921
    es = v12922
    cs = v12923
    ss = v12924
    ds = v12925
    fs = v12926
    gs = v12927
    cf = v12928
    ?1 = v12929
    pf = v12930
    ?3 = v12931
    af = v12932
    ?5 = v12933
    zf = v12934
    sf = v12935
    tf = v12936
    if = v12937
    df = v12938
    of = v12939
    iopl0 = v12940
    iopl1 = v12941
    nt = v12942
    ?15 = v12943
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]

0x80485ad:pop    ebx
    ax = v12954 [from 0x80485ac:pop    eax]
    cx = v12915
    dx = v12916
    bx = v12996 [from 0x80485ad:pop    ebx]
    sp = v12993 [from 0x80485ad:pop    ebx]
    bp = v12919
    si = v12920
    di = v12921
    es = v12922
    cs = v12923
    ss = v12924
    ds = v12925
    fs = v12926
    gs = v12927
    cf = v12928
    ?1 = v12929
    pf = v12930
    ?3 = v12931
    af = v12932
    ?5 = v12933
    zf = v12934
    sf = v12935
    tf = v12936
    if = v12937
    df = v12938
    of = v12939
    iopl0 = v12940
    iopl1 = v12941
    nt = v12942
    ?15 = v12943
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]

0x80485ae:pop    ebp
    ax = v12954 [from 0x80485ac:pop    eax]
    cx = v12915
    dx = v12916
    bx = v12996 [from 0x80485ad:pop    ebx]
    sp = v13035 [from 0x80485ae:pop    ebp]
    bp = v13038 [from 0x80485ae:pop    ebp]
    si = v12920
    di = v12921
    es = v12922
    cs = v12923
    ss = v12924
    ds = v12925
    fs = v12926
    gs = v12927
    cf = v12928
    ?1 = v12929
    pf = v12930
    ?3 = v12931
    af = v12932
    ?5 = v12933
    zf = v12934
    sf = v12935
    tf = v12936
    if = v12937
    df = v12938
    of = v12939
    iopl0 = v12940
    iopl1 = v12941
    nt = v12942
    ?15 = v12943
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]

0x80485af:ret    
    ax = v12954 [from 0x80485ac:pop    eax]
    cx = v12915
    dx = v12916
    bx = v12996 [from 0x80485ad:pop    ebx]
    sp = v13082 [from 0x80485af:ret    ]
    bp = v13038 [from 0x80485ae:pop    ebp]
    si = v12920
    di = v12921
    es = v12922
    cs = v12923
    ss = v12924
    ds = v12925
    fs = v12926
    gs = v12927
    cf = v12928
    ?1 = v12929
    pf = v12930
    ?3 = v12931
    af = v12932
    ?5 = v12933
    zf = v12934
    sf = v12935
    tf = v12936
    if = v12937
    df = v12938
    of = v12939
    iopl0 = v12940
    iopl1 = v12941
    nt = v12942
    ?15 = v12943
    memory = {}
    ip = v13080 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485b0:push   ebp
    ax = v13146
    cx = v13147
    dx = v13148
    bx = v13149
    sp = v13186 [from 0x80485b0:push   ebp]
    bp = v13151
    si = v13152
    di = v13153
    es = v13154
    cs = v13155
    ss = v13156
    ds = v13157
    fs = v13158
    gs = v13159
    cf = v13160
    ?1 = v13161
    pf = v13162
    ?3 = v13163
    af = v13164
    ?5 = v13165
    zf = v13166
    sf = v13167
    tf = v13168
    if = v13169
    df = v13170
    of = v13171
    iopl0 = v13172
    iopl1 = v13173
    nt = v13174
    ?15 = v13175
    memory = {
        size=4; addr=v13150-0x4 [from 0x80485b0:push   ebp]; value=v13151
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]

0x80485b1:mov    ebp, esp
    ax = v13146
    cx = v13147
    dx = v13148
    bx = v13149
    sp = v13186 [from 0x80485b0:push   ebp]
    bp = v13223 [from 0x80485b1:mov    ebp, esp]
    si = v13152
    di = v13153
    es = v13154
    cs = v13155
    ss = v13156
    ds = v13157
    fs = v13158
    gs = v13159
    cf = v13160
    ?1 = v13161
    pf = v13162
    ?3 = v13163
    af = v13164
    ?5 = v13165
    zf = v13166
    sf = v13167
    tf = v13168
    if = v13169
    df = v13170
    of = v13171
    iopl0 = v13172
    iopl1 = v13173
    nt = v13174
    ?15 = v13175
    memory = {
        size=4; addr=v13150-0x4 [from 0x80485b0:push   ebp]; value=v13151
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]

0x80485b3:push   ebx
    ax = v13146
    cx = v13147
    dx = v13148
    bx = v13149
    sp = v13265 [from 0x80485b3:push   ebx]
    bp = v13223 [from 0x80485b1:mov    ebp, esp]
    si = v13152
    di = v13153
    es = v13154
    cs = v13155
    ss = v13156
    ds = v13157
    fs = v13158
    gs = v13159
    cf = v13160
    ?1 = v13161
    pf = v13162
    ?3 = v13163
    af = v13164
    ?5 = v13165
    zf = v13166
    sf = v13167
    tf = v13168
    if = v13169
    df = v13170
    of = v13171
    iopl0 = v13172
    iopl1 = v13173
    nt = v13174
    ?15 = v13175
    memory = {
        size=4; addr=v13186-0x4 [from 0x80485b3:push   ebx]; value=v13149
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]

0x80485b4:push   eax
    ax = v13146
    cx = v13147
    dx = v13148
    bx = v13149
    sp = v13307 [from 0x80485b4:push   eax]
    bp = v13223 [from 0x80485b1:mov    ebp, esp]
    si = v13152
    di = v13153
    es = v13154
    cs = v13155
    ss = v13156
    ds = v13157
    fs = v13158
    gs = v13159
    cf = v13160
    ?1 = v13161
    pf = v13162
    ?3 = v13163
    af = v13164
    ?5 = v13165
    zf = v13166
    sf = v13167
    tf = v13168
    if = v13169
    df = v13170
    of = v13171
    iopl0 = v13172
    iopl1 = v13173
    nt = v13174
    ?15 = v13175
    memory = {
        size=4; addr=v13265-0x4 [from 0x80485b4:push   eax]; value=v13146
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]

0x80485b5:call   0x080485ba<<Insn>>
    ax = v13146
    cx = v13147
    dx = v13148
    bx = v13149
    sp = v13351 [from 0x80485b5:call   0x080485ba<<Insn>>]
    bp = v13223 [from 0x80485b1:mov    ebp, esp]
    si = v13152
    di = v13153
    es = v13154
    cs = v13155
    ss = v13156
    ds = v13157
    fs = v13158
    gs = v13159
    cf = v13160
    ?1 = v13161
    pf = v13162
    ?3 = v13163
    af = v13164
    ?5 = v13165
    zf = v13166
    sf = v13167
    tf = v13168
    if = v13169
    df = v13170
    of = v13171
    iopl0 = v13172
    iopl1 = v13173
    nt = v13174
    ?15 = v13175
    memory = {
        size=4; addr=v13307-0x4 [from 0x80485b5:call   0x080485ba<<Insn>>]; value=0x80485ba [from 0x80485b5:call   0x080485ba<<Insn>>]
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba<<Insn>>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485ba:pop    ebx
    ax = v13445
    cx = v13446
    dx = v13447
    bx = v13485 [from 0x80485ba:pop    ebx]
    sp = v13482 [from 0x80485ba:pop    ebx]
    bp = v13450
    si = v13451
    di = v13452
    es = v13453
    cs = v13454
    ss = v13455
    ds = v13456
    fs = v13457
    gs = v13458
    cf = v13459
    ?1 = v13460
    pf = v13461
    ?3 = v13462
    af = v13463
    ?5 = v13464
    zf = v13465
    sf = v13466
    tf = v13467
    if = v13468
    df = v13469
    of = v13470
    iopl0 = v13471
    iopl1 = v13472
    nt = v13473
    ?15 = v13474
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]

0x80485bb:add    ebx, 0x0000110e
    ax = v13445
    cx = v13446
    dx = v13447
    bx = v13561 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v13482 [from 0x80485ba:pop    ebx]
    bp = v13450
    si = v13451
    di = v13452
    es = v13453
    cs = v13454
    ss = v13455
    ds = v13456
    fs = v13457
    gs = v13458
    cf = v13555 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v13460
    pf = -v13546-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v13462
    af = v13553 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v13464
    zf = v13551 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13549 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v13467
    if = v13468
    df = v13469
    of = v13559 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v13471
    iopl1 = v13472
    nt = v13473
    ?15 = v13474
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]

0x80485c1:call   0x08048390<__do_global_dtors_aux>
    ax = v13445
    cx = v13446
    dx = v13447
    bx = v13561 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v13605 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]
    bp = v13450
    si = v13451
    di = v13452
    es = v13453
    cs = v13454
    ss = v13455
    ds = v13456
    fs = v13457
    gs = v13458
    cf = v13555 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v13460
    pf = -v13546-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v13462
    af = v13553 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v13464
    zf = v13551 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13549 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v13467
    if = v13468
    df = v13469
    of = v13559 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v13471
    iopl1 = v13472
    nt = v13473
    ?15 = v13474
    memory = {
        size=4; addr=v13482-0x4 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]; value=0x80485c6 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390<__do_global_dtors_aux>]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485c6:pop    eax
    ax = v13739 [from 0x80485c6:pop    eax]
    cx = v13700
    dx = v13701
    bx = v13702
    sp = v13736 [from 0x80485c6:pop    eax]
    bp = v13704
    si = v13705
    di = v13706
    es = v13707
    cs = v13708
    ss = v13709
    ds = v13710
    fs = v13711
    gs = v13712
    cf = v13713
    ?1 = v13714
    pf = v13715
    ?3 = v13716
    af = v13717
    ?5 = v13718
    zf = v13719
    sf = v13720
    tf = v13721
    if = v13722
    df = v13723
    of = v13724
    iopl0 = v13725
    iopl1 = v13726
    nt = v13727
    ?15 = v13728
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]

0x80485c7:pop    ebx
    ax = v13739 [from 0x80485c6:pop    eax]
    cx = v13700
    dx = v13701
    bx = v13781 [from 0x80485c7:pop    ebx]
    sp = v13778 [from 0x80485c7:pop    ebx]
    bp = v13704
    si = v13705
    di = v13706
    es = v13707
    cs = v13708
    ss = v13709
    ds = v13710
    fs = v13711
    gs = v13712
    cf = v13713
    ?1 = v13714
    pf = v13715
    ?3 = v13716
    af = v13717
    ?5 = v13718
    zf = v13719
    sf = v13720
    tf = v13721
    if = v13722
    df = v13723
    of = v13724
    iopl0 = v13725
    iopl1 = v13726
    nt = v13727
    ?15 = v13728
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]

0x80485c8:leave  
    ax = v13739 [from 0x80485c6:pop    eax]
    cx = v13700
    dx = v13701
    bx = v13781 [from 0x80485c7:pop    ebx]
    sp = v13825 [from 0x80485c8:leave  ]
    bp = v13824 [from 0x80485c8:leave  ]
    si = v13705
    di = v13706
    es = v13707
    cs = v13708
    ss = v13709
    ds = v13710
    fs = v13711
    gs = v13712
    cf = v13713
    ?1 = v13714
    pf = v13715
    ?3 = v13716
    af = v13717
    ?5 = v13718
    zf = v13719
    sf = v13720
    tf = v13721
    if = v13722
    df = v13723
    of = v13724
    iopl0 = v13725
    iopl1 = v13726
    nt = v13727
    ?15 = v13728
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]

0x80485c9:ret    
    ax = v13739 [from 0x80485c6:pop    eax]
    cx = v13700
    dx = v13701
    bx = v13781 [from 0x80485c7:pop    ebx]
    sp = v13869 [from 0x80485c9:ret    ]
    bp = v13824 [from 0x80485c8:leave  ]
    si = v13705
    di = v13706
    es = v13707
    cs = v13708
    ss = v13709
    ds = v13710
    fs = v13711
    gs = v13712
    cf = v13713
    ?1 = v13714
    pf = v13715
    ?3 = v13716
    af = v13717
    ?5 = v13718
    zf = v13719
    sf = v13720
    tf = v13721
    if = v13722
    df = v13723
    of = v13724
    iopl0 = v13725
    iopl1 = v13726
    nt = v13727
    ?15 = v13728
    memory = {}
    ip = v13867 [from 0x80485c9:ret    ]
analyzed headers: 1
