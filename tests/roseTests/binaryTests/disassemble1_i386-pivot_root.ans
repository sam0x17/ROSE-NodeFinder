using this memory map for disassembly:
    va 0x08048000 + 0x00000034 = 0x08048034 r-xp at buffer aab   + 0x00000000 i386-pivot_root(LOAD#2)
    va 0x08048034 + 0x000000e0 = 0x08048114 r-xp at buffer aad   + 0x00000000 i386-pivot_root(PHDR#0)
    va 0x08048114 + 0x00000013 = 0x08048127 r--p at buffer aaf   + 0x00000000 i386-pivot_root(.interp)
    va 0x08048127 + 0x00000001 = 0x08048128 r-xp at buffer aab   + 0x00000127 i386-pivot_root(LOAD#2)
    va 0x08048128 + 0x00000020 = 0x08048148 r--p at buffer aah   + 0x00000000 i386-pivot_root(.note.ABI-tag)
    va 0x08048148 + 0x000000f0 = 0x08048238 r--- at buffer aar   + 0x00000148 i386-pivot_root(.dynsym+.gnu.liblist+.hash)
    va 0x08048238 + 0x00000050 = 0x08048288 r-xp at buffer aab   + 0x00000238 i386-pivot_root(LOAD#2)
    va 0x08048288 + 0x00000012 = 0x0804829a r--- at buffer aat   + 0x00000288 i386-pivot_root(.gnu.version)
    va 0x0804829a + 0x00000002 = 0x0804829c r-xp at buffer aab   + 0x0000029a i386-pivot_root(LOAD#2)
    va 0x0804829c + 0x00000050 = 0x080482ec r--- at buffer aaz   + 0x0000029c i386-pivot_root(.gnu.version_r+.rel.dyn+.rel.plt)
    va 0x080482ec + 0x00000017 = 0x08048303 r-x- at buffer abb   + 0x000002ec i386-pivot_root(.init)
    va 0x08048303 + 0x00000001 = 0x08048304 r-xp at buffer aab   + 0x00000303 i386-pivot_root(LOAD#2)
    va 0x08048304 + 0x0000023a = 0x0804853e r-x- at buffer abh   + 0x00000304 i386-pivot_root(.fini+.plt+.text)
    va 0x0804853e + 0x00000002 = 0x08048540 r-xp at buffer aab   + 0x0000053e i386-pivot_root(LOAD#2)
    va 0x08048540 + 0x0000002f = 0x0804856f r--- at buffer abj   + 0x00000540 i386-pivot_root(.rodata)
    va 0x0804856f + 0x00000001 = 0x08048570 r-xp at buffer aab   + 0x0000056f i386-pivot_root(LOAD#2)
    va 0x08048570 + 0x00000004 = 0x08048574 r--- at buffer abl   + 0x00000570 i386-pivot_root(.eh_frame)
    va 0x08048574 + 0x00000a8c = 0x08049000 r-xp at buffer aab   + 0x00000574 i386-pivot_root(LOAD#2)
    va 0x08049000 + 0x00000574 = 0x08049574 rw-p at buffer aaj   + 0x00000000 i386-pivot_root(LOAD#3)
    va 0x08049574 + 0x00000014 = 0x08049588 rw-- at buffer abr   + 0x00000574 i386-pivot_root(.ctors+.dtors+.jcr)
    va 0x08049588 + 0x000000c8 = 0x08049650 rw-p at buffer aal   + 0x00000000 i386-pivot_root(.dynamic)
    va 0x08049650 + 0x00000034 = 0x08049684 rw-- at buffer acb   + 0x00000650 i386-pivot_root(.bss+.data+.dynbss+.got+.got.plt)
    va 0x08049684 + 0x0000008a = 0x0804970e r--- at buffer acd   + 0x00000684 i386-pivot_root(.dynstr)
    va 0x0804970e + 0x00000002 = 0x08049710 rw-p at buffer aaj   + 0x0000070e i386-pivot_root(LOAD#3)
    va 0x08049710 + 0x000000cc = 0x080497dc r--- at buffer acf   + 0x00000710 i386-pivot_root(.gnu.conflict)
    va 0x080497dc + 0x00000824 = 0x0804a000 rw-p at buffer aaj   + 0x000007dc i386-pivot_root(LOAD#3)
disassembled 3479 instructions and 78 failures (use --show-bad to see errors)


0x08048314: ================================== Function (function call, import) <perror@plt>
0x08048314: Called by 0x080483fc

0x08048314: Basic block reasons: entry point, graph-1
0x08048314: Predecessor blocks: 0x08048455<<Func>>
0x08048314: ff 25 60 96 04 08       |.%`...  |   jmp    DWORD PTR ds:[0x08049660<.got.plt+0x0c>]
0x08048314: Successor blocks: unknown

0x0804831a: 68 00 00 00 00 e9 e0 ff |h.......|
0x08048322: ff ff                   |..      | 10 bytes untyped data beginning at 0x0804831a
0x0804831a: 68 00 00 00 00          |h....   | (data)   push   0x00000000
0x0804831f: e9 e0 ff ff ff          |.....   | (data)   jmp    0x08048304

0x08048324: ================================== Function (function call, import) <fprintf@plt>
0x08048324: Called by 0x080483fc

0x08048324: Basic block reasons: entry point, graph-1
0x08048324: Predecessor blocks: 0x08048411<<Func>>
0x08048324: ff 25 64 96 04 08       |.%d...  |   jmp    DWORD PTR ds:[0x08049664<.got.plt+0x10>]
0x08048324: Successor blocks: unknown

0x0804832a: 68 08 00 00 00 e9 d0 ff |h.......|
0x08048332: ff ff                   |..      | 10 bytes untyped data beginning at 0x0804832a
0x0804832a: 68 08 00 00 00          |h....   | (data)   push   0x00000008
0x0804832f: e9 d0 ff ff ff          |.....   | (data)   jmp    0x08048304

0x08048334: ================================== Function (function call, import) <syscall@plt>
0x08048334: Called by 0x080483fc

0x08048334: Basic block reasons: entry point, graph-1
0x08048334: Predecessor blocks: 0x08048435<<Func>>
0x08048334: ff 25 68 96 04 08       |.%h...  |   jmp    DWORD PTR ds:[0x08049668<.got.plt+0x14>]
0x08048334: Successor blocks: unknown

0x0804833a: 68 10 00 00 00 e9 c0 ff |h.......|
0x08048342: ff ff                   |..      | 10 bytes untyped data beginning at 0x0804833a
0x0804833a: 68 10 00 00 00          |h....   | (data)   push   0x00000010
0x0804833f: e9 c0 ff ff ff          |.....   | (data)   jmp    0x08048304

0x08048344: ================================== Function (function call, import) <__libc_start_main@plt>
0x08048344: Called by 0x08048354

0x08048344: Basic block reasons: entry point, graph-1
0x08048344: Predecessor blocks: 0x08048354<<Func>>
0x08048344: ff 25 6c 96 04 08       |.%l...  |   jmp    DWORD PTR ds:[0x0804966c<.got.plt+0x18>]
0x08048344: Successor blocks: unknown

0x0804834a: 68 18 00 00 00 e9 b0 ff |h.......|
0x08048352: ff ff                   |..      | 10 bytes untyped data beginning at 0x0804834a
0x0804834a: 68 18 00 00 00          |h....   | (data)   push   0x00000018
0x0804834f: e9 b0 ff ff ff          |.....   | (data)   jmp    0x08048304

0x08048354: ================================== Function (entry point) unknown name
0x08048354: No known callers.
0x08048354: This function calls 0x08048344<__libc_start_main@plt>
0x08048354: Function does not return to caller.

0x08048354: Basic block reasons: entry point, graph-1
0x08048354: 31 ed                   |1.      |   xor    ebp, ebp
0x08048356: 5e                      |^       |   pop    esi
0x08048357: 89 e1                   |..      |   mov    ecx, esp
0x08048359: 83 e4 f0                |...     |   and    esp, 0xf0<-16>
0x0804835c: 50                      |P       |   push   eax
0x0804835d: 54                      |T       |   push   esp
0x0804835e: 52                      |R       |   push   edx
0x0804835f: 68 bc 84 04 08          |h....   |   push   0x080484bc<<StaticData@0x08048468>+0x54>
0x08048364: 68 68 84 04 08          |hh...   |   push   0x08048468<<StaticData>>
0x08048369: 51                      |Q       |   push   ecx
0x0804836a: 56                      |V       |   push   esi
0x0804836b: 68 fc 83 04 08          |h....   |   push   0x080483fc<<Func>>
0x08048370: e8 cf ff ff ff          |.....   |   call   0x08048344<__libc_start_main@plt>
0x08048370: Successor blocks: 0x08048344<__libc_start_main@plt>, 0x08048375

0x08048375: Basic block reasons: graph-1
0x08048375: Predecessor blocks: 0x08048354
0x08048375: Dominator block: 0x08048354
0x08048375: f4                      |.       |   hlt    
0x08048375: Successor blocks: none

0x08048376: 90 90                   |..      | 2-byte padding beginning at 0x08048376

0x08048378: ================================== Function (interpadfunc) unknown name
0x08048378: No known callers.

0x08048378: Basic block reasons: entry point, graph-2
0x08048378: 55                      |U       |   push   ebp
0x08048379: 89 e5                   |..      |   mov    ebp, esp
0x0804837b: 53                      |S       |   push   ebx
0x0804837c: e8 00 00 00 00          |.....   |   call   0x08048381<<Insn>>
0x08048381: 5b                      |[       |   pop    ebx
0x08048382: 81 c3 d3 12 00 00       |......  |   add    ebx, 0x000012d3<4819>
0x08048388: 52                      |R       |   push   edx
0x08048389: 8b 83 fc ff ff ff       |......  |   mov    eax, DWORD PTR ds:[ebx + 0xfffffffc<-4>]
0x0804838f: 85 c0                   |..      |   test   eax, eax
0x08048391: 74 02                   |t.      |   je     0x08048395<<Insn>>
0x08048391: Successor blocks: 0x08048393, 0x08048395

0x08048393: Basic block reasons: graph-2
0x08048393: Predecessor blocks: 0x08048378
0x08048393: Dominator block: 0x08048378
0x08048393: ff d0                   |..      |   call   eax
0x08048393: Successor blocks: 0x08048395, unknown

0x08048395: Basic block reasons: graph-2
0x08048395: Predecessor blocks: 0x08048378, 0x08048393
0x08048395: Dominator block: 0x08048378
0x08048395: 58                      |X       |   pop    eax
0x08048396: 5b                      |[       |   pop    ebx
0x08048397: c9                      |.       |   leave  
0x08048398: c3                      |.       |   ret    
0x08048398: Successor blocks: unknown

0x08048399: 90 90 90                |...     | 3-byte padding beginning at 0x08048399

0x0804839c: ================================== Function (interpadfunc) unknown name
0x0804839c: No known callers.

0x0804839c: Basic block reasons: entry point, graph-2
0x0804839c: 55                      |U       |   push   ebp
0x0804839d: 89 e5                   |..      |   mov    ebp, esp
0x0804839f: 83 ec 08                |...     |   sub    esp, 0x08
0x080483a2: 80 3d 80 96 04 08 00    |.=..... |   cmp    BYTE PTR ds:[0x08049680<.bss>], 0x00
0x080483a9: 74 0f                   |t.      |   je     0x080483ba<<Insn>>
0x080483a9: Successor blocks: 0x080483ab, 0x080483ba

0x080483ab: Basic block reasons: graph-2
0x080483ab: Predecessor blocks: 0x0804839c
0x080483ab: Dominator block: 0x0804839c
0x080483ab: eb 1f                   |..      |   jmp    0x080483cc<<Insn>>
0x080483ab: Successor blocks: 0x080483cc

0x080483ad: 8d 76 00                |.v.     | 3 bytes untyped data beginning at 0x080483ad
0x080483ad: 8d 76 00                |.v.     | (data)   lea    esi, [esi + 0x00]

0x080483b0: Basic block reasons: graph-2
0x080483b0: Predecessor blocks: 0x080483ba
0x080483b0: Dominator block: 0x080483ba
0x080483b0: 83 c0 04                |...     |   add    eax, 0x04
0x080483b3: a3 78 96 04 08          |.x...   |   mov    DWORD PTR ds:[0x08049678<.data+8>], eax
0x080483b8: ff d2                   |..      |   call   edx
0x080483b8: Successor blocks: 0x080483ba, unknown

0x080483ba: Basic block reasons: graph-2
0x080483ba: Predecessor blocks: 0x0804839c, 0x080483b0
0x080483ba: Dominator block: 0x0804839c
0x080483ba: a1 78 96 04 08          |.x...   |   mov    eax, DWORD PTR ds:[0x08049678<.data+8>]
0x080483bf: 8b 10                   |..      |   mov    edx, DWORD PTR ds:[eax]
0x080483c1: 85 d2                   |..      |   test   edx, edx
0x080483c3: 75 eb                   |u.      |   jne    0x080483b0<<Insn>>
0x080483c3: Successor blocks: 0x080483b0, 0x080483c5

0x080483c5: Basic block reasons: graph-2
0x080483c5: Predecessor blocks: 0x080483ba
0x080483c5: Dominator block: 0x080483ba
0x080483c5: c6 05 80 96 04 08 01    |....... |   mov    BYTE PTR ds:[0x08049680<.bss>], 0x01
0x080483c5: Successor blocks: 0x080483cc

0x080483cc: Basic block reasons: graph-2
0x080483cc: Predecessor blocks: 0x080483ab, 0x080483c5
0x080483cc: Dominator block: 0x0804839c
0x080483cc: c9                      |.       |   leave  
0x080483cd: c3                      |.       |   ret    
0x080483cd: Successor blocks: unknown

0x080483ce: 89 f6 55 89 e5 83 ec 08 |..U.....|
0x080483d6: a1 84 95 04 08 85 c0 74 |.......t|
0x080483de: 19 b8 00 00 00 00 85 c0 |........|
0x080483e6: 74 10 83 ec 0c 68 84 95 |t....h..|
0x080483ee: 04 08 ff d0 83 c4 10 8d |........|
0x080483f6: 76 00 c9 c3             |v...    | 44 bytes untyped data beginning at 0x080483ce
0x080483ce: 89 f6                   |..      | (data)   mov    esi, esi
0x080483d0: 55                      |U       | (data)   push   ebp
0x080483d1: 89 e5                   |..      | (data)   mov    ebp, esp
0x080483d3: 83 ec 08                |...     | (data)   sub    esp, 0x08
0x080483d6: a1 84 95 04 08          |.....   | (data)   mov    eax, DWORD PTR ds:[0x08049584]
0x080483db: 85 c0                   |..      | (data)   test   eax, eax
0x080483dd: 74 19                   |t.      | (data)   je     0x080483f8
0x080483df: b8 00 00 00 00          |.....   | (data)   mov    eax, 0x00000000
0x080483e4: 85 c0                   |..      | (data)   test   eax, eax
0x080483e6: 74 10                   |t.      | (data)   je     0x080483f8
0x080483e8: 83 ec 0c                |...     | (data)   sub    esp, 0x0c
0x080483eb: 68 84 95 04 08          |h....   | (data)   push   0x08049584
0x080483f0: ff d0                   |..      | (data)   call   eax
0x080483f2: 83 c4 10                |...     | (data)   add    esp, 0x10
0x080483f5: 8d 76 00                |.v.     | (data)   lea    esi, [esi + 0x00]
0x080483f8: c9                      |.       | (data)   leave  
0x080483f9: c3                      |.       | (data)   ret    

0x080483fa: 90 90                   |..      | 2-byte padding beginning at 0x080483fa

0x080483fc: ================================== Function (interpadfunc) unknown name
0x080483fc: No known callers.
0x080483fc: This function calls 0x08048314<perror@plt>
0x080483fc: This function calls 0x08048324<fprintf@plt>
0x080483fc: This function calls 0x08048334<syscall@plt>

0x080483fc: Basic block reasons: entry point, graph-2
0x080483fc: 55                      |U       |   push   ebp
0x080483fd: 89 e5                   |..      |   mov    ebp, esp
0x080483ff: 83 ec 18                |...     |   sub    esp, 0x18
0x08048402: 83 e4 f0                |...     |   and    esp, 0xf0<-16>
0x08048405: 8b 55 0c                |.U.     |   mov    edx, DWORD PTR ss:[ebp + 0x0c]
0x08048408: 83 ec 10                |...     |   sub    esp, 0x10
0x0804840b: 83 7d 08 03             |.}..    |   cmp    DWORD PTR ss:[ebp + 0x08], 0x03
0x0804840f: 74 24                   |t$      |   je     0x08048435<<Insn>>
0x0804840f: Successor blocks: 0x08048411, 0x08048435

0x08048411: Basic block reasons: graph-2
0x08048411: Predecessor blocks: 0x080483fc
0x08048411: Dominator block: 0x080483fc
0x08048411: 8b 02                   |..      |   mov    eax, DWORD PTR ds:[edx]
0x08048413: c7 44 24 04 48 85 04 08 |.D$.H...|   mov    DWORD PTR ss:[esp + 0x04], 0x08048548<.rodata+8>
0x0804841b: 89 44 24 08             |.D$.    |   mov    DWORD PTR ss:[esp + 0x08], eax
0x0804841f: a1 7c 96 04 08          |.|...   |   mov    eax, DWORD PTR ds:[0x0804967c<.dynbss>]
0x08048424: 89 04 24                |..$     |   mov    DWORD PTR ss:[esp], eax
0x08048427: e8 f8 fe ff ff          |.....   |   call   0x08048324<fprintf@plt>
0x08048427: Successor blocks: 0x08048324<fprintf@plt>, 0x0804842c

0x0804842c: Basic block reasons: graph-2
0x0804842c: Predecessor blocks: 0x08048411
0x0804842c: Dominator block: 0x08048411
0x0804842c: ba 01 00 00 00          |.....   |   mov    edx, 0x00000001
0x0804842c: Successor blocks: 0x08048431

0x08048431: Basic block reasons: graph-2
0x08048431: Predecessor blocks: 0x0804842c, 0x0804844f, 0x08048466
0x08048431: Dominator block: 0x080483fc
0x08048431: 89 d0                   |..      |   mov    eax, edx
0x08048433: c9                      |.       |   leave  
0x08048434: c3                      |.       |   ret    
0x08048434: Successor blocks: unknown

0x08048435: Basic block reasons: graph-2
0x08048435: Predecessor blocks: 0x080483fc
0x08048435: Dominator block: 0x080483fc
0x08048435: 8b 42 08                |.B.     |   mov    eax, DWORD PTR ds:[edx + 0x08]
0x08048438: 89 44 24 08             |.D$.    |   mov    DWORD PTR ss:[esp + 0x08], eax
0x0804843c: 8b 42 04                |.B.     |   mov    eax, DWORD PTR ds:[edx + 0x04]
0x0804843f: c7 04 24 d9 00 00 00    |..$.... |   mov    DWORD PTR ss:[esp], 0x000000d9
0x08048446: 89 44 24 04             |.D$.    |   mov    DWORD PTR ss:[esp + 0x04], eax
0x0804844a: e8 e5 fe ff ff          |.....   |   call   0x08048334<syscall@plt>
0x0804844a: Successor blocks: 0x08048334<syscall@plt>, 0x0804844f

0x0804844f: Basic block reasons: graph-2
0x0804844f: Predecessor blocks: 0x08048435
0x0804844f: Dominator block: 0x08048435
0x0804844f: 31 d2                   |1.      |   xor    edx, edx
0x08048451: 85 c0                   |..      |   test   eax, eax
0x08048453: 79 dc                   |y.      |   jns    0x08048431<<Insn>>
0x08048453: Successor blocks: 0x08048431, 0x08048455

0x08048455: Basic block reasons: graph-2
0x08048455: Predecessor blocks: 0x0804844f
0x08048455: Dominator block: 0x0804844f
0x08048455: c7 04 24 64 85 04 08    |..$d... |   mov    DWORD PTR ss:[esp], 0x08048564<.rodata+0x24>
0x0804845c: e8 b3 fe ff ff          |.....   |   call   0x08048314<perror@plt>
0x0804845c: Successor blocks: 0x08048314<perror@plt>, 0x08048461

0x08048461: Basic block reasons: graph-2
0x08048461: Predecessor blocks: 0x08048455
0x08048461: Dominator block: 0x08048455
0x08048461: ba 01 00 00 00          |.....   |   mov    edx, 0x00000001
0x08048461: Successor blocks: 0x08048466

0x08048466: Basic block reasons: graph-2
0x08048466: Predecessor blocks: 0x08048461
0x08048466: Dominator block: 0x08048461
0x08048466: eb c9                   |..      |   jmp    0x08048431<<Insn>>
0x08048466: Successor blocks: 0x08048431

0x08048468: 55 89 e5 57 56 53 83 ec |U..WVS..|
0x08048470: 0c e8 00 00 00 00 5b 81 |......[.|
0x08048478: c3 de 11 00 00 e8 6a fe |......j.|
0x08048480: ff ff 8d 83 20 ff ff ff |.... ...|
0x08048488: 8d 93 20 ff ff ff 89 45 |.. ....E|
0x08048490: f0 29 d0 31 f6 c1 f8 02 |.).1....|
0x08048498: 39 c6 73 16 89 d7 89 f6 |9.s.....|
0x080484a0: ff 14 b2 8b 4d f0 29 f9 |....M.).|
0x080484a8: 46 c1 f9 02 39 ce 89 fa |F...9...|
0x080484b0: 72 ee 83 c4 0c 5b 5e 5f |r....[^_|
0x080484b8: c9 c3 89 f6 55 89 e5 57 |....U..W|
0x080484c0: 56 53 e8 00 00 00 00 5b |VS.....[|
0x080484c8: 81 c3 8d 11 00 00 8d 83 |........|
0x080484d0: 20 ff ff ff 8d bb 20 ff | ..... .|
0x080484d8: ff ff 29 f8 c1 f8 02 83 |..).....|
0x080484e0: ec 0c 8d 70 ff eb 05 90 |...p....|
0x080484e8: ff 14 b7 4e 83 fe ff 75 |...N...u|
0x080484f0: f7 e8 2e 00 00 00 83 c4 |........|
0x080484f8: 0c 5b 5e 5f c9 c3       |.[^_..  | 150 bytes untyped data beginning at 0x08048468
0x08048468: 55                      |U       | (data)   push   ebp
0x08048469: 89 e5                   |..      | (data)   mov    ebp, esp
0x0804846b: 57                      |W       | (data)   push   edi
0x0804846c: 56                      |V       | (data)   push   esi
0x0804846d: 53                      |S       | (data)   push   ebx
0x0804846e: 83 ec 0c                |...     | (data)   sub    esp, 0x0c
0x08048471: e8 00 00 00 00          |.....   | (data)   call   0x08048476
0x08048476: 5b                      |[       | (data)   pop    ebx
0x08048477: 81 c3 de 11 00 00       |......  | (data)   add    ebx, 0x000011de<4574>
0x0804847d: e8 6a fe ff ff          |.j...   | (data)   call   0x080482ec
0x08048482: 8d 83 20 ff ff ff       |.. ...  | (data)   lea    eax, [ebx + 0xffffff20<-224>]
0x08048488: 8d 93 20 ff ff ff       |.. ...  | (data)   lea    edx, [ebx + 0xffffff20<-224>]
0x0804848e: 89 45 f0                |.E.     | (data)   mov    DWORD PTR ss:[ebp + 0xf0<-16>], eax
0x08048491: 29 d0                   |).      | (data)   sub    eax, edx
0x08048493: 31 f6                   |1.      | (data)   xor    esi, esi
0x08048495: c1 f8 02                |...     | (data)   sar    eax, 0x02
0x08048498: 39 c6                   |9.      | (data)   cmp    esi, eax
0x0804849a: 73 16                   |s.      | (data)   jae    0x080484b2
0x0804849c: 89 d7                   |..      | (data)   mov    edi, edx
0x0804849e: 89 f6                   |..      | (data)   mov    esi, esi
0x080484a0: ff 14 b2                |...     | (data)   call   DWORD PTR ds:[edx + esi*0x04]
0x080484a3: 8b 4d f0                |.M.     | (data)   mov    ecx, DWORD PTR ss:[ebp + 0xf0<-16>]
0x080484a6: 29 f9                   |).      | (data)   sub    ecx, edi
0x080484a8: 46                      |F       | (data)   inc    esi
0x080484a9: c1 f9 02                |...     | (data)   sar    ecx, 0x02
0x080484ac: 39 ce                   |9.      | (data)   cmp    esi, ecx
0x080484ae: 89 fa                   |..      | (data)   mov    edx, edi
0x080484b0: 72 ee                   |r.      | (data)   jb     0x080484a0
0x080484b2: 83 c4 0c                |...     | (data)   add    esp, 0x0c
0x080484b5: 5b                      |[       | (data)   pop    ebx
0x080484b6: 5e                      |^       | (data)   pop    esi
0x080484b7: 5f                      |_       | (data)   pop    edi
0x080484b8: c9                      |.       | (data)   leave  
0x080484b9: c3                      |.       | (data)   ret    
0x080484ba: 89 f6                   |..      | (data)   mov    esi, esi
0x080484bc: 55                      |U       | (data)   push   ebp
0x080484bd: 89 e5                   |..      | (data)   mov    ebp, esp
0x080484bf: 57                      |W       | (data)   push   edi
0x080484c0: 56                      |V       | (data)   push   esi
0x080484c1: 53                      |S       | (data)   push   ebx
0x080484c2: e8 00 00 00 00          |.....   | (data)   call   0x080484c7
0x080484c7: 5b                      |[       | (data)   pop    ebx
0x080484c8: 81 c3 8d 11 00 00       |......  | (data)   add    ebx, 0x0000118d<4493>
0x080484ce: 8d 83 20 ff ff ff       |.. ...  | (data)   lea    eax, [ebx + 0xffffff20<-224>]
0x080484d4: 8d bb 20 ff ff ff       |.. ...  | (data)   lea    edi, [ebx + 0xffffff20<-224>]
0x080484da: 29 f8                   |).      | (data)   sub    eax, edi
0x080484dc: c1 f8 02                |...     | (data)   sar    eax, 0x02
0x080484df: 83 ec 0c                |...     | (data)   sub    esp, 0x0c
0x080484e2: 8d 70 ff                |.p.     | (data)   lea    esi, [eax + 0xff<-1>]
0x080484e5: eb 05                   |..      | (data)   jmp    0x080484ec
0x080484e7: 90                      |.       | (data)   nop    
0x080484e8: ff 14 b7                |...     | (data)   call   DWORD PTR ds:[edi + esi*0x04]
0x080484eb: 4e                      |N       | (data)   dec    esi
0x080484ec: 83 fe ff                |...     | (data)   cmp    esi, 0xff<-1>
0x080484ef: 75 f7                   |u.      | (data)   jne    0x080484e8
0x080484f1: e8 2e 00 00 00          |.....   | (data)   call   0x08048524
0x080484f6: 83 c4 0c                |...     | (data)   add    esp, 0x0c
0x080484f9: 5b                      |[       | (data)   pop    ebx
0x080484fa: 5e                      |^       | (data)   pop    esi
0x080484fb: 5f                      |_       | (data)   pop    edi
0x080484fc: c9                      |.       | (data)   leave  
0x080484fd: c3                      |.       | (data)   ret    

0x080484fe: 90 90                   |..      | 2-byte padding beginning at 0x080484fe



generating ASCII dump...
