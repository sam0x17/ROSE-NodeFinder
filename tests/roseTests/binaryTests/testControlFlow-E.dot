digraph G {
0[ label="0x08048278: push   ebp" ];
1[ label="0x08048279: mov    ebp, esp" ];
2[ label="0x0804827b: sub    esp, 0x08" ];
3[ label="0x0804827e: call   0x080482e4<call_gmon_start>" ];
4[ label="0x08048283: call   0x08048340<frame_dummy>" ];
5[ label="0x08048288: call   0x08048460<__do_global_ctors_aux>" ];
6[ label="0x0804828d: leave  " ];
7[ label="0x0804828e: ret    " ];
8[ label="0x080482a0: jmp    DWORD PTR ds:[0x080495a8<.got.plt+0x0c>]" ];
9[ label="0x080482b0: jmp    DWORD PTR ds:[0x080495ac<.got.plt+0x10>]" ];
10[ label="0x080482c0: xor    ebp, ebp" ];
11[ label="0x080482c2: pop    esi" ];
12[ label="0x080482c3: mov    ecx, esp" ];
13[ label="0x080482c5: and    esp, 0xf0<-16>" ];
14[ label="0x080482c8: push   eax" ];
15[ label="0x080482c9: push   esp" ];
16[ label="0x080482ca: push   edx" ];
17[ label="0x080482cb: push   0x08048414<__libc_csu_fini>" ];
18[ label="0x080482d0: push   0x080483c0<__libc_csu_init>" ];
19[ label="0x080482d5: push   ecx" ];
20[ label="0x080482d6: push   esi" ];
21[ label="0x080482d7: push   0x08048364<main>" ];
22[ label="0x080482dc: call   0x080482b0<__libc_start_main@plt>" ];
23[ label="0x080482e1: hlt    " ];
24[ label="0x080482e4: push   ebp" ];
25[ label="0x080482e5: mov    ebp, esp" ];
26[ label="0x080482e7: push   ebx" ];
27[ label="0x080482e8: call   0x080482ed<<Insn>>" ];
28[ label="0x080482ed: pop    ebx" ];
29[ label="0x080482ee: add    ebx, 0x000012af<4783>" ];
30[ label="0x080482f4: push   edx" ];
31[ label="0x080482f5: mov    eax, DWORD PTR ds:[ebx + 0xfffffffc<-4>]" ];
32[ label="0x080482fb: test   eax, eax" ];
33[ label="0x080482fd: je     0x08048301<<Insn>>" ];
34[ label="0x080482ff: call   eax" ];
35[ label="0x08048301: pop    eax" ];
36[ label="0x08048302: pop    ebx" ];
37[ label="0x08048303: leave  " ];
38[ label="0x08048304: ret    " ];
39[ label="0x08048310: push   ebp" ];
40[ label="0x08048311: mov    ebp, esp" ];
41[ label="0x08048313: sub    esp, 0x08" ];
42[ label="0x08048316: cmp    BYTE PTR ds:[0x080495bc<.bss>], 0x00" ];
43[ label="0x0804831d: je     0x0804832b<<Insn>>" ];
44[ label="0x0804831f: jmp    0x0804833d<<Insn>>" ];
45[ label="0x08048321: add    eax, 0x04" ];
46[ label="0x08048324: mov    DWORD PTR ds:[0x080495b8<.data+8>], eax" ];
47[ label="0x08048329: call   edx" ];
48[ label="0x0804832b: mov    eax, DWORD PTR ds:[0x080495b8<.data+8>]" ];
49[ label="0x08048330: mov    edx, DWORD PTR ds:[eax]" ];
50[ label="0x08048332: test   edx, edx" ];
51[ label="0x08048334: jne    0x08048321<<Insn>>" ];
52[ label="0x08048336: mov    BYTE PTR ds:[0x080495bc<.bss>], 0x01" ];
53[ label="0x0804833d: leave  " ];
54[ label="0x0804833e: ret    " ];
55[ label="0x08048340: push   ebp" ];
56[ label="0x08048341: mov    ebp, esp" ];
57[ label="0x08048343: sub    esp, 0x08" ];
58[ label="0x08048346: mov    eax, DWORD PTR ds:[0x080494cc<.jcr>]" ];
59[ label="0x0804834b: test   eax, eax" ];
60[ label="0x0804834d: je     0x08048361<<Insn>>" ];
61[ label="0x0804834f: mov    eax, 0x00000000" ];
62[ label="0x08048354: test   eax, eax" ];
63[ label="0x08048356: je     0x08048361<<Insn>>" ];
64[ label="0x08048358: mov    DWORD PTR ss:[esp], 0x080494cc<.jcr>" ];
65[ label="0x0804835f: call   eax" ];
66[ label="0x08048361: leave  " ];
67[ label="0x08048362: ret    " ];
68[ label="0x08048364: lea    ecx, [esp + 0x04]" ];
69[ label="0x08048368: and    esp, 0xf0<-16>" ];
70[ label="0x0804836b: push   DWORD PTR ds:[ecx + 0xfc<-4>]" ];
71[ label="0x0804836e: push   ebp" ];
72[ label="0x0804836f: mov    ebp, esp" ];
73[ label="0x08048371: push   ecx" ];
74[ label="0x08048372: sub    esp, 0x14" ];
75[ label="0x08048375: mov    DWORD PTR ss:[esp], 0x00000028" ];
76[ label="0x0804837c: call   0x080482a0<malloc@plt>" ];
77[ label="0x08048381: mov    DWORD PTR ss:[ebp + 0xf0<-16>], eax" ];
78[ label="0x08048384: mov    DWORD PTR ss:[ebp + 0xf4<-12>], 0x00000000" ];
79[ label="0x0804838b: mov    DWORD PTR ss:[ebp + 0xf4<-12>], 0x00000000" ];
80[ label="0x08048392: jmp    0x080483a6<<Insn>>" ];
81[ label="0x08048394: mov    eax, DWORD PTR ss:[ebp + 0xf4<-12>]" ];
82[ label="0x08048397: shl    eax, 0x02" ];
83[ label="0x0804839a: add    eax, DWORD PTR ss:[ebp + 0xf0<-16>]" ];
84[ label="0x0804839d: mov    DWORD PTR ds:[eax], 0x00000005" ];
85[ label="0x080483a3: inc    DWORD PTR ss:[ebp + 0xf4<-12>]" ];
86[ label="0x080483a6: cmp    DWORD PTR ss:[ebp + 0xf4<-12>], 0x09" ];
87[ label="0x080483aa: jle    0x08048394<<Insn>>" ];
88[ label="0x080483ac: mov    eax, DWORD PTR ss:[ebp + 0xf0<-16>]" ];
89[ label="0x080483af: add    eax, 0x30" ];
90[ label="0x080483b2: mov    eax, DWORD PTR ds:[eax]" ];
91[ label="0x080483b4: mov    DWORD PTR ss:[ebp + 0xf8<-8>], eax" ];
92[ label="0x080483b7: add    esp, 0x14" ];
93[ label="0x080483ba: pop    ecx" ];
94[ label="0x080483bb: pop    ebp" ];
95[ label="0x080483bc: lea    esp, [ecx + 0xfc<-4>]" ];
96[ label="0x080483bf: ret    " ];
97[ label="0x080483c0: push   ebp" ];
98[ label="0x080483c1: mov    ebp, esp" ];
99[ label="0x080483c3: push   edi" ];
100[ label="0x080483c4: push   esi" ];
101[ label="0x080483c5: push   ebx" ];
102[ label="0x080483c6: sub    esp, 0x0c" ];
103[ label="0x080483c9: call   0x080483ce<<Insn>>" ];
104[ label="0x080483ce: pop    ebx" ];
105[ label="0x080483cf: add    ebx, 0x000011ce<4558>" ];
106[ label="0x080483d5: call   0x08048278<_init>" ];
107[ label="0x080483da: lea    eax, [ebx + 0xffffff20<-224>]" ];
108[ label="0x080483e0: lea    edx, [ebx + 0xffffff20<-224>]" ];
109[ label="0x080483e6: mov    DWORD PTR ss:[ebp + 0xf0<-16>], eax" ];
110[ label="0x080483e9: sub    eax, edx" ];
111[ label="0x080483eb: xor    esi, esi" ];
112[ label="0x080483ed: sar    eax, 0x02" ];
113[ label="0x080483f0: cmp    esi, eax" ];
114[ label="0x080483f2: jae    0x0804840a<<Insn>>" ];
115[ label="0x0804840a: add    esp, 0x0c" ];
116[ label="0x0804840d: pop    ebx" ];
117[ label="0x0804840e: pop    esi" ];
118[ label="0x0804840f: pop    edi" ];
119[ label="0x08048410: leave  " ];
120[ label="0x08048411: ret    " ];
121[ label="0x080483f4: mov    edi, edx" ];
122[ label="0x080483f6: mov    esi, esi" ];
123[ label="0x080483f8: call   DWORD PTR ds:[edx + esi*0x04]" ];
124[ label="0x080483fb: mov    ecx, DWORD PTR ss:[ebp + 0xf0<-16>]" ];
125[ label="0x080483fe: sub    ecx, edi" ];
126[ label="0x08048400: inc    esi" ];
127[ label="0x08048401: sar    ecx, 0x02" ];
128[ label="0x08048404: cmp    esi, ecx" ];
129[ label="0x08048406: mov    edx, edi" ];
130[ label="0x08048408: jb     0x080483f8<<Insn>>" ];
131[ label="0x08048414: push   ebp" ];
132[ label="0x08048415: mov    ebp, esp" ];
133[ label="0x08048417: push   edi" ];
134[ label="0x08048418: push   esi" ];
135[ label="0x08048419: push   ebx" ];
136[ label="0x0804841a: call   0x0804841f<<Insn>>" ];
137[ label="0x0804841f: pop    ebx" ];
138[ label="0x08048420: add    ebx, 0x0000117d<4477>" ];
139[ label="0x08048426: lea    eax, [ebx + 0xffffff20<-224>]" ];
140[ label="0x0804842c: lea    edi, [ebx + 0xffffff20<-224>]" ];
141[ label="0x08048432: sub    eax, edi" ];
142[ label="0x08048434: sar    eax, 0x02" ];
143[ label="0x08048437: sub    esp, 0x0c" ];
144[ label="0x0804843a: lea    esi, [eax + 0xff<-1>]" ];
145[ label="0x0804843d: jmp    0x08048444<<Insn>>" ];
146[ label="0x08048444: cmp    esi, 0xff<-1>" ];
147[ label="0x08048447: jne    0x08048440<<Insn>>" ];
148[ label="0x08048449: call   0x08048494<_fini>" ];
149[ label="0x0804843f: nop    " ];
150[ label="0x08048440: call   DWORD PTR ds:[edi + esi*0x04]" ];
151[ label="0x08048443: dec    esi" ];
152[ label="0x0804844e: add    esp, 0x0c" ];
153[ label="0x08048451: pop    ebx" ];
154[ label="0x08048452: pop    esi" ];
155[ label="0x08048453: pop    edi" ];
156[ label="0x08048454: leave  " ];
157[ label="0x08048455: ret    " ];
158[ label="0x08048460: push   ebp" ];
159[ label="0x08048461: mov    ebp, esp" ];
160[ label="0x08048463: push   ebx" ];
161[ label="0x08048464: mov    ebx, 0x080494bc<.ctors>" ];
162[ label="0x08048469: sub    esp, 0x04" ];
163[ label="0x0804846c: mov    eax, DWORD PTR ds:[0x080494bc<.ctors>]" ];
164[ label="0x08048471: cmp    eax, 0xff<-1>" ];
165[ label="0x08048474: je     0x0804848c<<Insn>>" ];
166[ label="0x08048476: lea    esi, [esi + 0x00]" ];
167[ label="0x08048479: lea    edi, [edi + 0x00000000]" ];
168[ label="0x08048480: sub    ebx, 0x04" ];
169[ label="0x08048483: call   eax" ];
170[ label="0x08048485: mov    eax, DWORD PTR ds:[ebx]" ];
171[ label="0x08048487: cmp    eax, 0xff<-1>" ];
172[ label="0x0804848a: jne    0x08048480<<Insn>>" ];
173[ label="0x0804848c: pop    eax" ];
174[ label="0x0804848d: pop    ebx" ];
175[ label="0x0804848e: pop    ebp" ];
176[ label="0x0804848f: nop    " ];
177[ label="0x08048490: ret    " ];
178[ label="0x08048494: push   ebp" ];
179[ label="0x08048495: mov    ebp, esp" ];
180[ label="0x08048497: push   ebx" ];
181[ label="0x08048498: call   0x0804849d<<Insn>>" ];
182[ label="0x0804849d: pop    ebx" ];
183[ label="0x0804849e: add    ebx, 0x000010ff<4351>" ];
184[ label="0x080484a4: push   eax" ];
185[ label="0x080484a5: call   0x08048310<__do_global_dtors_aux>" ];
186[ label="0x080484aa: pop    ecx" ];
187[ label="0x080484ab: pop    ebx" ];
188[ label="0x080484ac: leave  " ];
189[ label="0x080484ad: ret    " ];
0->1 ;
1->2 ;
2->3 ;
6->7 ;
10->11 ;
11->12 ;
12->13 ;
13->14 ;
14->15 ;
15->16 ;
16->17 ;
17->18 ;
18->19 ;
19->20 ;
20->21 ;
21->22 ;
24->25 ;
25->26 ;
26->27 ;
27->28 ;
28->29 ;
29->30 ;
30->31 ;
31->32 ;
32->33 ;
35->36 ;
36->37 ;
37->38 ;
39->40 ;
40->41 ;
41->42 ;
42->43 ;
45->46 ;
46->47 ;
48->49 ;
49->50 ;
50->51 ;
53->54 ;
55->56 ;
56->57 ;
57->58 ;
58->59 ;
59->60 ;
61->62 ;
62->63 ;
64->65 ;
66->67 ;
68->69 ;
69->70 ;
71->72 ;
72->73 ;
73->74 ;
74->75 ;
75->76 ;
77->78 ;
78->79 ;
79->80 ;
81->82 ;
82->83 ;
83->84 ;
84->85 ;
86->87 ;
88->89 ;
89->90 ;
90->91 ;
91->92 ;
92->93 ;
93->94 ;
94->95 ;
95->96 ;
97->98 ;
98->99 ;
99->100 ;
100->101 ;
101->102 ;
102->103 ;
103->104 ;
104->105 ;
105->106 ;
107->108 ;
108->109 ;
109->110 ;
110->111 ;
111->112 ;
112->113 ;
113->114 ;
114->115 ;
115->116 ;
116->117 ;
117->118 ;
118->119 ;
119->120 ;
121->122 ;
122->123 ;
124->125 ;
125->126 ;
126->127 ;
127->128 ;
128->129 ;
129->130 ;
131->132 ;
132->133 ;
133->134 ;
134->135 ;
135->136 ;
136->137 ;
137->138 ;
138->139 ;
139->140 ;
140->141 ;
141->142 ;
142->143 ;
143->144 ;
144->145 ;
145->146 ;
146->147 ;
147->148 ;
149->150 ;
152->153 ;
153->154 ;
154->155 ;
155->156 ;
156->157 ;
158->159 ;
159->160 ;
160->161 ;
161->162 ;
162->163 ;
163->164 ;
164->165 ;
166->167 ;
168->169 ;
170->171 ;
171->172 ;
173->174 ;
174->175 ;
175->176 ;
176->177 ;
178->179 ;
179->180 ;
180->181 ;
181->182 ;
182->183 ;
183->184 ;
184->185 ;
186->187 ;
187->188 ;
188->189 ;
3->24 ;
4->55 ;
5->158 ;
22->9 ;
22->23 ;
33->34 ;
33->35 ;
34->35 ;
43->44 ;
43->48 ;
44->53 ;
47->48 ;
51->45 ;
51->52 ;
52->53 ;
60->61 ;
60->66 ;
63->66 ;
65->66 ;
70->71 ;
76->8 ;
76->77 ;
80->86 ;
85->86 ;
87->81 ;
87->88 ;
106->0 ;
123->124 ;
148->178 ;
150->151 ;
165->166 ;
165->173 ;
167->168 ;
169->170 ;
172->168 ;
172->173 ;
185->39 ;
7->107 ;
38->4 ;
54->186 ;
67->5 ;
177->6 ;
189->152 ;
}
