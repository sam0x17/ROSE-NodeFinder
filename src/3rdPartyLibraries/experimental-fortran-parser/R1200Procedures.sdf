      
%%%%%%%%%%
%% Fortran ISO/IEC 1539:1991 section 12xx Procedures section
%%%%%%%%%%

%%module languages/fortran/syntax/R1200Procedures
module R1200Procedures

imports
  %% languages/fortran/syntax/FortranLex
  %% languages/fortran/syntax/Fortran90
  FortranLex
  R500DataDeclarations
  R800ExecutionControl

exports

sorts

  InterfaceBlock                      %% R1201
  InterfaceSpecification              %% R1202
  InterfaceStmt                       %% R1203
  EndInterfaceStmt                    %% R1204
  InterfaceBody                       %% R1205
  ProcedureStmt                       %% R1206
  GenericSpec                         %% R1207
  DefinedIoGenericSpec                %% R1208
  ImportStmt                          %% R1209
  ExternalStmt                        %% R1210
  ProcedureDeclarationStmt            %% R1211
  ProcInterface                       %% R1212
  ProcAttrSpec                        %% R1213
  ProcDecl                            %% R1214
  ProcDeclList
                                      %% R1215  InterfaceName (FortranLex)
  ProcPointerInit                     %% R1216
  InitialProcTarget                   %% R1217
  IntrinsicStmt                       %% R1218
  FunctionReference                   %% R1219
  CallStmt                            %% R1220
  ProcedureDesignator                 %% R1221
  ActualArgSpec                       %% R1222
  ActualArg                           %% R1223
  AltReturnSpec                       %% R1224
  Prefix                              %% R1225
  PrefixSpec                          %% R1226
  FunctionSubprogram                  %% R1227
  FunctionStmt                        %% R1228
  ProcLanguageBindingSpec             %% R1229
  DummyArgName                        %% R1230
  Suffix                              %% R1231
  EndFunctionStmt                     %% R1232
  SubroutineSubprogram                %% R1233
  SubroutineStmt                      %% R1234
  DummyArg                            %% R1235
  EndSubroutineStmt                   %% R1236
  SeparateModuleSubprogram            %% R1237
  MpSubprogramStmt                    %% R1238
  EndMpSubprogramStmt                 %% R1239
  EntryStmt                           %% R1240
  ReturnStmt                          %% R1241
  ContainsStmt                        %% R1242
  StmtFunctionStmt                    %% R1243

  ActualArgSpecList DummyArgList DummyArgNameList ExternalNameList
  ImportNameList IntrinsicProcedureNameList ProcAttrSpecList ProcedureNameList

context-free syntax

%%R1201
  InterfaceStmt
    InterfaceSpecification*
  EndInterfaceStmt                -> InterfaceBlock          {cons("InterfaceBlock")}

%%R1202
  InterfaceBody                   -> InterfaceSpecification  {cons("InterfaceSpecification")}
  ProcedureStmt                   -> InterfaceSpecification  {cons("InterfaceSpecification")}


%%R1203
  Label? 'INTERFACE' GenericSpec?                  EOS -> InterfaceStmt     {cons("InterfaceStmt")}
  Label? 'ABSTRACT' 'INTERFACE'                    EOS -> InterfaceStmt     {cons("InterfaceStmt")}
      
%%R1204
  Label? 'END' 'INTERFACE' GenericSpec?            EOS -> EndInterfaceStmt  {cons("EndInterfaceStmt")}

%%R1205
%%     WARNING-MODIFICATION: 
%%       The optional SpecificationPart is ambiguous.  The lack of a SpecificationPart
%%       is detectable from an empty list and None components in the specification-part ATerm.
%%
  FunctionStmt   SpecificationPart EndFunctionStmt     -> InterfaceBody  {cons("InterfaceBody")}
  SubroutineStmt SpecificationPart EndSubroutineStmt   -> InterfaceBody  {cons("InterfaceBody")}

%%REMOVE-F08  LblDef FunctionPrefix FunctionName FunctionInterfaceRange           -> InterfaceBody
%%REMOVE-F08  LblDef 'SUBROUTINE' SubroutineName SubroutineInterfaceRange         -> InterfaceBody

%%REMOVE-F08  FunctionParList      EOS  SubprogramInterfaceBody EndFunctionStmt   -> FunctionInterfaceRange
%%REMOVE-F08  FunctionParList      EOS  EndFunctionStmt                           -> FunctionInterfaceRange

%%REMOVE-F08  SubroutineParList? ProcLanguageBindingSpec?
%%REMOVE-F08                       EOS  SubprogramInterfaceBody EndSubroutineStmt -> SubroutineInterfaceRange
%%REMOVE-F08  SubroutineParList? ProcLanguageBindingSpec?
%%REMOVE-F08                       EOS  EndSubroutineStmt                         -> SubroutineInterfaceRange

%%REMOVE-F08  SpecificationPartConstruct                                -> SubprogramInterfaceBody
%%REMOVE-F08  SubprogramInterfaceBody SpecificationPartConstruct        -> SubprogramInterfaceBody

%%R1206
  Label? 'MODULE' 'PROCEDURE' '::'? ProcedureNameList  EOS -> ProcedureStmt     {cons("ProcedureStmt_MODULE")}
  Label?          'PROCEDURE' '::'? ProcedureNameList  EOS -> ProcedureStmt     {cons("ProcedureStmt")}

  {ProcedureName ','}+                                     -> ProcedureNameList {cons("ProcedureNameList")}

%%R1207
  GenericName                                   -> GenericSpec           {cons("GenericSpec")}
  'OPERATOR'   '(' DefinedOperator ')'          -> GenericSpec           {cons("GenericSpec")}
  'ASSIGNMENT' '(' '='             ')'          -> GenericSpec           {cons("GenericSpec")}
  DefinedIoGenericSpec                          -> GenericSpec           {cons("GenericSpec")}

%%R1208
  'READ'  '(' 'FORMATTED'   ')'                 -> DefinedIoGenericSpec   {cons("DefinedIoGenericSpec_RF")}
  'READ'  '(' 'UNFORMATTED' ')'                 -> DefinedIoGenericSpec   {cons("DefinedIoGenericSpec_RU")}
  'WRITE' '(' 'FORMATTED'   ')'                 -> DefinedIoGenericSpec   {cons("DefinedIoGenericSpec_WF")}
  'WRITE' '(' 'UNFORMATTED' ')'                 -> DefinedIoGenericSpec   {cons("DefinedIoGenericSpec_WU")}

%%R1209
  Label? 'IMPORT' ( '::'? ImportNameList )?       EOS -> ImportStmt       {cons("ImportStmt")}

  {ImportName ','}+                                   -> ImportNameList   {cons("ImportNameList")}

%%R1210
  Label? 'EXTERNAL' '::'? ExternalNameList        EOS -> ExternalStmt     {cons("ExternalStmt")}

  {ExternalName ','}+                                 -> ExternalNameList {cons("ExternalNameList")}

%%R1211
  Label? 'PROCEDURE'
             '(' ProcInterface? ')'
             (( ',' ProcAttrSpecList )? '::')?
                                    ProcDeclList  EOS -> ProcedureDeclarationStmt
                                                                          {cons("ProcedureDeclarationStmt")}

%%R1212
  InterfaceName                                       -> ProcInterface    {cons("ProcInterface")}
  DeclarationTypeSpec                                 -> ProcInterface    {cons("ProcInterface")}

%%R1213
  AccessSpec                                          -> ProcAttrSpec     {cons("ProcAttrSpec_AS")}
  ProcLanguageBindingSpec                             -> ProcAttrSpec     {cons("ProcAttrSpec_PBS")}
  'INTENT' '(' IntentSpec ')'                         -> ProcAttrSpec     {cons("ProcAttrSpec_INTENT")}
  'OPTIONAL'                                          -> ProcAttrSpec     {cons("ProcAttrSpec_OPTIONAL")}
  'POINTER'                                           -> ProcAttrSpec     {cons("ProcAttrSpec_POINTER")}
  'SAVE'                                              -> ProcAttrSpec     {cons("ProcAttrSpec_SAVE")}
  {ProcAttrSpec ','}+                                 -> ProcAttrSpecList {cons("ProcAttrSpecList")}

%%R1214
  ProcedureEntityName ( '=>' ProcPointerInit )?       -> ProcDecl      {cons("ProcDecl")}
  {ProcDecl ','}+                                     -> ProcDeclList  {cons("ProcDeclList")}

%%R1215
%%Name                                                -> InterfaceName

%%R1216
  NullInit                                            -> ProcPointerInit    {cons("ProcPointerInit")}
  InitialProcTarget                                   -> ProcPointerInit    {cons("ProcPointerInit")}

%%R1217
  ProcedureName                                       -> InitialProcTarget  {cons("InitialProcTarget")}

%%R1218
  Label? 'INTRINSIC' '::'? IntrinsicProcedureNameList  EOS -> IntrinsicStmt  {cons("IntrinsicStmt")}

  {IntrinsicProcedureName ','}+                            -> IntrinsicProcedureNameList {cons("IntrinsicProcedureNameList")}

%%R1219
  ProcedureDesignator '(' ActualArgSpecList? ')'      -> FunctionReference   {cons("FunctionReference")}

%%R1220
  Label? 'CALL' ProcedureDesignator
                ( '(' ActualArgSpecList? ')' )?   EOS -> CallStmt            {cons("CallStmt")}

%%R1221
  ProcedureName                                       -> ProcedureDesignator {cons("ProcedureDesignator")}
%%ProcComponentRef   %% AMB with alt3
  DataRef '%' BindingName                             -> ProcedureDesignator {cons("ProcedureDesignator_AMB")}

%%R1222
  ( Keyword '=' )? ActualArg                          -> ActualArgSpec       {cons("ActualArgSpec")}
  {ActualArgSpec ','}+                                -> ActualArgSpecList   {cons("ActualArgSpecList")}

%%R1223
  Expr                                                -> ActualArg           {cons("ActualArg_AMB")}
%%Variable           %% AMB with alt1
%%ProcedureName      %% AMB with alt1
%%ProcComponentRef   %% AMB with alt1
  AltReturnSpec                                       -> ActualArg           {cons("ActualArg")}

%%1224
  '*' Label                                           -> AltReturnSpec       {cons("AltReturnSpec")}

%%1225
  PrefixSpec+                                         -> Prefix              {cons("Prefix")}

%%1226
  DeclarationTypeSpec                                 -> PrefixSpec          {cons("PrefixSpec")}
  'ELEMENTAL'                                         -> PrefixSpec          {cons("PrefixSpec_ELEMENTAL")}
  'IMPURE'                                            -> PrefixSpec          {cons("PrefixSpec_IMPURE")}
  'MODULE'                                            -> PrefixSpec          {cons("PrefixSpec_MODULE")}
  'PURE'                                              -> PrefixSpec          {cons("PrefixSpec_PURE")}
  'RECURSIVE'                                         -> PrefixSpec          {cons("PrefixSpec_RECURSIVE")}

%%R1227
%%     WARNING-MODIFICATION: 
%%       The optional SpecificationPart is ambiguous.  The lack of a SpecificationPart
%%       is detectable from an empty list and None components in the specification-part ATerm.
%%       ExecutionPart modified so it can be an empty list, thus it is not optional.
%%
  FunctionStmt
    SpecificationPart
    ExecutionPart
    InternalSubprogramPart?
  EndFunctionStmt                                      -> FunctionSubprogram  {cons("FunctionSubprogram")}

%%R1228
  Label? Prefix? 'FUNCTION' FunctionName
              '(' DummyArgNameList? ')' Suffix?    EOS -> FunctionStmt        {cons("FunctionStmt")}

%%R1229
  LanguageBindingSpec                                  -> ProcLanguageBindingSpec  {cons("ProcLanguageBindingSpec")}

%%R1230
  Ident                                                -> DummyArgName     {cons("DummyArgName")}
  {DummyArgName ','}+                                  -> DummyArgNameList {cons("DummyArgNameList")}

%%R1231
  ProcLanguageBindingSpec ('RESULT' '(' ResultName ')')?   -> Suffix       {cons("Suffix")}
  'RESULT' '(' ResultName ')' ProcLanguageBindingSpec?     -> Suffix       {cons("Suffix")}

%%R1232
  Label? 'END' ('FUNCTION' FunctionName?)?         EOS -> EndFunctionStmt  {cons("EndFunctionStmt")}

%%R1233
%%     WARNING-MODIFICATION: 
%%       The optional SpecificationPart is ambiguous.  The lack of a SpecificationPart
%%       is detectable from an empty list and None components in the specification-part ATerm.
%%       ExecutionPart modified so it can be an empty list, thus it is not optional.
%%
  SubroutineStmt
    SpecificationPart
    ExecutionPart
    InternalSubprogramPart?
  EndSubroutineStmt                             -> SubroutineSubprogram  {cons("SubroutineSubprogram")}

%%1234
  Label? Prefix? 'SUBROUTINE' SubroutineName
         (
            '(' DummyArgList? ')'
             ProcLanguageBindingSpec?
         )?                                 EOS -> SubroutineStmt        {cons("SubroutineStmt")}

%%R1235
  DummyArgName                                  -> DummyArg              {cons("DummyArg")}
  '*'                                           -> DummyArg              {cons("DummyArg")}
  {DummyArg ','}+                               -> DummyArgList          {cons("DummyArgList")}

%%R1236
  Label? 'END' ('SUBROUTINE' SubroutineName?)? EOS -> EndSubroutineStmt {cons("EndSubroutineStmt")}

%%R1237
%%     WARNING-MODIFICATION: 
%%       The optional SpecificationPart is ambiguous.  The lack of a SpecificationPart
%%       is detectable from an empty list and None components in the specification-part ATerm.
%%       ExecutionPart modified so it can be an empty list, thus it is not optional.
%%
  MpSubprogramStmt
    SpecificationPart
    ExecutionPart
    InternalSubprogramPart?
  EndMpSubprogramStmt                            -> SeparateModuleSubprogram {cons("SeparateModuleSubprogram")}

%%R1238
  Label? 'MODULE' 'PROCEDURE' ProcedureName  EOS -> MpSubprogramStmt         {cons("MpSubprogramStmt")}

%%R1239
  Label? 'END' ('PROCEDURE' ProcedureName?)? EOS -> EndMpSubprogramStmt      {cons("EndMpSubprogramStmt")}

%%R1240
  Label? 'ENTRY' EntryName ( '(' DummyArgList? ')' Suffix? )?  EOS -> EntryStmt  {cons("EntryStmt")}

%%R1241
%%       expr substituted for scalar-int-expr
%%
  Label? 'RETURN' Expr?                     EOS -> ReturnStmt          {cons("ReturnStmt")}

%%R1242
  Label? 'CONTAINS'                         EOS -> ContainsStmt        {cons("ContainsStmt")}

%%R1243
%%          scalar-expr replaced by expr
%%
  Label? FunctionName '(' DummyArgNameList? ')' '=' Expr  EOS -> StmtFunctionStmt  {cons("StmtFunctionStmt")}
