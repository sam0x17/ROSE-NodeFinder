      
%%%%%%%%%%
%% Fortran ISO/IEC 1539:1991 section R9xx Input/Output Statements
%%%%%%%%%%

%%TODO module languages/fortran/syntax/R900IOStatements
module R900IOStatements

imports
%%TODO  languages/fortran/syntax/FortranLex
%%TODO  languages/fortran/syntax/Fortran90
  FortranLex
  R600UseDataObjects

exports

sorts

%% 9.5 File connection

  IoUnit                              %% R901
  FileUnitNumber                      %% R902
  InternalFileVariable                %% R903
  OpenStmt                            %% R904
  ConnectSpec                         %% R905
  FileNameExpr                        %% R906
  IomsgVariable                       %% R907
  CloseStmt                           %% R908
  CloseSpec                           %% R909

  CloseSpecList ConnectSpecList

%% 9.6 Data transfer statements

  ReadStmt                            %% R910
  WriteStmt                           %% R911
  PrintStmt                           %% R912
  IoControlSpec                       %% R913
  IdVariable                          %% R914
  Format                              %% R915
  InputItem                           %% R916
  OutputItem                          %% R917
  IoImpliedDo                         %% R918
  IoImpliedDoObject                   %% R919
  IoImpliedDoControl                  %% R920

  InputItemList IoControlSpecList
  IoImpliedDoObjectList OutputItemList

%% 9.7 Waiting on pending data transfer

  WaitStmt                            %% R922
  WaitSpec                            %% R923
  WaitSpecList

%% 9.8 File positioning statements

  BackspaceStmt                        %% R924
  EndfileStmt                          %% R925
  RewindStmt                           %% R926
  PositionSpec                         %% R927
  PositionSpecList

%% 9.9 FLUSH statement

  FlushStmt                           %% R928
  FlushSpec                           %% R929
  FlushSpecList

%% 9.10 File inquiry statement

  InquireStmt                         %% R930
  InquireSpec                         %% R931
  InquireSpecList

context-free syntax

%%TODO-FiXME
%% already defined in R800 section:
%%  Icon  ->  LblRef


%% 9.5 File connection
%%

%%R901
%%         int-expr substituted for file-unit-number
%%         char-variable substituted for internal-file-variable
%%
  IntExpr                                        -> IoUnit          {cons("IoUnit_FUN")}
  '*'                                            -> IoUnit          {cons("IoUnit_STAR")}
  CharVariable                                   -> IoUnit          {cons("IoUnit_IFV")}

%%R902
%%         int-expr substituted for scalar-int-expr
%%
  IntExpr                                        -> FileUnitNumber  {cons("FileUnitNumber")}

%%R903
  CharVariable                                   -> InternalFileVariable  {cons("InternalFileVariable")}

%%R904
  Label? 'OPEN' '(' ConnectSpecList ')'      EOS -> OpenStmt        {cons("OpenStmt")}

%%R905
%%         default-char-expr substituted for scalar-default-char-expr
%%         int-variable substituted for scalar-int-variable
%%
                      FileUnitNumber             -> ConnectSpec   {cons("ConnectSpec_UNIT")}
  'UNIT'         '='  FileUnitNumber             -> ConnectSpec   {cons("ConnectSpec_UNIT")}
  'ACCESS'       '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_ACCESS")}
  'ACTION'       '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_ACTION")}
  'ASYNCHRONOUS' '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_ASYNCHRONOUS")}
  'BLANK'        '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_BLANK")}
  'DECIMAL'      '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_DECIMAL")}
  'DELIM'        '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_DELIM")}
  'ENCODING'     '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_ENCODING")}
  'ERR'          '='  LblRef                     -> ConnectSpec   {cons("ConnectSpec_ERR")}
  'FILE'         '='  FileNameExpr               -> ConnectSpec   {cons("ConnectSpec_FILE")}
  'FORM'         '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_FORM")}
  'IOMSG'        '='  IomsgVariable              -> ConnectSpec   {cons("ConnectSpec_IOMSG")}
  'IOSTAT'       '='  IntVariable                -> ConnectSpec   {cons("ConnectSpec_IOSTAT")}
  'NEWUNIT'      '='  IntVariable                -> ConnectSpec   {cons("ConnectSpec_NEWUNIT")}
  'PAD'          '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_PAD")}
  'POSITION'     '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_POSITION")}
  'RECL'         '='  IntExpr                    -> ConnectSpec   {cons("ConnectSpec_RECL")}
  'ROUND'        '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_ROUND")}
  'SIGN'         '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_SIGN")}
  'STATUS'       '='  DefaultCharExpr            -> ConnectSpec   {cons("ConnectSpec_STATUS")}
%%'TEAM'         '='  ImageTeam          %%TODO - is this in standard for F08?

  {ConnectSpec ','}+                             -> ConnectSpecList {cons("ConnectSpecList")}

%%R906
%%           default-char-expr substituted for scalar-default-char-expr
  DefaultCharExpr                               -> FileNameExpr   {cons("FileNameExpr")}

%%R907
%%           default-char-expr substituted for scalar-default-char-expr
  DefaultCharExpr                               -> IomsgVariable  {cons("IomsgVariable")}

%%R908
  Label? 'CLOSE' '(' CloseSpecList ')'     EOS -> CloseStmt      {cons("CloseStmt")}

%%R909
%%           default-char-expr substituted for scalar-default-char-expr
%%           int-variable substituted for scalar-int-variable
%%
                      FileUnitNumber            -> CloseSpec      {cons("CloseSpec_UNIT")}
  'UNIT'         '='  FileUnitNumber            -> CloseSpec      {cons("CloseSpec_UNIT")}
  'IOSTAT'       '='  IntVariable               -> CloseSpec      {cons("CloseSpec_IOSTAT")}
  'IOMSG'        '='  IomsgVariable             -> CloseSpec      {cons("CloseSpec_IOMSG")}
  'ERR'          '='  LblRef                    -> CloseSpec      {cons("CloseSpec_ERR")}
  'STATUS'       '='  DefaultCharExpr           -> CloseSpec      {cons("CloseSpec_STATUS")}
  {CloseSpec ','}+                              -> CloseSpecList  {cons("CloseSpecList")}


%% 9.6 Data transfer statements
%%

%%910
  Label? 'READ' '(' IoControlSpecList ')' InputItemList?    EOS -> ReadStmt  {cons("ReadStmt_ICSL")}
  Label? 'READ' Format              ( ',' InputItemList )?  EOS -> ReadStmt  {cons("ReadStmt_F")}

%%R911
  Label? 'WRITE' '(' IoControlSpecList ')' OutputItemList?  EOS -> WriteStmt {cons("WriteStmt")}

%%R912
  Label? 'PRINT' Format (',' OutputItemList )?              EOS -> PrintStmt {cons("PrintStmt")}

%%R913
%% TODO-F08  io-unit and format must be first and second (without {UNIT,FMT}=)
%%           default-char-expr substituted for scalar-default-char-expr
%%
                      IoUnit                      -> IoControlSpec  {cons("IoControlSpec_UNIT")}
  'UNIT'         '='  IoUnit                      -> IoControlSpec  {cons("IoControlSpec_UNIT")}
                      Format                      -> IoControlSpec  {cons("IoControlSpec_FMT")}
  'FMT'          '='  Format                      -> IoControlSpec  {cons("IoControlSpec_FMT")}
                      NamelistGroupName           -> IoControlSpec  {cons("IoControlSpec_NML")}
  'NML'          '='  NamelistGroupName           -> IoControlSpec  {cons("IoControlSpec_NML")}
  'ADVANCE'      '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_ADVANCE")}
  'ASYNCHRONOUS' '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_ASYNCHRONOUS")}
  'BLANK'        '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_BLANK")}
  'DECIMAL'      '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_DECIMAL")}
  'DELIM'        '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_DELIM")}
  'END'          '='  LblRef                      -> IoControlSpec  {cons("IoControlSpec_END")}
  'EOR'          '='  LblRef                      -> IoControlSpec  {cons("IoControlSpec_EOR")}
  'ERR'          '='  LblRef                      -> IoControlSpec  {cons("IoControlSpec_ERR")}
  'ID'           '='  IdVariable                  -> IoControlSpec  {cons("IoControlSpec_ID")}
  'IOMSG'        '='  IomsgVariable               -> IoControlSpec  {cons("IoControlSpec_IOMSG")}
  'IOSTAT'       '='  IntVariable                 -> IoControlSpec  {cons("IoControlSpec_IOSTAT")}
  'PAD'          '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_PAD")}
  'POS'          '='  Expr                        -> IoControlSpec  {cons("IoControlSpec_POS")}
  'REC'          '='  Expr                        -> IoControlSpec  {cons("IoControlSpec_REC")}
  'ROUND'        '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_ROUND")}
  'SIGN'         '='  DefaultCharExpr             -> IoControlSpec  {cons("IoControlSpec_SIGN")}
  'SIZE'         '='  IntVariable                 -> IoControlSpec  {cons("IoControlSpec_SIZE")}

  {IoControlSpec ','}+                            -> IoControlSpecList {cons("IoControlSpecList")}

%%R914
  IntVariable                                     -> IdVariable     {cons("IdVariable")}

%%R915
  DefaultCharExpr                                 -> Format         {cons("Format_DCE")}
  Label                                           -> Format         {cons("Format_L")}
  '*'                                             -> Format         {cons("Format_STAR")}

%%R916
  Variable                                        -> InputItem      {cons("InputItem")}
  IoImpliedDo                                     -> InputItem      {cons("InputItem")}
  {InputItem ','}+                                -> InputItemList  {cons("InputItemList")}

%%R917
  Expr                                            -> OutputItem     {cons("OutputItem")}
  IoImpliedDo                                     -> OutputItem     {cons("OutputItem")}
  {OutputItem ','}+                               -> OutputItemList {cons("OutputItemList")}

%%R918
  '('
      IoImpliedDoObjectList ',' IoImpliedDoControl
  ')'                                             -> IoImpliedDo    {cons("IoImpliedDo")}

%%R919
  InputItem                                       -> IoImpliedDoObject     {cons("IoImpliedDoObject")}
  OutputItem                                      -> IoImpliedDoObject     {cons("IoImpliedDoObject")}
  {IoImpliedDoObject ','}+                        -> IoImpliedDoObjectList {cons("IoImpliedDoObjectList")}

%%R920
  DoVariable '=' IntExpr  ','
                 IntExpr (',' IntExpr)?           -> IoImpliedDoControl {cons("IoImpliedDoControl")}

%% 9.7 Waiting on pending data transfer
%%

%%R922
  Label? 'WAIT' '(' WaitSpecList ')'                EOS -> WaitStmt       {cons("WaitStmt")}

%%R923
%%           int-expr substituted for scalar-int-expr
%%           int-variable substituted for scalar-int-variable
%%

                FileUnitNumber                          -> WaitSpec       {cons("WaitSpec_UNIT")}
  'UNIT'   '='  FileUnitNumber                          -> WaitSpec       {cons("WaitSpec_UNIT")}
  'END'    '='  LblRef                                  -> WaitSpec       {cons("WaitSpec_END")}
  'EOR'    '='  LblRef                                  -> WaitSpec       {cons("WaitSpec_EOR")}
  'ERR'    '='  LblRef                                  -> WaitSpec       {cons("WaitSpec_ERR")}
  'ID'     '='  IntExpr                                 -> WaitSpec       {cons("WaitSpec_ID")}
  'IOMSG'  '='  IomsgVariable                           -> WaitSpec       {cons("WaitSpec_IOMSG")}
  'IOSTAT' '='  IntExpr                                 -> WaitSpec       {cons("WaitSpec_IOSTAT")}
  {WaitSpec ','}+                                       -> WaitSpecList   {cons("WaitSpecList")}


%% 9.8 File positioning statements
%%

%%R924
  Label? 'BACKSPACE' FileUnitNumber                EOS -> BackspaceStmt   {cons("BackspaceStmt_FUN")}
  Label? 'BACKSPACE' '(' PositionSpecList ')'      EOS -> BackspaceStmt   {cons("BackspaceStmt_PSL")}

%%R925
  Label? 'END' 'FILE' FileUnitNumber               EOS -> EndfileStmt     {cons("EndfileStmt_FUN")}
  Label? 'END' 'FILE' '(' PositionSpecList ')'     EOS -> EndfileStmt     {cons("EndfileStmt_PSL")}

%%R926
  Label? 'REWIND' FileUnitNumber                   EOS -> RewindStmt      {cons("RewindStmt_FUN")}
  Label? 'REWIND' '(' PositionSpecList ')'         EOS -> RewindStmt      {cons("RewindStmt_PSL")}

%%R927
                 FileUnitNumber                        -> PositionSpec    {cons("PositionSpec_UNIT")}
  'UNIT'    '='  FileUnitNumber                        -> PositionSpec    {cons("PositionSpec_UNIT")}
  'IOSTAT'  '='  IntVariable                           -> PositionSpec    {cons("PositionSpec_IOSTAT")}
  'IOMSG'   '='  IomsgVariable                         -> PositionSpec    {cons("PositionSpec_IOMSG")}
  'ERR'     '='  LblRef                                -> PositionSpec    {cons("PositionSpec_ERR")}
  {PositionSpec ','}+                                  -> PositionSpecList{cons("PositionSpecList")}


%% 9.9 FLUSH statement
%%

%%R928
  Label? 'FLUSH' FileUnitNumber                     EOS -> FlushStmt      {cons("FlushStmt_FUN")}
  Label? 'FLUSH' '(' FlushSpecList ')'              EOS -> FlushStmt      {cons("FlushStmt_FSL")}

%%R929
%%           int-variable substituted for scalar-int-variable
%%
                 FileUnitNumber                         -> FlushSpec      {cons("FlushSpec_UNIT")}
  'UNIT'    '='  FileUnitNumber                         -> FlushSpec      {cons("FlushSpec_UNIT")}
  'IOSTAT'  '='  IntVariable                            -> FlushSpec      {cons("FlushSpec_IOSTAT")}
  'IOMSG'   '='  IomsgVariable                          -> FlushSpec      {cons("FlushSpec_IOMSG")}
  'ERR'     '='  LblRef                                 -> FlushSpec      {cons("FlushSpec_ERR")}
  {FlushSpec ','}+                                      -> FlushSpecList  {cons("FlushSpecList")}


%% 9.10 File inquiry statement
%%

%%R930
%%           int-variable substituted for scalar-int-variable
%%
  Label? 'INQUIRE' '(' InquireSpecList ')'          EOS -> InquireStmt {cons("InquireStmt_ISL")}
  Label? 'INQUIRE' '(' 'IOLENGTH' '=' IntVariable ')' OutputItemList
                                                    EOS -> InquireStmt {cons("InquireStmt_IOLENGTH")}

%%R931
%%           default-char-expr substituted for scalar-default-char-expr
%%           logical-variable substituted for scalar-logical-variable
%%           int-variable substituted for scalar-int-variable
%%
                      FileUnitNumber                   -> InquireSpec  {cons("InquireSpec_UNIT")} 
  'UNIT'         '='  FileUnitNumber                   -> InquireSpec  {cons("InquireSpec_UNIT")} 
  'FILE'         '='  FileNameExpr                     -> InquireSpec  {cons("InquireSpec_FILE")}  
  'ACCESS'       '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_ACCESS")}  
  'ACTION'       '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_ACTION")}  
  'ASYNCHRONOUS' '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_ASYNCHRONOUS")}  
  'BLANK'        '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_BLANK")}  
  'DECIMAL'      '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_DECIMAL")}  
  'DELIM'        '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_DELIM")}  
  'DIRECT'       '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_DIRECT")}  
  'ENCODING'     '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_ENCODING")}  
  'ERR'          '='  LblRef                           -> InquireSpec  {cons("InquireSpec_ERR")}  
  'EXIST '       '='  LogicalVariable                  -> InquireSpec  {cons("InquireSpec_EXIST")}  
  'FORM'         '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_FORM")}  
  'FORMATTED'    '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_FORMATTED")}
  'ID'           '='  IntExpr                          -> InquireSpec  {cons("InquireSpec_ID")}  
  'IOMSG'        '='  IomsgVariable                    -> InquireSpec  {cons("InquireSpec_IOMSG")}  
  'IOSTAT'       '='  IntVariable                      -> InquireSpec  {cons("InquireSpec_IOSTAT")}  
  'NAME'         '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_NAME")}  
  'NAMED'        '='  LogicalVariable                  -> InquireSpec  {cons("InquireSpec_NAMED")}  
  'NEXTREC'      '='  IntVariable                      -> InquireSpec  {cons("InquireSpec_NEXTREC")}  
  'NUMBER'       '='  IntVariable                      -> InquireSpec  {cons("InquireSpec_NUMBER")}  
  'OPENED'       '='  LogicalVariable                  -> InquireSpec  {cons("InquireSpec_OPENED")}  
  'PAD'          '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_PAD")}  
  'PENDING'      '='  LogicalVariable                  -> InquireSpec  {cons("InquireSpec_PENDING")}  
  'POS'          '='  IntVariable                      -> InquireSpec  {cons("InquireSpec_POS")}  
  'POSITION'     '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_POSITION")}  
  'READ'         '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_READ")}  
  'READWRITE'    '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_READWRITE")}  
  'RECL'         '='  IntVariable                      -> InquireSpec  {cons("InquireSpec_RECL")}  
  'ROUND'        '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_ROUND")}  
  'SEQUENTIAL '  '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_SEQUENTIAL")}  
  'SIGN'         '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_SIGN")}  
  'SIZE'         '='  IntVariable                      -> InquireSpec  {cons("InquireSpec_SIZE")}  
  'STREAM'       '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_STREAM")}  
%%'TEAM'         '='  ImageTeam          %%TODO-F08
  'UNFORMATTED'  '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_UNFORMATTED")}  
  'WRITE'        '='  DefaultCharExpr                  -> InquireSpec  {cons("InquireSpec_WRITE")}

  {InquireSpec ','}+                                   -> InquireSpecList {cons("InquireSpecList")}
