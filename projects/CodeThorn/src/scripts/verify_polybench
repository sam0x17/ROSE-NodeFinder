#!/bin/bash 

# Author: Markus Schordan, 2014.
# this file assumes codethorn to be available in PATH.

MYBENCHPATH="."
CODETHORN=codethorn
CODETHORN_OPTIONS="-DARRAYSIZE=16 -DSTEPSIZE=2 -DGRIDSIZE=2 --threads=6 --edg:no_warnings --rule-const-subst=no"

all_benchmarks="2mm 3mm adi atax bicg cholesky correlation covariance durbin fdtd-2d floyd-warshall gemm gemver gesummv gramschmidt jacobi-1d-imper jacobi-2d-imper ludcmp lu mvt reg_detect seidel-2d symm syr2k syrk trisolv trmm"
all_longbenchmarks="fdtd-apml doitgen"
some_variants1="fuse_nofuse fuse_smartfuse tile_1_5_1 tile_5_16_1 tile_8_16_1"
some_variants2="fuse_nofuse fuse_maxfuse fuse_smartfuse tile_1_5_1 tile_5_16_1 tile_8_16_1 tile_8_5_1"
some_variants3="fuse_smartfuse tile_8_8_1"
all_variants1=`ls jacobi-1d-imper_mod_*.c | sed 's/jacobi-1d-imper_mod_//g'| grep -v 32 | sed 's/\.c//g'`
all_variants2=`ls jacobi-1d-imper_mod_*.c | sed 's/jacobi-1d-imper_mod_//g'| sed 's/\.c//g'`

function check {
dirname=$1 # directory where to test
origtestresult=$2 # result file
fullbenchname=$3 # name of program
onlybenchname=`basename "$fullbenchname"`

#echo -n "checking variant  : ${onlybenchname}.c: " 
printf "checking variant  : %-40s: " "$onlybenchname.c"

if [ -e ${fullbenchname}.c ]; then
  if(${CODETHORN} ${fullbenchname}.c -I${dirname} ${CODETHORN_OPTIONS} --dump-sorted=${fullbenchname}.check --dump-non-sorted=${fullbenchname}.nscheck --csv-stats=${fullbenchname}.stats >& /dev/null); then
    if(diff ${origtestresult} ${fullbenchname}.check >& /dev/null); then
      echo "PASS" > ${fullbenchname}.verify
      cat ${fullbenchname}.verify
    else
      echo "FAIL" > ${fullbenchname}.verify
      cat ${fullbenchname}.verify
    fi
  else
    echo "ERROR" > ${fullbenchname}.verify
    cat ${fullbenchname}.verify
  fi

else
  echo "SKIP (does not exist)"
  # generate empty stats file
  echo "Sizes, -, -, -, -">${fullbenchname}.stats
  echo "Runtime(readable), -, -, -, -, -, -, -, -, -">>${fullbenchname}.stats
  echo "rewrite-stats, -, -, -, -, -,-,-">>${fullbenchname}.stats
fi
}

function check_benchmark {
  i=$1 # directory path
  benchname=$2
      if [ -f "${i}/${benchname}_mod.c" ]; then
        echo "------------------------------------------------------------------"
        printf "Checking: %-40s          ------\n" ${benchname}
        echo "------------------------------------------------------------------"
        # create mod-benchmark result
        printf "analyzing original: %-40s: " "${benchname}_mod.c"
        if(${CODETHORN} ${i}/${benchname}_mod.c -I${i} ${CODETHORN_OPTIONS} --dump-sorted=${i}/${benchname}_mod.check --dump-non-sorted=${i}/${benchname}_mod.nscheck --csv-stats=${i}/${benchname}_mod.stats >& ${i}/${benchname}_mod.log); then
  		  printf "DONE\n"
          # check with variants
  		  for variant in $all_variants2; do
            check "${i}" "${i}/${benchname}_mod.check" "${i}/${benchname}_mod_${variant}"
          done
        else
          printf "ERROR\n"
		  echo "ERROR" > ${i}/${benchname}_mod.verify
        fi
      else
        echo "Error 2: ${i}/${benchname}_mod.c does not exit."
        exit
      fi
}

function runallgeneralbenchmarks_param {
  date > overallruntime.stats
  selectedbenchmarks="$1"
  for mybench in ${selectedbenchmarks}; do
    check_benchmark ${MYBENCHPATH} ${mybench}
  done
  date >> overallruntime.stats
}

function runallgeneralbenchmarks {
# all benchmarks for 3 above cases
for mybenchpath in polybench_variants; do
for mybench in ${all_benchmarks}; do
  check_benchmark $MYBENCHPATH ${mybench}
done
done
}

hash $CODETHORN 2>/dev/null || { echo >&2 "The program codethorn is required but it's not installed. Aborting."; exit 1; }

if [ "$#" -eq 0 ]; then
    echo "Usage: verify_polybench --checkallmedium | --checklong1 | --checklong2 | --checkfuncalls | --checkfast | --check <benchmark> --list"
    exit
fi
   case "$1" in
        --checkallmedium) runallgeneralbenchmarks
            ;;
	    --checklong1)
               runallgeneralbenchmarks_param "fdtd-apml"
            ;;
	    --checklong2)
               runallgeneralbenchmarks_param "doitgen"
            ;;
       --checkfuncalls)
           # cond-operator: cholesky, correlation
           # function call only: gramschmidt
           runallgeneralbenchmarks_param "cholesky correlation gramschmidt floyd-warshall"
           ;;
       --checkproblematic)
           # cond-operator: cholesky, correlation
           # function call only: gramschmidt
           runallgeneralbenchmarks_param "reg_detect cholesky"
           ;;
       --checkfast)
           runallgeneralbenchmarks_param "atax jacobi-1d-imper"
           ;;
       --check)
           runallgeneralbenchmarks_param "$2"
		   ;;
	   --checkall)
		   runallgeneralbenchmarks_param "$all_benchmarks $all_longbenchmarks"
		   ;;
	   --list)
           echo $all_benchmarks $all_longbenchmarks
		   ;;

        --*) echo "bad option $1"
            ;;
        *) echo "argument $1"
            ;;
    esac


