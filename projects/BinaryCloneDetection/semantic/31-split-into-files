#!/usr/bin/perl
#
# Similar to the standard unix split(3) tool except it splits based on a pattern rather than the size of the files.  The pattern
# it looks for is the string '## CUT ##' anywhere on a line.
use strict;

my($prefix, $suffix_length) = ("x", 2);

while (@ARGV && $ARGV[0] =~ /^-/) {
    local $_ = shift @ARGV;
    /^(-p|--prefix)$/ && @ARGV and do { $prefix = shift; next };
    /^--prefix=(.*)/ and do { $prefix = $1; next };
    /^(-a|--sufix-length)$/ && @ARGV && $ARGV[0]=~/^\d+$/ and do { $suffix_length = shift; next };
    /^--suffix-length=(\d+)$/ and do { $suffix_length = $1; next };
    die "unknown switch: $_\n";
}

my $suffix = "a" x $suffix_length;

my $open = 0;
while (<ARGV>) {
    if (/## CUT ##/) {
	close PART if $open;
	$open = 0;
    } else {
	if (!$open) {
	    open PART, ">", "$prefix$suffix" or die "$prefix$suffix: $!\n";
	    ++$suffix;
	    $open = 1;
	}
	print PART $_;
    }
}
close PART if $open;
